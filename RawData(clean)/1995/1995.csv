"A diagnosis algorithm for constant degree structures and its application to VLSI circuit testing,""Kaiyuan Huang"; V. K. Agarwal; L. LaForge;" K. Thulasiraman"",""Microelectronics and Computer Systems Laboratory, McGill University, Montreal, QUE, Canada"; Microelectronics and Computer Systems Laboratory, McGill University, Montreal, QUE, Canada; Department of Electrical Engineering, University of Nevada, Reno, NV, USA;" Department of Electrical and Computer Engineering, Concordia University, Montreal, QUE, Canada"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""363"",""372"",""A simple diagnosis algorithm is presented for constant degree systems such as rectangular grids connected as tori. The algorithm determines the status of a unit according to the size of its faction, a cluster of units that call each other fault-free but outsiders faulty. Almost all units are correctly identified with this algorithm under a binomial failure distribution even when the probability of failure is rather high. The complexity of the algorithm is O(n), where n is the number of units in a constant degree system. The application of the algorithm to production testing of VLSI chips is also considered. With a test board that houses a large number of chips to be tested, all the chips can be tested in parallel in a way that they test each other and the test outcomes, not necessarily correct, are reported to a host system for analysis. The actual status of each chip is determined by using this new diagnosis algorithm. The above chip screening process can be repeated for higher accuracy. It is shown that no more than two steps are needed in most real situations. Compared with testing by test equipment that usually tests only one chip at a time, the saving of test time and the test equipment cost could be significant with our approach.<>"",""1558-2183"","""",""10.1109/71.372790"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372790"","""",""Very large scale integration";Circuit testing;System testing;Clustering algorithms;Fault diagnosis;Microelectronics;Circuit faults;Test equipment;Production;"Costs"","""",""19"",""1"",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;
"A family of fault-tolerant routing protocols for direct multiprocessor networks,""P. T. Gaughan";" S. Yalamanchili"",""Department of Electrical Engineering, Computer Architecture Research Laboratory, University of Alabama, Tuscaloosa, AL, USA";" Computer Systems Research Laboratory, School of Electrical and Computer Engineering, Georgia Institute of Technology, Atlanta, GA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""482"",""497"",""Our goal is to reconcile the conflicting demands of performance and fault-tolerance in interprocessor communication. To this end, we propose a pipelined communication mechanism-pipelined circuit-switching (PCS)-which is a variant of the well known wormhole routing (WR) mechanism. PCS relaxes some of the routing constraints imposed by WR and as a result enables routing behavior that cannot otherwise be realized. This paper presents a new class of adaptive routing algorithms-misrouting backtracking with m misroutes (MB-m). This class of routing algorithms is made possible by PCS. We provide an analysis of the performance and static fault-tolerant properties of MB-m. The results of an experimental evaluation of PCS and MB-3 are also presented. This methodology provides performance approaching that of WR, while realizing a level of resilience to static faults that is difficult to achieve with WR.<>"",""1558-2183"","""",""10.1109/71.382317"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382317"","""",""Fault tolerance";Routing protocols;System recovery;Delay;Personal communication networks;Circuit faults;Throughput;Laboratories;Performance analysis;"Resilience"","""",""131"","""",""26"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"A fast parallel algorithm for routing unicast assignments in Benes networks,""Ching-Yi Lee";" A. Y. Oruc"",""Electrical Engineering Department and Institutefor Advanced Computer Studies, University of Maryland, College Park, MD, USA";" Electrical Engineering Department and Institutefor Advanced Computer Studies, University of Maryland, College Park, MD, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""3"",""329"",""334"",""This paper presents a new parallel algorithm for routing unicast (one-to-one) assignments in Benes networks. Parallel routing algorithms for such networks were reported earlier, but these algorithms were designed primarily to route permutation assignments. The routing algorithm presented in this paper removes this restriction without an increase in the order of routing cost or routing time. We realize this new routing algorithm on two different topologies. The algorithm routes a unicast assignment involving O(k) pairs of inputs and outputs in O(lg/sup 2/ k+lg n) time on a completely connected network of n processors and in O(lg/sup 4/ k+lg/sup 2/ k lg n) time on an extended shuffle-exchange network of n processors. Using O(n lg n) professors, the same algorithm can be pipelined to route /spl alpha/ unicast assignments each involving O(k) pairs of inputs and outputs, in O(lg/sup 2/ k+lg n+(/spl alpha/-1) lg k) time on a completely connected network and in O(lg/sup 4/ k+lg/sup 2/ k lg n+(/spl alpha/-1)(lg/sup 3/ k+lg k lg n)) time on the extended shuffle-exchange network. These yield an average routing time of O(lg k) in the first case, and O(lg/sup 3/ k+1g k lg n) in the second case, for all /spl alpha/spl ges/lg n. These complexities indicate that the algorithm given in this paper is as fast as Nassimi and Sahni's algorithm for unicast assignments, and with pipelining, it is faster than the same algorithm at least by a factor of O(lg n) on both topologies. Furthermore, for sparse assignments, i.e., when k=O(1), it is the first algorithm which has an average routing time of O(1g n) on a topology with O(n) links.<>"",""1558-2183"","""",""10.1109/71.372780"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372780"","""",""Parallel algorithms";Routing;Unicast;Intelligent networks;Partitioning algorithms;Network topology;Algorithm design and analysis;Costs;Packet switching;"Multiprocessor interconnection networks"","""",""18"",""7"",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"A fault-tolerant algorithm for replicated data management,""S. Rangarajan"; S. Setia;" S. K. Tripathi"",""Department of Electrical and Computer Engineering, Northeastern University, Boston, MA, USA"; Department of Computer Science, George Mason University, Fairfax, VA, USA;" Department of Computer Science, University of Maryland, College Park, College Park, MD, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""12"",""1271"",""1282"",""We examine the tradeoff between message overhead and data availability that arises in the design of fault-tolerant algorithms for replicated data management in distributed systems. We propose a property called asymptotically high resiliency which is useful for evaluating the fault-tolerance of replica control algorithms and distributed mutual exclusion algorithms. We present a new algorithm for replica control that can be tailored (through a design parameter) to achieve the desired balance between low message overhead and high data availability. Further, we show that for a message overhead of O(/spl radic/(Nlog N)), our algorithm can achieve asymptotically high resiliency."",""1558-2183"","""",""10.1109/71.476168"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476168"","""",""Fault tolerance";Algorithm design and analysis;Partitioning algorithms;Availability;Fault tolerant systems;Distributed control;Computer science;Database systems;"Maintenance"","""",""24"","""",""29"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"A fault-tolerant distributed subcube management scheme for hypercube multicomputer systems,""Y. . -L. Chen";" J. . -C. Liu"",""Department of Computer Science, Texas A and M University, College Station, TX, USA";" Department of Computer Science, Texas A and M University, College Station, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""7"",""766"",""772"",""This paper proposes a fault-tolerant distributed subcube management scheme for hypercube multicomputer systems. Gracefully degradable subcube management is supported by a data structure, called the distributed subcube table (DST), and a fault-tolerant broadcast protocol, called the reliably synchronized broadcast (RSB). In an n-dimensional hypercube, DST is the collection of 2/sup n/ local subcube tables (LSTs), DST.<>"",""1558-2183"","""",""10.1109/71.395406"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=395406"","""",""Fault tolerant systems";Hypercubes;Fault tolerance;Broadcasting;Degradation;Data structures;Centralized control;Computational modeling;Tree graphs;"Time factors"","""",""3"","""",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"A general methodology of partitioning and mapping for given regular arrays,""Xian Chen";" G. M. Megson"",""University of Kent, Canterbury, UK";" Department of Computer Science, University of Reading, UK"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""10"",""1100"",""1107"",""A methodology for partitioning and mapping of arbitrary uniform recurrence equations (UREs) expressed as computation graphs onto a given regular array is proposed. Deriving and based on a set of canonical dependencies together with two models of space projection, we give a general method of parallelization. The method has significant advantages in mapping an arbitrary computation graph onto a given processor array while preserving high efficiency in both communication and computation.<>"",""1558-2183"","""",""10.1109/71.473518"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=473518"","""",""Difference equations";Processor scheduling;Topology;Computer architecture;Concurrent computing;"Computer science"","""",""5"",""4"",""14"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;
"A hierarchical approach to parallel multiquery scheduling,""J. L. Wolf"; J. Turek; Ming-Syan Chen;" P. S. Yu"",""IBM Research Division, IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA"; IBM Research Division, IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA; IBM Research Division, IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA;" IBM Research Division, IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""578"",""590"",""There has been a good deal of progress made recently toward the efficient parallelization of individual phases of single queries in multiprocessor database systems. In this paper we devise and experimentally evaluate a number of scheduling algorithms designed to handle multiple parallel queries. (Scheduling in this context implies the determination of both processor allotments and temporal processor assignments to individual queries and query phases.) One of these algorithms performs the best in our experiments. This algorithm is hierarchical in nature: In the first phase, a good quality precedence based schedule is created for each individual query and each possible number of processors. This component employs dynamic programming. In the second phase, the results of the first phase are used to create an overall schedule of the full set of queries. This component is based on previously published work on nonprecedence-based malleable scheduling. Even though the problem we are considering is NP-hard in the strong sense, the multiple query schedules generated by our hierarchical algorithm are seen experimentally to achieve high quality results.<>"",""1558-2183"","""",""10.1109/71.388035"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388035"","""",""Processor scheduling";Algorithm design and analysis;Scheduling algorithm;Database systems;Performance evaluation;Dynamic programming;"Relational databases"","""",""14"",""6"",""51"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"A hierarchical task queue organization for shared-memory multiprocessor systems,""S. P. Dandamudi";" P. S. P. Cheng"",""Centre for Parallel and Distributed Computing School of Computer Science, Carleton University, Ottawa, ONT, Canada";" Bell Northern Research Limited, Ottawa, ONT, Canada"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""1"",""16"",""There are two basic ways in which waiting ready tasks can be organized: centralized organization or distributed organization. In the centralized organization, a single central task queue is maintained. In the latter case, private ready queue of tasks. Ideally, a central ready queue global to all processors is desired over the distributed organization because the centralized organization provides perfect load sharing. However, the centralized organization is not suitable for large parallel systems because the central task queue could become a system bottleneck. The distributed organization, on the other hand, creates the load imbalance problem, which results in performance deterioration, while techniques have been proposed to reduce the ill-effects of task queue contention in the centralized organization and load imbalance in the distributed organization these techniques introduce problems of their own. We propose the use of a hierarchical task queue organization to incorporate the best features of these two organizations. Our study into the performance of this hierarchical organization shows that a properly designed hierarchical organization provides performance very close to that of the centralized organization while eliminating the ready queue contention problem, we also provide an analysis that identifies and provides guidance for designing the hierarchical task queue organization that avoids ready queue access contention. A brief discussion of task scheduling policies is also included.<>"",""1558-2183"","""",""10.1109/71.363415"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363415"","""",""Multiprocessing systems";Processor scheduling;Queueing analysis;Performance analysis;Parallel processing;System performance;Distributed computing;Computer science;Delay;"Degradation"","""",""31"",""5"",""30"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"A measurement-based model to predict the performance impact of system modifications: a case study,""R. T. Dimpsey";" R. K. Iyer"",""IBM, Austin, TX, USA";" Center for Reliable and High Performance Computing Coordinated Science Laboratory, University of Illinois, Urbana-Champaign, Urbana-Champaign, IL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""28"",""40"",""The paper presents a performance case study of parallel jobs executing in real multi user workloads. The study is based on a measurement based model capable of predicting the completion time distribution of the jobs executing under real workloads. The model constructed is also capable of predicting the effects of system design changes on application performance. The model is a finite state, discrete time Markov model with rewards and costs associated with each state. The Markov states are defined from real measurements and represent system/workload states in which the machine has operated. The paper places special emphasis on choosing the correct number of states to represent the workload measured. Specifically, the performance of computationally bound, parallel applications executing in real workloads on an Alliant FX/80 is evaluated. The constructed model is used to evaluate scheduling policies, the performance effects of multiprogramming overhead, and the scalability of the Alliant FX/8O in real workloads. The model identifies a number of available scheduling policies which would improve the response time of parallel jobs. In addition, the model predicts that doubling the number of processors in the current configuration would only improve response time for a typical parallel application by 25%. The model recommends a different processor configuration to more fully utilize extra processors. The paper also presents empirical results which validate the model created.<>"",""1558-2183"","""",""10.1109/71.363413"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363413"","""",""Predictive models";Computer aided software engineering;Application software;Processor scheduling;Delay;Computer applications;Concurrent computing;Scalability;"Costs"","""",""6"",""8"",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"A memory interference model for regularly patterned multiple stream vector accesses,""Qing Yang";" Tao Yang"",""Department of Electrical and Computer Engineering, University of Rhode Island, Kingston, RI, USA";" Department of Industrial Engineering, Technical University of Nova Scotia, Halifax, NS, Canada"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""520"",""530"",""Most existing analytical models for memory interference generally assume random bank selection for each memory access. In vector computers, however, memory accesses are typically regularly patterned with a number of data items being accessed concurrently from different banks. Very little is known about the queueing behavior of memory interferences in multiple stream vector accesses. This paper presents an analytical model for memory interferences due to vector accesses in multiple vector processor systems. The model captures the effects of both bank conflicts among elements within one vector access stream and conflicts among multiple vector access streams on system performance. The model is based on a closed queueing network assuming an ideal interconnection network. An approximation technique is proposed to solve the memory queueing system that serves customers in a complicated way (non-FIFO). We also carry out extensive simulation experiments to study memory interference and validate our analytical model. Simulation results and analytical results are in a very good agreement, indicating that the model is very accurate. We further validate our analysis by comparing the numerical results obtained from our analytical model with those measurement results that were published by other researchers. Based on our analytical model and simulations, we carry out performance evaluation of the multiple vector processor systems. Our numerical results show that memory access conflicts pose a severe limitation on the number of useful processors in the system, implying that memory system design is essential to high-performance computing.<>"",""1558-2183"","""",""10.1109/71.382320"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382320"","""",""Interference";Analytical models;Vector processors;Multiprocessor interconnection networks;Concurrent computing;System performance;Computational modeling;Computer architecture;Memory architecture;"Supercomputers"","""",""1"","""",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"A multiway merge sorting network,""De-Lei Lee";" K. E. Batcher"",""Department of Computer Science, York University, North York, ONT, Canada";" Department of Mathematics and Computer Science, Kent University, Kent, OH, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""211"",""215"",""A multiway merge sorting network is presented, which generalizes the technique used in the odd-even merge sorting network. The merging network described here is composed of m k-way mergers and a combining network. It arranges k ordered lists of length n each into one ordered lists in T(k)+[log/sub 2/k] [log/sub 2/m] [log/sub 2/m] steps, where T(k) is the number of steps needed to sort k keys in order";" and k and m are any integers no longer restricted to 2.<>"",""1558-2183"","""",""10.1109/71.342136"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342136"","""",""Sorting";Corporate acquisitions;Merging;Delay effects;Parallel processing;Computer science;Councils;"Mathematics"","""",""24"",""2"",""3"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"A necessary and sufficient condition for deadlock-free adaptive routing in wormhole networks,""J. Duato"",""Facultad de Informiitica, Universidad Politecnica de Valencia, Valencia, Spain"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""10"",""1055"",""1067"",""Deadlock avoidance is a key issue in wormhole networks. A first approach by W.J. Dally and C.L. Seitz (1987) consists of removing the cyclic dependencies between channels. Many deterministic and adaptive routing algorithms have been proposed based on that approach. Although the absence of cyclic dependencies is a necessary and sufficient condition for deadlock-free deterministic routing, it is only a sufficient condition for deadlock-free adaptive routing. A more powerful approach by J. Duato (1991) only requires the absence of cyclic dependencies on a connected channel subset. The remaining channels can be used in almost any way. In this paper, we show that the previously mentioned approach is also a sufficient condition. Moreover, we propose a necessary and sufficient condition for deadlock-free adaptive routing. This condition is the key for the design of fully adaptive routing algorithms with minimum restrictions, An example shows the application of the new theory.<>"",""1558-2183"","""",""10.1109/71.473515"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=473515"","""",""Sufficient conditions";System recovery;Routing;Intelligent networks;Algorithm design and analysis;Bandwidth;Multiprocessor interconnection networks;Delay;Adaptive systems;"Application software"","""",""266"","""",""28"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"A new approach for the verification of cache coherence protocols,""Fong Pong";" M. Dubois"",""Sun Microsystems Computer Company, Mountain View, CA, USA";" Department of Electrical Engineering-Systems, University of Southern California, Los Angeles, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""773"",""787"",""We introduce a cache protocol verification technique based on a symbolic state expansion procedure. A global Finite State Machine (FSM) model characterizing the protocol behavior is built and protocol verification becomes equivalent to finding whether or not the global FSM may enter erroneous states. In order to reduce the complexity of the state expansion process, all the caches in the same state are grouped into an equivalence class and the number of caches in the class is symbolically represented by a repetition constructor. This symbolic representation is partly justified by the symmetry and homogeneity of cache-based systems. However, the key idea behind the representation is to exploit a unique property of cache coherence protocols: the fact that protocol correctness is not dependent on the exact number of cached copies. Rather, symbolic states only need to keep track of whether the caches have 0, 1, or multiple copies. The resulting symbolic state expansion process only takes a few steps and verifies the protocol for any system size. Therefore, it is more efficient and reliable than current approaches. The verification procedure is first applied to the verification of five existing protocols under the assumption of atomic protocol transitions. A simple snooping protocol on a split-transaction shared bus is also verified to illustrate the extension of our approach to protocols with nonatomic transitions.<>"",""1558-2183"","""",""10.1109/71.406955"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406955"","""",""Automata";Access protocols;Testing;Coherence;Reachability analysis;Computer Society;Formal verification;Delay;Electronic mail;"Sun"","""",""52"","""",""30"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"A notation for deterministic cooperating processes,""K. Mani Chandy";" I. Foster"",""California Institute of Technology, Pasadena, CA, USA";" Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, IL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""863"",""871"",""This paper proposes extensions of sequential programming languages for parallel programming that have the following features: 1) Dynamic Structures: The process structure is dynamic. Processes and variables can be created and deleted. 2) Paradigm Integration: The programming notation supports shared memory and message passing models. 3) Determinism: Demonstrating that a program is deterministic-all executions with the same input produce the same output-is straightforward, Programs can be written so that compilers can verify that the programs are deterministic. Nondeterministic constructs can be introduced in a sequence of refinement steps to obtain greater efficiency if required. The ideas have been incorporated in an extension of Fortran, but the underlying sequential imperative language is not central to the ideas described here. A compiler for the Fortran extension, called Fortran M, is available by anonymous ftp From Argonne National Laboratory. Fortran M has been used for a variety of parallel applications.<>"",""1558-2183"","""",""10.1109/71.406962"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406962"","""",""Dynamic programming";Program processors;Laboratories;Functional programming;Protocols;Parallel programming;Message passing;Computer languages;Debugging;"Operating systems"","""",""6"","""",""24"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"A parallel simulated annealing algorithm with low communication overhead,""T. M. Nabhan";" A. Y. Zomaya"",""Parallel Computing Research Laboratory, Department of Electrical and Electronic Engineering, University of Western Australia, Perth, Australia";" Parallel Computing Research Laboratory, Department of Electrical and Electronic Engineering, University of Western Australia, Perth, Australia"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""12"",""1226"",""1233"",""In this paper, we propose a parallel simulated annealing algorithm based on the technique presented by Witte et al. (1991) but with low communication overhead. The performance of our proposed algorithm is significantly better than the method presented by Witte et al., particularly for optimization problems where the time required to communicate the solution is comparable to the evaluation time. The efficiency of the technique is demonstrated using two case studies with good results."",""1558-2183"","""",""10.1109/71.476165"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476165"","""",""Simulated annealing";Computational modeling;Convergence;Cost function;Australia;Optimization methods;Scheduling algorithm;Message passing;Processor scheduling;"Traveling salesman problems"","""",""32"","""",""15"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"A parallelism analyzer for conservative parallel simulation,""Yung-Chang Wong"; Shu-Yuen Hwang;" Jason Yi-Bing Lin"",""Department of Computer Science and Information Engineering, National Chiao Tung University, Hsinchu, Taiwan"; Bellcore, Morristown, NJ, USA;" Department of Computer Science and Information Engineering, National Chiao Tung University, Hsinchu, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""628"",""638"",""Most small-scale simulation applications are implemented by sequential simulation techniques. As the problem size increases, however, sequential techniques may be unable to manage the time complexity of the simulation applications adequately. It is natural to consider re-implementing the corresponding large-scale simulations using parallel techniques, which have been reported to be successful in reducing the time complexity for several examples. However, parallel simulation may not be effective for every application. Since the implementation of parallel simulation for an application is usually very expensive, it is required to investigate the performance of parallel simulation for a particular application before re-implementing the simulation. The Chandy-Misra parallel, discrete-event simulation paradigm has been utilized in many large-scale simulation experiments, and several significant extensions have been based on it. Hence the Chandy-Misra protocol is adopted here as a basic model of parallel simulation to which our performance prediction techniques are applied. For an existing sequential simulation program based on the process interaction model, this paper proposes a technique for evaluating Chandy-Misra parallel simulation without actually implementing the parallel program. The idea is to insert parallelism analysis code into the sequential simulation program. When the modified sequential program is executed, the time complexity of the parallel simulation based on the Chandy-Misra protocol is computed. Our technique has been used to determine whether a giant Signaling System 7 simulation (sequential implementation) should be re-implemented using the parallel simulation approach.<>"",""1558-2183"","""",""10.1109/71.388043"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388043"","""",""Analytical models";Computational modeling;Parallel processing;Discrete event simulation;Protocols;Algorithm design and analysis;Predictive models;Concurrent computing;Application software;"Large-scale systems"","""",""11"",""1"",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"A scalable scheduling scheme for functional parallelism on distributed memory multiprocessor systems,""S. Pande"; D. P. Agrawal;" J. Mauney"",""Computer Science Department, Ohio University, Athens, OH, USA"; ECE Department, North Carolina State University, Raleigh, NC, USA;" Raleigh, NC, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""388"",""399"",""We attempt a new variant of the scheduling problem by investigating the scalability of the schedule length with the required number of processors, by performing scheduling partially at compile time and partially at run time. Assuming infinite number of processors, the compile time schedule is found using a new concept of the threshold of a task that quantifies a trade-off between the schedule-length and the degree of parallelism. The schedule is found to minimize either the schedule length or the number of required processors and it satisfies: A feasibility condition which guarantees that the schedule delay of a task from its earliest start time is below the threshold, and an optimality condition which uses a merit function to decide the best task-processor match for a set of tasks competing for a given processor. At run time, the tasks are merged producing a schedule for a smaller number of available processors. This allows the program to be scaled down to the processors actually available at run time. Usefulness of this scheduling heuristic has been demonstrated by incorporating the scheduler in the compiler backend for targeting Sisal (Streams and Iterations in a Single Assignment Language) on iPSC/860.<>"",""1558-2183"","""",""10.1109/71.372792"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372792"","""",""Multiprocessing systems";Processor scheduling;Optimal scheduling;Parallel processing;Scheduling algorithm;Costs;Dynamic scheduling;Scalability;Delay effects;"Runtime"","""",""37"",""1"",""30"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"A theory of deadlock-free adaptive multicast routing in wormhole networks,""J. Duato"",""Departmento de Ingenieria de Sistemas, Computadores y Automitica, Universidad Politécnica de Valencia, Valencia, Spain"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""9"",""976"",""987"",""A theory for the design of deadlock-free adaptive routing algorithms for wormhole networks, proposed by the author (1991, 1993), supplies sufficient conditions for an adaptive routing algorithm to be deadlock-free, even when there are cyclic dependencies between channels. Also, two design methodologies were proposed. Multicast communication refers to the delivery of the same message from one source node to an arbitrary number of destination nodes. A tree-like routing scheme is not suitable for hardware-supported multicast in wormhole networks because it produces many headers for each message, drastically increasing the probability of a message being blocked. A path-based multicast routing model was proposed by Lin and Ni (1991) for multicomputers with 2D-mesh and hypercube topologies. In this model, messages are not replicated at intermediate nodes. This paper develops the theoretical background for the design of deadlock-free adaptive multicast routing algorithms. This theory is valid for wormhole networks using the path-based routing model. It is also valid when messages with a single destination and multiple destinations are mixed together. The new channel dependencies produced by messages with several destinations are studied. Also, two theorems are proposed, developing conditions to verify that an adaptive multicast routing algorithm is deadlock-free, even when there are cyclic dependencies between channels. As an example, the multicast routing algorithms of Lin and Ni are extended, so that they can take advantage of the alternative paths offered by the network.<>"",""1558-2183"","""",""10.1109/71.466634"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=466634"","""",""System recovery";Intelligent networks;Algorithm design and analysis;Multicast algorithms;Multiprocessor interconnection networks;Sufficient conditions;Multicast communication;Routing protocols;Communication system control;"Hypercubes"","""",""38"",""6"",""39"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"A total ordering multicast protocol using propagation trees,""Xiaohua Jia"",""Department of Computer Science, University of Queensland, Saint Lucia, QLD, Australia"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""617"",""627"",""The paper discusses a multicast mechanism using propagation trees. It guarantees the total ordering (including causal ordering) of messages in multiple groups. The mechanism introduces a concept of meta-groups (a subset of a multicast group) and organizes meta-groups into propagation trees. Compared with the existing propagation tree mechanisms, this mechanism has the following advantages: 1) Greater parallelism. Messages can be sent to destinations by using broadcast networks. 2) Less message cost and less latency time. It takes less network communication to multicast a message and less time to have the message delivered to all the destinations. 3) More flexibility to dynamic membership changes and higher reliability for message propagation. It does not need to restructure propagation trees when there is a change in membership, and a site failure does not stop the message propagation to its descendants in the tree.<>"",""1558-2183"","""",""10.1109/71.388042"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388042"","""",""Multicast protocols";Multicast communication;Broadcasting;Costs;Delay;Telecommunication network reliability;Computer science;Australia;Operating systems;"Load management"","""",""33"",""1"",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"A trace-driven simulator for performance evaluation of cache-based multiprocessor systems,""C. A. Prete"; G. Prina;" L. Ricciardi"",""Dipmimento di Ingegneria delllnformazione, Pisa University, Italy"; Scuola Superiore Universitari e di Perfeziona mento Sant Anna, Pisa, Italy;" Dipmimento di Ingegneria delllnformazione, Pisa University, Italy"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""9"",""915"",""929"",""We describe a simulator which emulates the activity of a shared memory, common bus multiprocessor system with private caches. Both kernel and user program activities are considered, thus allowing an accurate analysis and evaluation of coherence protocol performance. The simulator can generate synthetic traces, based on a wide set of input parameters which specify processor, kernel and workload features. Other parameters allow us to detail the multiprocessor architecture for which the analysis has to be carried out. An actual-trace-driven simulation is possible, too, in order to evaluate the performance of a specific multiprocessor with respect to a given workload, if traces concerning this workload are available. In a separate section, we describe how actual traces can also be used to extract a set of input parameters for synthetic trace generation. Finally, we show how the simulator may be successfully employed to carry out a detailed performance analysis of a specific coherence protocol.<>"",""1558-2183"","""",""10.1109/71.466630"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=466630"","""",""Multiprocessing systems";Read-write memory;Computational modeling;Performance analysis;Kernel;Analytical models;Access protocols;Computer Society;"Computer simulation"","""",""30"",""2"",""29"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"A well-behaved enumeration of star graphs,""N. Bagherzadeh"; M. Dowd;" S. Latifi"",""University of California, Irvine, CA, USA"; University of California, Irvine, CA, USA;" University of Nevada, Las Vegas, NV, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""531"",""535"",""An enumeration of star graphs is given which has many useful properties. For example an arbitrary prefix or suffix is connected";" indeed the diameter is O(n). As a consequence, there is an O(n) interval broadcast algorithm. Prefixes which have t(n-1)! vertices for some t are especially well-behaved. The topology of, embeddings in, and algorithms for these graphs are considered, making use of the enumeration.<>"",""1558-2183"","""",""10.1109/71.382321"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382321"","""",""Hypercubes";Broadcasting;Network topology;Multiprocessor interconnection networks;Routing;Tree graphs;Fourier transforms;Algorithms;Orbits;"Communication networks"","""",""17"","""",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"Advanced array optimizations for high performance functional languages,""D. C. Cann";" P. Evripidou"",""Software Division Colorado Springs, Cray Computer Corporation, Inc., CO, USA";" Department of Computer Science and Engineering, Southern Methodist University, Dallas, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""3"",""229"",""239"",""We discuss and evaluate three optimizations for reducing memory management overhead and data copying costs in SISAL 1.2 programs that build arrays. The first, called framework preconstruction, eliminates superfluous allocate-deallocate sequences in cyclic computations. The second, called aggregate storage subsumption, reduces the management overhead for compound array components. The third, called predictive storage preallocation, eliminates superfluous data copying in filtered array constructions and simplifies their parallelization. We have added all three optimizations to the Optimizing SISAL Compiler with rewarding improvements in SISAL program performance on vector-parallel machines such as those built by Cray Computer Corporation, Convex, and Cray Research.<>"",""1558-2183"","""",""10.1109/71.372771"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372771"","""",""Aggregates";Optimizing compilers;Memory management;Laboratories;Cost function;Program processors;Parallel processing;Concurrent computing;Contracts;"Military computing"","""",""8"",""5"",""40"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Algorithms and properties of a new two-level network with folded hypercubes as basic modules,""D. . -R. Duh"; G. . -H. Chen;" J. . -F. Fang"",""Department of Electronic Engineering, Hwa Hsia Junior College, Taipei, Taiwan"; Department of Computer Science and Information Engineering, National Taiwan University, Taipei, Taiwan;" Department of Computer Science, National Tsing Hua University, Hsinchu, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""7"",""714"",""723"",""In this paper, a new two-level interconnection network, called a hierarchical folded-hypercube network (HFN, for short), is proposed. The HFN takes folded hypercubes as basic modules which are connected in a complete manner. We investigate the topological properties of the HFN, including the diameter, cost, average distance, embedding, connectivity, container, /spl kappa/-wide diameter, and node-fault diameter. We show that the HFN can emulate algorithms which are executable on the ring or the mesh-connected computer with the same time complexities in big-O notation. Moreover, the HFN can embed a folded hypercube having the same number of nodes with constant dilation. We compute the diameter, node connectivity, best container, /spl kappa/-wide diameter, and node-fault diameter of the HFN. We present optimal routing and broadcasting algorithms for the HFN. The semigroup computation and descend/ascend algorithms can be executed as well on the HFN.<>"",""1558-2183"","""",""10.1109/71.395400"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=395400"","""",""Hypercubes";Routing;Integrated circuit interconnections;Containers;Broadcasting;Computer science;Costs;Computer architecture;Multiprocessing systems;"Topology"","""",""64"","""",""27"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Allocation and scheduling of precedence-related periodic tasks,""K. Ramamritham"",""Department of Computer Science and Engineering, Indian Institute of Technology, Chennai, India"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""412"",""420"",""This paper discusses a static algorithm for allocating and scheduling components of periodic tasks across sites in distributed systems. Besides dealing with the periodicity constraints, (which have been the sole concern of many previous algorithms), this algorithm handles precedence, communication, as well as replication requirements of subtasks of the tasks. The algorithm determines the allocation of subtasks of periodic tasks to sites, the scheduled start times of subtasks allocated to a site, and the schedule for communication along the communication channel(s). Simulation results show that the heuristics and search techniques incorporated in the algorithm are very effective.<>"",""1558-2183"","""",""10.1109/71.372795"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372795"","""",""Scheduling algorithm";Real time systems;Orbital robotics;Robotics and automation;Space stations;Production facilities;Command and control systems;Processor scheduling;Information science;"Computer science"","""",""126"",""56"",""20"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"An (N-1)-resilient algorithm for distributed termination detection,""Ten-Hwang Lai";" Li-Fen Wu"",""Department of Computer and Information Science, Ohio State Uinversity, Columbus, OH, USA";" Department of Computer and Information Science, Ohio State Uinversity, Columbus, OH, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""63"",""78"",""The paper presents a fault tolerant termination detection algorithm based on a previous fault sensitive scheme by Dijkstra and Scholten. The proposed algorithm can tolerate any number of crash failures. It runs as efficiently as its nonfault tolerant predecessor if no process actually fails during the computation, and otherwise incurs only a small amount of cost for each actual failure. It is assumed that the underlying communication network provides such services as reliable end to end communication, failure detection, and fail flush.<>"",""1558-2183"","""",""10.1109/71.363410"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363410"","""",""Fault detection";Detectors;Fault tolerance;Fault tolerant systems;Costs;Communication networks;Telecommunication network reliability;Protocols;Face detection;"Information science"","""",""26"","""",""26"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"An adaptive fault-tolerant routing algorithm for hypercube multicomputers,""Y. Lan"",""Department of Computer Science, University of Missouri, Columbia, Columbia, MO, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""11"",""1147"",""1152"",""This paper presents a partially adaptive fault-tolerant routing algorithm for hypercube multicomputers. The algorithm is tolerant to n-1 link and/or node faults for an n-cube. It makes routing decisions adaptively based on local failure information only. It is simple to implement and needs a very small message overhead. A comparison between the algorithm and a popular previous work is given."",""1558-2183"","""",""10.1109/71.476186"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476186"","""",""Fault tolerance";Routing;Hypercubes;Joining processes;Computer Society;Computer networks;Multiprocessor interconnection networks;Control systems;Concurrent computing;"Topology"","""",""24"","""",""8"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"An asynchronous distributed approach for the simulation of behavior-level models on parallel processors,""S. Ghosh";" Meng-Lin Yu"",""Computer Science and Engineering Department, Arizona State University, Tempe, AZ, USA";" AT and T Bell Laboratories, Inc., Holmdel, NJ, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""639"",""652"",""Traditional approaches to the distributed simulation of digital designs are limited in that they are inefficient and prone to deadlock for systems with feedback loops. This paper proposes an asynchronous distributed algorithm to the simulation and verification of behavior-level models and describes its implementation on an actual loosely-coupled parallel processor. The approach is relatively efficient for realistic digital designs and mathematically shown to be deadlock free. Additionally, it includes a new technique for modeling the timing of digital systems that guarantees the accuracy of the simulation results. In the discipline of computer-aided design of digital systems, a behavior model refers to a compact and executable representation of the activities of a complex digital component or an entire digital system such as the Motorola 68000, expressed through a high-level hardware description language such as ADLIB or VHDL. Behavior models are popular because of their flexibility";" however, they execute excruciatingly slow on uniprocessor computers. The approach presented in this paper has the potential to significantly reduce the execution time through concurrent execution on multiple processors.<>"",""1558-2183"","""",""10.1109/71.388044"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388044"","""",""Digital systems";Computational modeling;System recovery;Discrete event simulation;Computer simulation;Engines;Timing;Design automation;Job shop scheduling;"Processor scheduling"","""",""19"",""3"",""49"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"An inherently parallel method for heuristic problem-solving. I. General framework,""I. Pramanick";" J. G. Kuhl"",""ASD, Performance Engineering, Silicon Graphics, Inc., Mountain View, CA, USA";" Electrical & Computer Engineering, University of Iowa, Iowa, IA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""10"",""1006"",""1015"",""The class of NP-hard problems contains many problems of considerable practical importance. The complexity of these problems is so overwhelming that exhaustive search of the solution space is not possible even using massively parallel search techniques, particularly for problems of super-exponential complexity such as flow-shop and job-shop scheduling. This two-part paper discusses a novel, inherently parallel heuristic solution technique. Part I presents this technique, known as parallel dynamic interaction (PDI), as a general solution framework that is applicable to a number of computationally intractable problems, and gives details of its general methodology. From a parallel processing standpoint, PDI is interesting because it is inherently based upon the dynamic interplay between simultaneously executing subproblems. As such, PDI has no direct serial analog, and is not directly amenable to conventional parallel processing speedup analysis. This may provide an indication that parallel processing can offer opportunities beyond simply speeding up the solution of sequentially specified algorithms. From a practical problem-solving perspective, PDI shows promise as a method capable of generating high quality solutions to exponentially and super-exponentially hard problems. For large problems, PDI is often able to find a near-optimal solution many orders of magnitude faster than the time taken for a conventional parallel branch-and-bound search to find a solution of comparable quality.<>"",""1558-2183"","""",""10.1109/71.473511"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=473511"","""",""Problem-solving";Parallel processing;NP-hard problem;Processor scheduling;Concurrent computing;"Parallel machines"","""",""7"","""",""13"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;
"An inherently parallel method for heuristic problem-solving. II. Example applications,""I. Pramanick";" J. G. Kuhl"",""ASD Performance Engineering, Silicon Graphics, Inc., Mountain View, CA, USA";" Electrical and Computer Engineering, University of Iowa, Iowa, IA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""10"",""1016"",""1028"",""For pt.I. see ibid., p.1006-15. This paper presents the application of parallel dynamic interaction (PDI) to three real problem domains: the flowshop scheduling problem, the job-shop scheduling problem and the vertex cover problem. Specific examples are provided as to how the general PDI framework, introduced in part I of this paper, can be applied to a particular problem. The results of an empirical study of 90 example instances of these problems indicate that PDI consistently out-performs previously published heuristics for the vertex cover problem, and can typically generate solutions within a few percent of optimal for flow-shop and job-shop problems. Out of the 76 examples for which the optimal solution could be determined, PDI was able to produce results averaging within 4% of optimal. In over 30% of the cases, PDI was able to find the optimal solution. In no case did the PDI solution deviate more than 15% from optimal. It is also seen that the time taken by PDI to arrive at these solutions is negligible compared to that taken by conventional search techniques. This provides strong empirical evidence that PDI is capable of generating high quality solutions to exponentially and super-exponentially hard problems in reasonably short periods of time.<>"",""1558-2183"","""",""10.1109/71.473512"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=473512"","""",""Problem-solving";Job shop scheduling;Graph theory;Heuristic algorithms;Scheduling algorithm;Tail;Variable speed drives;Silicon;Computer graphics;"Cities and towns"","""",""3"","""",""29"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"An integrated runtime and compile-time approach for parallelizing structured and block structured applications,""G. Agrawal"; A. Sussman;" J. Saltz"",""Department of Computer Science, University of Maryland, College Park, MD, USA"; UMIACS and the Department of Computer Science, University of Maryland, College Park, MD, USA;" UMIACS and the Department of Computer Science, University of Maryland, College Park, MD, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""7"",""747"",""754"",""In compiling applications for distributed memory machines, runtime analysis is required when data to be communicated cannot be determined at compile-time. One such class of applications requiring runtime analysis is block structured codes. These codes employ multiple structured meshes, which may be nested (for multigrid codes) and/or irregularly coupled (called multiblock or irregularly coupled regular mesh problems). In this paper, we present runtime and compile-time analysis for compiling such applications on distributed memory parallel machines in an efficient and machine-independent fashion. We have designed and implemented a runtime library which supports the runtime analysis required. The library is currently implemented on several different systems. We have also developed compiler analysis for determining data access patterns at compile time and inserting calls to the appropriate runtime routines. Our methods can be used by compilers for HPF-like parallel programming languages in compiling codes in which data distribution, loop bounds and/or strides are unknown at compile-time. To demonstrate the efficacy of our approach, we have implemented our compiler analysis in the Fortran 90D/HPF compiler developed at Syracuse University. We have experimented with a multi-bloc Navier-Stokes solver template and a multigrid code. Our experimental results show that our primitives have low runtime communication overheads and the compiler parallelized codes perform within 20% of the codes parallelized by manually inserting calls to the runtime library.<>"",""1558-2183"","""",""10.1109/71.395403"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=395403"","""",""Runtime library";Parallel machines;Program processors;Parallel programming;Data analysis;Pattern analysis;High performance computing;Uninterruptible power systems;Bandwidth;"Delay"","""",""57"","""",""26"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"An interface to a reliable packet delivery service for parallel systems,""M. Debbage"; M. B. Hill;" D. A. Nicole"",""Architecture Group of INMOS Limited, Bristol, UK"; Architecture Group of INMOS Limited, Bristol, UK;" Department of Electronics and Computer Science, University of Southampton, Southampton, UK"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""400"",""411"",""Modern distributed memory parallel computers provide hardware support for the efficient and reliable delivery of interprocessor messages. This facility needs to be accessed by lightweight protocols that do not waste the performance of the underlying hardware";" the heavyweight layering techniques traditionally used in distributed systems are wholly inappropriate. A low-level communication interface is therefore presented which exploits modern architectures effectively, while maintaining a good match to existing parallel programming environments. The interface defines mechanisms to access an asynchronous reliable packet delivery service. It permits messaging protocols to be efficiently synthesized by considering the activity at their end-points alone. This arrangement effectively decouples the implementation of protocols from low-level architectural features, and hence aids the portability of parallel programming environments. Furthermore, the interface allows the communication network to be shared by multiple programming paradigms, giving additional flexibility over existing systems.<>"",""1558-2183"","""",""10.1109/71.372793"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372793"","""",""Hardware";Concurrent computing;Access protocols;Programming environments;Parallel programming;Communication networks;Parallel processing;Parallel languages;Computer architecture;"Topology"","""","""","""",""40"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"An optimal broadcasting algorithm without message redundancy in star graphs,""Jang-Ping Sheu"; Chao-Tsung Wu;" Tzung-Shi Chen"",""Department of Computer Science and InformationEngineering, National Central University, Chungli, Taiwan"; Department of Computer Science and InformationEngineering, National Central University, Chungli, Taiwan;" Department of Computer Science and InformationEngineering, National Central University, Chungli, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""653"",""658"",""Based on the V.E. Mendia and D. Sarkar's algorithm (1992), we propose an optimal and nonredundant distributed broadcasting algorithm in star graphs. For an n-dimensional star graph, our algorithm takes O(n log/sub 2/ n) time and guarantees that all nodes in the star graph receive the message exactly once. Moreover, broadcasting m packets in a pipeline fashion takes O(m log/sub 2/ n+n log/sub 2/ n) time due to the nonredundant property of our broadcasting algorithm.<>"",""1558-2183"","""",""10.1109/71.388046"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388046"","""",""Broadcasting";Partitioning algorithms;Pipelines;Chaotic communication;Multiprocessor interconnection networks;Distributed computing;Telecommunication traffic;Traffic control;Councils;"Computer science"","""",""50"",""4"",""9"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"An optimal instruction scheduler for superscalar processor,""Hong-Chich Chou";" Chung-Ping Chung"",""Institute of Computer Science and Information Engineering, National Chiao Tung University, Hsinchu, Taiwan";" Institute of Computer Science and Information Engineering, National Chiao Tung University, Hsinchu, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""3"",""303"",""313"",""Performance in superscalar processing strongly depends on the compiler's ability to generate codes that can be executed by hardware in an optimal or near optimal order. Generating optimal code is an NP-complete problem. However, there is a need for highly optimized code, such as in superscalar or real-time systems. In this paper, an instruction scheduling scheme for optimizing a program trace is proposed. Optimized code can be arrived at without much redundant work, if some important features in code are well explored and utilized in scheduling. To formalize the task, two abstract models, one for a superscalar processor and the other for a program trace, are given. These two models reflect most of the characteristics of the scheduling problem. The interrelations between instructions and partial schedules are thoroughly studied, and dominance and equivalence relations on them are defined. These relations are then used to reduce the solution space and eventually help to produce optimal schedules. The results of experiments that show the promise of the proposed scheme are also presented.<>"",""1558-2183"","""",""10.1109/71.372778"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372778"","""",""Processor scheduling";Optimal scheduling;Hardware;Delay;Design optimization;Clocks;NP-complete problem;Real time systems;Councils;"Computer science"","""",""29"",""1"",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Analysis of finite buffered multistage combining networks,""G. Lee"; B. . -C. Kang;" R. Y. Kain"",""Department of Electrical Engineering, University of Minnesota, Minneapolis, MN, USA"; Samsung Electronics Company Limited, Seoul, South Korea;" Department of Electrical Engineering, University of Minnesota, Minneapolis, MN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""7"",""760"",""766"",""Analyzing the performance of finite buffered multistage networks has been considered a difficult task because of dynamic blocking effects due to finite sized buffers. With the multistage networks enhanced with combining capability, in which multiple requests directed to a shared location combine together to form a single request to be forwarded, the analysis becomes even more difficult due to the interactions between combining probability and queuing delay. Performance bounds for combining networks are known under two extreme assumptions: infinite combining queues and saturated finite combining queues. We analyze multistage combining networks with the consideration of blocking due to finite combining queues. Our analysis provides iterative solutions for combining probability, blocking probability, and queuing delay.<>"",""1558-2183"","""",""10.1109/71.395405"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=395405"","""",""Queueing analysis";Switches;Telecommunication traffic;Traffic control;Multiprocessor interconnection networks;Performance analysis;Packet switching;Delay;Parallel machines;"Hardware"","""",""1"","""",""17"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Annealed embeddings of communication patterns in an interconnection cached network,""V. Gupta";" E. Schenfeld"",""Department of Computer Science, State University of New York, Binghamton, NY, USA";" NEC Research Institute, Inc., Princeton, NJ, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""11"",""1153"",""1167"",""The communication needs of many parallel applications exhibit what we call switching locality. In such applications, each computation entity (process, thread, etc.) tends to restrict its communication to a small set of other entities. The physical location or proximity of these entities can be arbitrary, as long as the communication degree is small. The Interconnection Cached Network (ICN) is a reconfigurable network ideally suited for exploiting such locality. The use of fast small crossbar switches (Interconnection Caches) with a larger, but slower, reconfigurable network (optimized for connectivity) lets the ICN adapt to the communication requirements of individual applications, potentially achieving higher performance. Embedding communication patterns efficiently in an ICN, requires finding a bounded l-contraction of the underlying communication graph. The problem of identifying whether a graph has a bounded and l-contraction for a given integer l is known to be NP-complete for l>2. We describe a heuristic algorithm based on simulated annealing for this problem. We test the effectiveness of our approach by using it to embed graphs, representing regular communication patterns, for which the best solutions are deterministically known. The algorithm does not rely on any structural information of the communication pattern and is therefore applicable to irregular patterns as well. The results of applying our heuristics to embed such irregular graphs are also presented."",""1558-2183"","""",""10.1109/71.476187"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476187"","""",""Intelligent networks";Switches;Communication switching;Delay;Multiprocessor interconnection networks;Network topology;Simulated annealing;Lattices;Centralized control;"Computer applications"","""",""1"","""",""38"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Asynchronous problems on SIMD parallel computers,""W. Shu";" M. . -Y. Wu"",""Department of Computer Science, State University of New York, University at Buffalo, Buffalo, NY, USA";" Department of Computer Science, State University of New York, University at Buffalo, Buffalo, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""7"",""704"",""713"",""One of the essential problems in parallel computing is: Can SIMD machines handle asynchronous problems? This is a difficult, unsolved problem because of the mismatch between asynchronous problems and SIMD architectures. We propose a solution to let SIMD machines handle general asynchronous problems. Our approach is to implement a runtime support system which can run MIMD-like software on SIMD hardware. The runtime support system, named P kernel, is thread-based. There are two major advantages of the thread-based model. First, for application problems with irregular and/or unpredictable features, automatic scheduling can move some threads from overloaded processors to underloaded processors. Second, and more importantly, the granularity of threads can be controlled to reduce system overhead. The P kernel is also able to handle bookkeeping and message management, as well as to make these low-level tasks transparent to users. Substantial performance has been obtained on Maspar MP-1.<>"",""1558-2183"","""",""10.1109/71.395399"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=395399"","""",""Concurrent computing";Kernel;Parallel processing;Computer architecture;Hardware;Application software;Processor scheduling;Automatic control;"Control systems"","""",""10"","""",""42"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Automatic partitioning of parallel loops and data arrays for distributed shared-memory multiprocessors,""A. Agarwal"; D. A. Kranz;" V. Natarajan"",""MIT Laboratory for Computer Science, Cambridge, MA"; MIT Laboratory for Computer Science, Cambridge, MA;" Motorola Cambridge Research Center, Cambridge, MA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""9"",""943"",""962"",""Presents a theoretical framework for automatically partitioning parallel loops to minimize cache coherency traffic on shared-memory multiprocessors. While several previous papers have looked at hyperplane partitioning of iteration spaces to reduce communication traffic, the problem of deriving the optimal tiling parameters for minimal communication in loops with general affine index expressions has remained open. Our paper solves this open problem by presenting a method for deriving an optimal hyperparallelepiped tiling of iteration spaces for minimal communication in multiprocessors with caches. We show that the same theoretical framework can also be used to determine optimal tiling parameters for both data and loop partitioning in distributed memory multicomputers. Our framework uses matrices to represent iteration and data space mappings and the notion of uniformly intersecting references to capture temporal locality in array references. We introduce the notion of data footprints to estimate the communication traffic between processors and use linear algebraic methods and lattice theory to compute precisely the size of data footprints. We have implemented this framework in a compiler for Alewife, a distributed shared-memory multiprocessor.<>"",""1558-2183"","""",""10.1109/71.466632"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=466632"","""",""Programming profession";Partitioning algorithms;Tiles;Shape;Lattices;Laboratories;Distributed computing;Program processors;"Context"","""",""70"",""7"","""",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Average waiting time profiles of uniform distributed queue dual bus system model,""N. S. V. Rao"; K. J. Maly; S. Olariu; S. Dharanikota; Liping Zhang;" D. E. Game"",""Center for Engineering Systems Advanced Research, Oak Ridge National Laboratory, Oak Ridge, TN, USA"; Department of Computer Science, Old Dominion University, Norfolk, VA, USA; Department of Computer Science, Old Dominion University, Norfolk, VA, USA; Department of Computer Science, Old Dominion University, Norfolk, VA, USA; Computer Technology Associated Incorporated, MD, USA;" Department of Physics and Computer Science, Christopher Newport University, Newport News, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""10"",""1068"",""1084"",""The Distributed Queue Dual Bus (DQDB) system consists of a linear arrangement of N nodes that communicate with each other using two contra-flowing buses. The nodes use an extremely simple protocol to send messages on these buses. This simple, but elegant, system has been found to be very challenging to analyze. We consider a simple and uniform abstraction of this model to highlight the fairness issues in terms of average waiting time. We introduce a new approximation method to analyze the performance of DQDB system in terms of the average waiting time of a node expressed as a function of its position. Our approach abstracts the intimate relationship between the load of the system and its fairness characteristics, and explains all basic behavior profiles of DQDB observed in previous simulation. For the uniform DQDB with equal distance between adjacent nodes, we show that the system operates under three basic behavior profiles and a finite number of their combinations that depend on the load of the network. Consequently, the system is not fair at any load in terms of the average waiting times. We also show that the main theme of the analysis carries over to the general (nonuniform) DQDB. By suitably choosing the inter-node distances, the DQDB can be made fair around some loads, but such system will become unfair as the load changes. In the vicinity of a critical load, the uniform network runs into a state of instability, where its behavior fluctuates from one extreme to the other with small load variations. Our analysis is supported by simulation results.<>"",""1558-2183"","""",""10.1109/71.473516"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=473516"","""",""Protocols";Performance analysis;Computer Society;Load management;Computer science;Approximation methods;Abstracts;Analytical models;Queueing analysis;"Metropolitan area networks"","""","""","""",""41"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;
"Bounds on maximum delay in networks with deflection routing,""J. T. Brassil";" R. L. Cruz"",""AT and T Bell Laboratories, Inc., Murray Hill, NJ, USA";" Department of Electrical and Computer Engineering, University of California, San Diego, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""7"",""724"",""732"",""We consider the problem of finding the worst case packet transit delay in networks using deflection routing. Several classes of networks are studied, including many topologies for which deflection routing has been proposed or implemented (e.g., hypercube, Manhattan Street Network, shuffle-exchange network). We derive new upper bounds on the evacuation time of batch admissions, and present simple proofs for several existing bounds. Also derived are bounds on worst case transit delay for certain networks admitting packets continuously. To demonstrate the practical utility of our results, we compare a new delay bound to the maximum delay observed in simulations. The results have application in both protocol design and the determination of the required capacity of packet resequencing buffers.<>"",""1558-2183"","""",""10.1109/71.395401"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=395401"","""",""Intelligent networks";Routing;Delay;Upper bound;Lifting equipment;Network topology;Hypercubes;Protocols;Performance analysis;"Communication networks"","""",""37"","""",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Byzantine Agreement in a generalized connected network,""S. C. Wang"; Y. H. Chin;" K. Q. Yan"",""Aero-Industrial Development Center, Taichung, Taiwan"; Institute of Computer Science, National Tsing Hua University, Hsinchu, Taiwan;" Aero-Industrial Development Center, Taichung, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""420"",""427"",""Traditionally, the Byzantine Agreement (BA) problem is studied either in a fully connected network or in a broadcast network. A generalized network model for BA is proposed in this paper. A fully-connected network or a broadcast network is a special case of the new network architecture. Under the new generalized network model, the BA problem is reexamined with the assumption of malicious faults on both processors and transmission medium (TM), as opposed to previous studies which consider malicious faults on processors only. The proposed algorithm uses the minimum number of message exchanges, and can tolerate the maximum number of allowable faulty components to make each healthy processor reach a common agreement for the cases of processor failures, TM failures, or processor/TM failures. The results can also be used to solve the interactive consistency problem and the consensus problem.<>"",""1558-2183"","""",""10.1109/71.372796"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372796"","""",""Intelligent networks";Processor scheduling;Real time systems;Protocols;Delay;Scheduling algorithm;Fault tolerant systems;Distributed computing;Time factors;"Broadcasting"","""",""33"","""",""22"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"CCL: a portable and tunable collective communication library for scalable parallel computers,""V. Bala"; J. Bruck; R. Cypher; P. Elustondo; A. Ho; Ching-Tien Ho; S. Kipnis;" M. Snir"",""IBM Thomas J. Watson Research Center, Cambridge, USA"; California Institute of Technology, Pasadena, CA, USA; Computer Science Department, Johns Hopkins University, Baltimore, MD, USA; IBM Argentina, Ing., Buenos Aires, Argentina; IBM Research Division, Almaden Research Center, San Jose, CA, USA; IBM Research Division, Almaden Research Center, San Jose, CA, USA; MATAM Advanced Technology Center, IBM Israel Science and Technology Center, Haifa, Israel;" IBM Research Division, IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""154"",""164"",""A collective communication library for parallel computers includes frequently used operations such as broadcast, reduce, scatter, gather, concatenate, synchronize, and shift. Such a library provides users with a convenient programming interface, efficient communication operations, and the advantage of portability. A library of this nature, the Collective Communication Library (CCL), intended for the line of scalable parallel computer products by IBM, has been designed. CCL is part of the parallel application programming interface of the recently announced IBM 9076 Scalable POWERparallel System 1 (SP1). In this paper, we examine several issues related to the functionality, correctness, and performance of a portable collective communication library while focusing on three novel aspects in the design and implementation of CCL: 1) the introduction of process groups, 2) the definition of semantics that ensures correctness, and 3) the design of new and tunable algorithms based on a realistic point-to-point communication model.<>"",""1558-2183"","""",""10.1109/71.342126"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342126"","""",""Libraries";Concurrent computing;Portable computers;Application software;Broadcasting;Parallel programming;Algorithm design and analysis;Computer interfaces;"Scattering"","""",""42"",""2"",""39"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals"""
"Checkpoint space reclamation for uncoordinated checkpointing in message-passing systems,""Yi-Min Wang"; Pi-Yu Chung; In-Jen Lin;" W. K. Fuchs"",""Bell Laboratories, Murray Hill, NJ, USA"; Bell Laboratories, Murray Hill, NJ, USA; Department of Mathematics, University of Illinois, Urbana-Champaign, IL, USA;" Coordinated Science Laboratory, University of Illinois, Urbana-Champaign, IL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""546"",""554"",""Uncoordinated checkpointing allows process autonomy and general nondeterministic execution, but suffers from potential domino effects and the associated space overhead. Previous to this research, checkpoint space reclamation had been based on the notion of obsolete checkpoints";" as a result, a potentially unbounded number of nonobsolete checkpoints may have to be retained on stable storage. In this paper, we derive a necessary and sufficient condition for identifying all garbage checkpoints. By using the approach of recovery line transformation and decomposition, we develop an optimal checkpoint space reclamation algorithm and show that the space overhead for uncoordinated checkpointing is in fact bounded by N(N+1)/2 checkpoints where N is the number of processes.<>"",""1558-2183"","""",""10.1109/71.382324"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382324"","""",""Checkpointing";NASA;Sufficient conditions;Hardware;Military computing;Laboratories;Software systems;Mathematics;Runtime;"Protocols"","""",""33"",""1"",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;
"Coding-based replication schemes for distributed systems,""A. Agrawal";" P. Jalote"",""Department of Computer Science, University of Maryland, College Park, MD, USA";" Department of Computer Science and Engineering, Indian Institute of Technology, Kanpur, India"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""3"",""240"",""251"",""Data is often replicated in distributed systems to improve availability and performance. This replication is expensive in terms of disk storage since the existing schemes generally require full files to be stored at each site. In this paper, we present schemes which significantly reduce the storage requirements in replication based systems. These schemes use the coding method suggested by Rabin to store replicated data. The first scheme that we present is a modification of the simple voting algorithm and its quorum requirements. We then show how some of the extensions of the voting algorithm can also be modified to get storage efficient schemes for managing such replication. We evaluate the availability offered by these schemes and show that the storage space required to achieve certain availability are significantly lower than the conventional schemes with full file replication. Since coding is used, these schemes also provide a high degree of data security.<>"",""1558-2183"","""",""10.1109/71.372774"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372774"","""",""Voting";Availability;Data security;Partitioning algorithms;Computer science;Senior members;Distributed databases;Fault tolerance;Protocols;"Fault tolerant systems"","""",""9"",""1"",""26"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Comparative modeling and evaluation of CC-NUMA and COMA on hierarchical ring architectures,""Xiaodong Zhang";" Yong Yan"",""High Performance Computing and Software Laboratory, University of Texas, San Antonio, San Antonio, TX, USA";" High Performance Computing and Software Laboratory, University of Texas, San Antonio, San Antonio, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""12"",""1316"",""1331"",""Parallel computing performance on scalable shared-memory architectures is affected by the structure of the interconnection networks linking processors to memory modules and on the efficiency of the memory/cache management systems. Cache Coherence Nonuniform Memory Access (CC-NUMA) and Cache Only Memory Access (COMA) are two effective memory systems, and the hierarchical ring structure is an efficient interconnection network in hardware. This paper focuses on comparative performance modeling and evaluation of CC-NUMA and COMA on a hierarchical ring shared-memory architecture. Analytical models for the two memory systems for comparative evaluation are presented. Intensive performance measurements on data migrations have been conducted on the KSR-1, a COMA hierarchical ring shared-memory machine. Experimental results support the analytical models, and we present practical observations and comparisons of the two cache coherence memory systems. Our analytical and experimental results show that a COMA system balances the work load well. However the overhead of frequent data movement may match the gains obtained from improving load balance. We believe our performance results could be further generalized to the two memory systems on a hierarchical network architecture. Although a CC-NUMA system may not automatically balance the load at the system level, it provides an option for a user to explicitly handle data locality for a possible performance improvement."",""1558-2183"","""",""10.1109/71.476171"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476171"","""",""Multiprocessor interconnection networks";Memory management;Coherence;Analytical models;Parallel processing;Computer architecture;Joining processes;Computer network management;Hardware;"Measurement"","""",""9"","""",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Comparative performance evaluation of hot spot contention between MIN-based and ring-based shared-memory architectures,""Xiaodong Zhang"; Yong Yan;" R. Castaneda"",""HighPerformance Computing and Software Laboratory, University of Texas, San Antonio, San Antonio, TX, USA"; HighPerformance Computing and Software Laboratory, University of Texas, San Antonio, San Antonio, TX, USA;" HighPerformance Computing and Software Laboratory, University of Texas, San Antonio, San Antonio, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""872"",""886"",""Hot spot contention on a network-based shared-memory architecture occurs when a large number of processors try to access a globally shared variable across the network. While multistage interconnection network (MIN) and hierarchical ring (HR) structures are two important bases on which to build large scale shared-memory multiprocessors, the different interconnection networks and cache/memory systems of the two architectures respond very differently to network bottleneck situations. In this paper, we present a comparative performance evaluation of hot spot effects on the MIN-based and HR-based shared-memory architectures. Both nonblocking MIN-based and HR-based architectures are classified, and analytical models are described for understanding network differences and for evaluating hot spot performance on both architectures. The analytical comparisons indicate that HR-based architectures have the potential to handle various contentions caused by hot spots more efficiently than MIN-based architectures. Intensive performance measurements on hot spots have been conducted on the BBN TC2000 (MIN-based) and the KSR1 (HR-based) machines. Performance experiments were also conducted on the practical experience of hot spots with respect to synchronization lock algorithms. The experimental results are consistent with the analytical models, and present practical observations and an evaluation of hot spots on the two types of architectures.<>"",""1558-2183"","""",""10.1109/71.406963"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406963"","""",""Analytical models";Telecommunication traffic;Traffic control;Memory architecture;Multiprocessor interconnection networks;Switches;Large-scale systems;Degradation;Computer architecture;"High performance computing"","""",""8"","""","""",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Computing global combine operations in the multiport postal model,""A. Bar-Noy"; J. Bruck; Ching-Tien Ho; S. Kipnis;" B. Schieber"",""EE Department, Tel-Aviv University, Tel-Aviv, Israel"; California Institute of Technology, Pasadena, CA, USA; IBM Almaden Research Center, San Jose, CA, USA; MATAM-Advanced Technology Center, IBM Israel Science and Technology Center, Haifa, Israel;" IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""896"",""900"",""Consider a message-passing system of n processors, in which each processor holds one piece of data initially. The goal is to compute an associative and commutative reduction function on the n pieces of data and to make the result known to all the n processors. This operation is frequently used in many message-passing systems and is typically referred to as global combine, census computation, or gossiping. This paper explores the problem of global combine in the multiport postal model. This model is characterized by three parameters: n-the number of processors, k-the number of ports per processor, and /spl lambda/-the communication latency. In this model, in every round r, each processor can send k distinct messages to k other processors, and it can receive k messages that were sent from k other processors /spl lambda/-1 rounds earlier. This paper provides an optimal algorithm for the global combine problem that requires the least number of communication rounds and minimizes the time spent by any processor in sending and receiving messages.<>"",""1558-2183"","""",""10.1109/71.406965"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406965"","""",""Delay";Concurrent computing;Distributed computing;Libraries;User interfaces;Computer interfaces;Communication standards;Proposals;"Postal services"","""",""10"","""",""28"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;
"Concurrent and distributed garbage collection of active objects,""D. Kafura"; M. Mukherji;" D. M. Washabaugh"",""Department of Computer Science, Virginia Polytechnic Institute and State University, Blacksburg, VA, USA"; Department of Computer Science, Virginia Polytechnic Institute and State University, Blacksburg, VA, USA;" Digital Equipment Corporation, Littleton, MA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""337"",""350"",""This paper shows how to perform concurrent and distributed automatic garbage collection of objects possessing their own thread of control. The relevance of garbage collection and active objects to distributed applications is briefly discussed and the specific model of active objects used in the paper is explained. The collector is comprised of independent local collectors, one per node, and a distributed global collector. The mutator (application), the local collectors and the global collector run concurrently. An important part of this paper is the detailed presentation of the algorithms necessary to achieve correct concurrent operation among the collectors and between the collectors and the mutator. The collector builds on previous algorithms for taking snapshots in distributed systems and for detecting termination.<>"",""1558-2183"","""",""10.1109/71.372788"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372788"","""",""Automatic control";Object oriented modeling;Programming profession;Resource management;Runtime environment;Memory management;Message passing;Error correction;"Computer science"","""",""7"",""8"",""23"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Design of efficient regular arrays for matrix multiplication by two-step regularization,""Jong-Chuang Tsay";" Pen-Yuang Chang"",""Institute of Computer Science and Information Engineering College of Engineering, National Chiao Tung University, Hsinchu, Taiwan";" Institute of Computer Science and Information Engineering College of Engineering, National Chiao Tung University, Hsinchu, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""215"",""222"",""A two-step regularization method in which first permutation sequences and then broadcast planes are selected is proposed to design various regular iterative algorithms for matrix multiplication. The regular iterative algorithms are then spacetime mapped to regular arrays, such as mesh, cylindrical, two-layered mesh, and orbital arrays. The proposed method can be used to design regular arrays with execution time of less than N (problem size).<>"",""1558-2183"","""",""10.1109/71.342137"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342137"","""",""Broadcasting";Algorithm design and analysis;Iterative algorithms;Parallel algorithms;Very large scale integration;Design methodology;Councils;"Computer science"","""",""10"","""",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"Designing efficient parallel algorithms on CRAP,""Tzong-Wann Kao"; Shi-Jinn Horng; Yue-Li Wang;" Horng-Ren Tsai"",""Department of Electrical Engineering, National Taiwan Institute of Technology, Taipei, Taiwan"; Dept. of Electr. Eng., Nat. Taiwan Inst. of Technol., Taipei, Taiwan; Department of Information Management, National Taiwan Institute of Technology, Taipei, Taiwan;" Department of Electrical Engineering, National Taiwan Institute of Technology, Taipei, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""554"",""560"",""A cross-bridge reconfigurable array of processors is a parallel processing system which has the ability to change dynamically the supported interconnection scheme during the execution of an algorithm. Based on this architecture, several O(1) time basic operations such as the transpose, the untranspose, the shift, the unshift and the prefix sum of a binary sequence are first proposed. Then, these basic operations can be used to find the kth smallest element of N m bits unsigned integers in O(m) time using N processors and to sort N data items in O(1) time using O(N/sup 5/3/) processors instead of using O(N/sup 2/) processors as those proposed by other researchers.<>"",""1558-2183"","""",""10.1109/71.382325"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382325"","""",""Algorithm design and analysis";Parallel algorithms;Checkpointing;Fault tolerance;Parallel processing;Binary sequences;Bridges;Very large scale integration;Distributed computing;"Fault tolerant systems"","""",""11"","""",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;
"Disjoint task allocation algorithms for MIN machines with minimal conflicts,""Chansu Yu";" C. R. Das"",""Information Technology Research & DevelopmentLaboratory, Goldstar Company Limited, Seoul, South Korea";" NA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""373"",""387"",""This paper addresses task allocation schemes for MIN-based multiprocessors. Two types of allocation policies, cubic and noncubic, are discussed here. Conflicts through the network and inability to partition the system effectively are the main bottlenecks in a MIN-based system. To solve both the problems, a renaming scheme for input and output ports of a MIN is proposed. We use the baseline MIN as an example in this work and call the renaming scheme as bit reversal (BR) matching pattern. Allocation with the new matching pattern minimizes conflicts and partitions the system completely into independent subsystems. The novelty of this matching pattern is that we can use any dynamic cubic allocation and/or scheduling scheme developed for the hypercubes also for the MIN machines. The BR matching pattern can be used with any kind of MIN. An allocation policy for noncubic tasks is also presented with this matching pattern. Various performance measures with different allocation algorithms are compared via simulation. The advantages of the algorithms with the proposed matching pattern are shown in terms of system efficiency, delay and task miss ratio.<>"",""1558-2183"","""",""10.1109/71.372791"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372791"","""",""Pattern matching";Partitioning algorithms;Hypercubes;Computer architecture;Switches;Dynamic scheduling;Computational modeling;Delay systems;Amplitude shift keying;"Concurrent computing"","""",""1"","""",""22"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Distributed hardwired barrier synchronization for scalable multiprocessor clusters,""Shisheng Shang";" Kai Hwang"",""Department of Computer Engineering, Kaohsiung Polytechnic Institute, Kaohsiung, Taiwan";" Department of Electrical Engineering, University of Southern California, Los Angeles, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""591"",""605"",""Conventional multiprocessors mostly use centralized, memory-based barriers to synchronize concurrent processes created in multiple processors. These centralized barriers often become the bottleneck or hot spots in the shared memory. In this paper, we overcome the difficulty by presenting a distributed and hardwired barrier architecture, that is hierarchically constructed for fast synchronization in cluster-structured multiprocessors. The hierarchical architecture enables the scalability of cluster-structured multiprocessors. A special set of synchronization primitives is developed for explicit use of distributed barriers dynamically. To show the application of the hardwired barriers, we demonstrate how to synchronize Doall and Doacross loops using a limited number of hardwired barriers. Timing analysis shows an O(10/sup 2/) to O(10/sup 5/) reduction in synchronization overhead, compared with the use of software-controlled barriers implemented in a shared memory. The hardwired architecture is effective in implementing any partially ordered set of barriers or fuzzy barriers with extended synchronization regions. The versatility, scalability, programmability, and low overhead make the distributed barrier architecture attractive in constructing fine-grain, massively parallel MIMD systems using multiprocessor clusters with distributed shared memory.<>"",""1558-2183"","""",""10.1109/71.388040"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388040"","""",""Hardware";Scalability;Fuzzy logic;Buildings;Integrated circuit interconnections;Computer architecture;Wires;Application software;Timing;"Memory architecture"","""",""35"",""1"",""34"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Distributed load balancing for parallel main memory hash join,""W. R. Tout";" S. Praminik"",University Microfilm International";" NA,""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""841"",""849"",""Parallel joins have been widely studied during the past decade and a number of efficient algorithms were presented. While it is known that the performance of these algorithms may suffer greatly in the presence of skewed input data, the work on load balancing schemes for parallel join has been limited. The main contribution of this paper is the development and analysis of a new distributed data structure and an effective load balancing scheme for parallel main memory hash join on NUMA architecture. Multiprocessors based on this architecture are scalable in both size of main memory and number of processors, and provide very high memory bandwidth. The load balancing scheme is based on random probing to avoid the hot spot problems caused by probing sequentially. We have modeled this load balancing scheme both analytically and experimentally. The experiments were run on a BBN TC2000 multiprocessor system.<>"",""1558-2183"","""",""10.1109/71.406960"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406960"","""",""Load management";Scalability;Analytical models;Bandwidth;Parallel processing;Scheduling;Data structures;Load modeling;Multiprocessing systems;"Database systems"","""",""5"","""",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Distributed synchronous clocking,""G. A. Pratt";" J. Nguyen"",""Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA, USA";" Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""3"",""314"",""328"",""It has historically been difficult to distribute a well-aligned hardware clock throughout the physical extent of a synchronous processor. Traditionally, this task has been accomplished by distributing the output of a central oscillator over a tree-like network, with repeaters at necessary intervals. While straightforward in concept, this method suffers from poor reliability, poor scalability and high skew. In this paper, we present an alternative approach-Distributed Synchronous Clocking-that maintains the simplicity of synchronous operation without suffering the drawbacks of centralized clocking. A network of independent oscillators takes the place of the centralized clock source, providing separate clock signals to the physically distant parts of a computing system. A distributed error correction algorithm effects global phase alignment by utilizing Local comparisons of neighboring oscillator phase. In contrast to centralized clock distribution, distributed clocking has the inherent potential for complete scalability and graceful degradation. However, because oscillator phase is a modular quantity, a naive implementation of distributed synchronous clocking can suffer from mode-lock-the trapping of local oscillator phase in undesirable stable equilibria where global phase is not aligned. We present a simple method for eliminating this problem in k-ary Cartesian meshes and give a proof of its correctness for two-dimensional networks. An electronic implementation is also presented and several engineering issues relating to error tolerance are discussed.<>"",""1558-2183"","""",""10.1109/71.372779"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372779"","""",""Clocks";Local oscillators;Scalability;Hardware;Repeaters;Maintenance;Computer networks;Physics computing;Error correction;"Degradation"","""",""70"",""18"",""27"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Dynamic broadcasting in parallel computing,""E. A. Varvarigos";" D. P. Bertsekas"",""Department ofElectrical and Computer Engineering, University of California, Santa Barbara, CA, USA";" Laboratoryfor Information and Decision Systems, Massachusetts Institute of Technology, Cambridge, MA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""120"",""131"",""We consider the problem where broadcast requests are dynamically generated at random time instants at each node of a multiprocessor network. In particular, in our model packets arrive at each node of a network according to a Poisson process, and each packet has to be broadcast to all the other nodes. We propose an on-line, distributed routing scheme to execute the broadcasts in this dynamic environment. Our scheme consists of repeated execution of a partial multinode broadcast task, which is a static communication task where any M/spl les/N arbitrary nodes of an N-processor network broadcast a packet to all the other nodes. The dynamic broadcasting scheme that we propose can be used in any topology, regular or not, for which partial multinode broadcast algorithms with certain properties can be found. We derive such an algorithm and we analyze the corresponding dynamic broadcasting scheme for the hypercube network. We show that its stability region tends to the maximum possible as the number of nodes of the hypercube tends to infinity. Furthermore, for any fixed load in the stability region, the average delay is of the order of the diameter of the hypercube. Our analysis does not use any approximating assumptions.<>"",""1558-2183"","""",""10.1109/71.342123"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342123"","""",""Broadcasting";Parallel processing;Hypercubes;Stability;Intelligent networks;Routing;Network topology;Algorithm design and analysis;H infinity control;"Delay"","""",""14"","""",""14"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Dynamic task allocation models for large distributed computing systems,""H. W. D. Chang";" W. J. B. Oldham"",""Motorola Electronics Taiwan Limited";" Computer Science Department, Texas Tech University, Lubbock, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""12"",""1301"",""1315"",""Dynamic task allocation for distributed computing systems (DCS) is an important goal to be achieved for engineering applications. The purpose of dynamic task allocation is to increase the system throughput in a dynamic environment, which can be done by balancing the utilization of computing resources and minimizing communication between processors during run time. In this paper, we propose two dynamic task allocation models which are: 1) the clustering simulated annealing model (CSAM)";" and 2) the mean field annealing model (MFAM). Both of these models combine characteristics of statistical and deterministic approaches. These models provide the rapid convergence characteristic of the deterministic approaches while preserving the solution quality afforded by simulated annealing. Simulation results of the CSAM and MFAM provide a stable and balanced system with 50% and 10% of the convergence time needed by simulated annealing, respectively. The results of this research are important in that it presents the feasibility of applying statistically based task allocation models on large DCSs in a dynamic environment. Solutions of these models depend on the annealing process instead of the structures of the input data, providing the possibility of obtaining better solutions by using more efficient computing hardware."",""1558-2183"","""",""10.1109/71.476170"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476170"","""",""Distributed computing";Distributed control;Simulated annealing;Application software;Resource management;Hardware;Computer architecture;Transport protocols;Throughput;"Computational modeling"","""",""30"","""",""32"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Efficient algorithms for a class of partitioning problems,""M. Ashraf Iqbal";" S. H. Bokhari"",""Department of Electrical Engineering, University of Engineering and Technology, Lahore, Pakistan";" Department of Electrical Engineering, University of Engineering and Technology, Lahore, Pakistan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""170"",""175"",""We address the problem of optimally partitioning the modules of chain- or tree-like tasks over chain-structured or host-satellite multiple computer systems. This important class of problems includes many signal processing and industrial control applications. Prior research has resulted in a succession of faster exact and approximate algorithms for these problems. We describe polynomial exact and approximate algorithms for this class that are better than any of the previously reported algorithms. Our approach is based on a preprocessing step that condenses the given chain or tree structured task into a monotonic chain or tree. The partitioning of this monotonic task can then be carried out using fast search techniques.<>"",""1558-2183"","""",""10.1109/71.342129"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342129"","""",""Partitioning algorithms";Signal processing algorithms;Polynomials;Concurrent computing;Parallel processing;Industrial control;Application software;Costs;Signal processing;"Space technology"","""",""17"","""",""10"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Efficient fast Hartley transform algorithms for hypercube-connected multicomputers,""C. Aykanat";" A. Dervis"",""Department of Computer Engineering, Bilkent University, Ankara, Turkey";" Department of Computer Engineering, Bilkent University, Ankara, Turkey"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""561"",""577"",""Although fast Hartley transform (FHT) provides efficient spectral analysis of real discrete signals, the literature that addresses the parallelization of FHT is extremely rare. FHT is a real transformation and does not necessitate any complex arithmetics. On the other hand, FHT algorithm has an irregular computational structure which makes efficient parallelization harder. In this paper, we propose an efficient restructuring for the sequential FHT algorithm which brings regularity and symmetry to the computational structure of the FHT. Then, we propose an efficient parallel FHT algorithm for medium-to-coarse grain hypercube multicomputers by introducing a dynamic mapping scheme for the restructured FHT. The proposed parallel algorithm achieves perfect load-balance, minimizes both the number and volume of concurrent communications, allows only nearest-neighbor communications and achieves in-place computation and communication. The proposed algorithm is implemented on a 32 node iPSC/2 hypercube multicomputer, high-efficiency values are obtained even for small size FHT problems.<>"",""1558-2183"","""",""10.1109/71.388039"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388039"","""",""Signal processing algorithms";Digital signal processing;Discrete Fourier transforms;Hypercubes;Application software;Discrete transforms;Spectral analysis;Arithmetic;Concurrent computing;"Computational complexity"","""",""3"","""",""10"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Efficient geometric algorithms on the EREW PRAM,""D. Z. Chen"",""Department of Computer Science and Engineering, University of Notre Dame, Notre Dame, IN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""41"",""47"",""We present a technique that can be used to obtain efficient parallel geometric algorithms in the EREW PRAM computational model. This technique enables us to solve optimally a number of geometric problems in O(log n) time using O(n/log n) EREW PRAM processors, where n is the input size of a problem. These problems include: computing the convex hull of a set of points in the plane that are given sorted, computing the convex hull of a simple polygon, computing the common intersection of half-planes whose slopes are given sorted, finding the kernel of a simple polygon, triangulating a set of points in the plane that are given sorted, triangulating monotone polygons and star-shaped polygons, and computing the all dominating neighbors of a sequence of values. PRAM algorithms for these problems were previously known to be optimal (i.e., in O(log n) time and using O(n/log n) processors) only on the CREW PRAM, which is a stronger model than the EREW PRAM.<>"",""1558-2183"","""",""10.1109/71.363412"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363412"","""",""Phase change random access memory";Parallel algorithms;Computational modeling;Kernel;Concurrent computing;Time sharing computer systems;Read-write memory;Solid modeling;Computational geometry;"Algorithm design and analysis"","""",""26"",""1"",""34"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"Efficient nonblocking switching networks for interprocessor communications in multiprocessor systems,""Fong-Chih Shao";" A. Yavuz Oruc"",""Institute for Advanced Computer Studies, University of Maryland, College Park, MD, USA";" Institute for Advanced Computer Studies, University of Maryland, College Park, MD, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""132"",""141"",""The performance of a multiprocessor system depends heavily on its ability to provide conflict free paths among its processors. In this paper, we explore the possibility of using a nonblocking network with O(N log N) edges (crosspoints) to interconnect the processors of an N processor system, We combine Bassalygo and Pinsker's implicit design of strictly nonblocking networks with an explicit construction of expanders to obtain a strictly nonblocking network with -765.18N+352.8N log N edges and 2+log(N/5) depth. We present an efficient parallel algorithm for routing connection requests on this network and implement it on three parallel processor topologies. The implementation on a parallel processor whose processing elements are interconnected as in the Bassalygo-Pinsker network requires O(N log N) processing elements, O(N log N) interprocessor links and it takes O(log N) steps to route any single connection request where each step involves a small number (/spl ap/72) of bit-level operations. A contracted or folded version of the same implementation reduces the processing element count to O(N) without increasing the link count or the routing time. Finally, we establish that the same algorithm takes O(log/sup 3/ N) steps on a perfect shuffle processor with O(N) processing elements. These results improve the crosspoint, depth and routing time complexities of the previously reported strictly nonblocking networks.<>"",""1558-2183"","""",""10.1109/71.342124"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342124"","""",""Communication switching";Intelligent networks;Multiprocessing systems;Routing;Bandwidth;Parallel algorithms;Network topology;Graph theory;"Fasteners"","""",""4"","""",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Efficient parallel binary search on sorted arrays, with applications,""D. Z. Chen"",""Dept. of Comput. Sci., Purdue Univ., West Lafayette, IN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""440"",""445"",""Let A be a sorted array of n numbers and B a sorted array of m numbers, both in nondecreasing order, with n/spl les/m. We consider the problem of determining, for each element A(j), j=1, 2, ..., n, the unique element B(i), 0/spl les/i/spl les/m, such that B(i)/spl les/A(j)<B(i+1) (with B(0)=-/spl infin/ and B(m+1)=+/spl infin/). We present an efficient parallel algorithm for solving this problem in O(log m) time using O([nlog (m/n)]/[log m]) EREW PRAM processors. Our algorithm improves the previously known results on either the time or processor complexity, and enables us to solve several other problems optimally on the EREW PRAM.<<ETX>>"",""1558-2183"","""",""10.1109/71.372799"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372799"","""",""Routing";Sorting;Concurrent computing;Physics computing;Very large scale integration;Application software;Gallium arsenide;Foundries;Process design;"Parallel algorithms"","""",""9"","""",""13"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"Efficient placement of parity and data to tolerate two disk failures in disk array systems,""Chan-Ik Park"",""Department of Computer Science and Engineering, Pohang University of Science and Technology, Pohang, Gyeongbuk, South Korea"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""11"",""1177"",""1184"",""In this paper, we deal with the data/parity placement problem which is described as follows: how to place data and parity evenly across disks in order to tolerate two disk failures, given the number of disks N and the redundancy rate p which represents the amount of disk spaces to store parity information. To begin with, we transform the data/parity placement problem into the problem of constructing an N/spl times/N matrix such that the matrix will correspond to a solution to the problem. The method to construct a matrix has been proposed and we have shown how our method works through several illustrative examples. It is also shown that any matrix constructed by our proposed method can be mapped into a solution to the placement problem if a certain condition holds between N and p where N is the number of disks and p is a redundancy rate."",""1558-2183"","""",""10.1109/71.476189"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476189"","""",""Error correction codes";Redundancy;Power system protection;Parallel processing;Concurrent computing;Application software;Bandwidth;Encoding;Computer science;"Reliability engineering"","""",""36"",""10"",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"Establishment of isolated failure immune real-time channels in HARTS,""Qin Zheng";" K. G. Shin"",""Mitsubishi Electric Research Laboratories, Inc., Cambridge, MA, USA";" Real-Time Computing Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""113"",""119"",""Fault-tolerant, real-time communication in distributed systems is very important yet difficult to achieve. Traditional protocols like the TCP/IP achieve reliable communication through acknowledgment and retransmission schemes, where one achieves the reliability at the cost of performance, In this paper, we discuss how both the timeliness and fault-tolerance of communication can be achieved by using the concept of real-time channel and exploring the inherent spatial redundancy of a given network topology, Specifically, we show how isolated failure immune real-time channels can be established in wrapped hexagonal mesh networks, thus ensuring timely delivery of messages in the presence of network component failures as long as the failures are isolated. This kind of fault-tolerance cannot be achieved with other commonly-known topologies like rings, rectangular meshes, and hypercubes. The proposed approach is to be implemented in an experimental distributed real-time system, called HARTS, whose construction is underway.<>"",""1558-2183"","""",""10.1109/71.342122"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342122"","""",""Real time systems";Telecommunication network reliability;Fault tolerance;Network topology;Fault tolerant systems;Protocols;TCPIP;Costs;Redundancy;"Mesh networks"","""",""5"","""",""10"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Evaluating performance tradeoffs between fine-grained and coarse-grained alternatives,""P. K. Dubey"; G. B. Adams;" M. J. Flynn"",""T. J. Watson Research Center, IBM, Yorktown Heights, NY, USA"; School of Electrical Engineering, Purdue University, West Lafayette, IN, USA;" Department of Electrical Engineering, University of Stanford, Stanford, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""17"",""27"",""Recent simulation based studies suggest that while superpipelines and superscalars are equally capable of exploiting fine grained concurrency, multiprocessors are better at exploiting coarse grained parallelism. An analytical model that is more flexible and less costly in terms of run time than simulation, is proposed as a tool for analyzing the tradeoff between superpipelined processors, superscalar processors, and multiprocessors. The duality of superpipelines and superscalars is examined in detail. The performance limit for these systems has been derived and it supports the fetch bottleneck observation of previous researchers. Common characteristics of utilization curves for such systems are examined. Combined systems, such as superpipelined multiprocessors and superscalar multiprocessors, are also analyzed. The model shows that the number of pipelines (or processors) at which the maximum throughput is obtained is, as memory access time increases, increasingly sensitive to the ratio of memory access time to network access delay. Further, as a function of interiteration dependence distance, optimum throughput is shown to vary nonlinearly, whereas the corresponding optimum number of processors varies linearly. The predictions from the analytical model agree with similar results published using simulation based techniques.<>"",""1558-2183"","""",""10.1109/71.363414"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363414"","""",""Analytical models";Concurrent computing;Pipelines;Predictive models;Throughput;Assembly;Delay effects;Microprocessors;Clocks;"NASA"","""",""2"","""",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Exact convergence of a parallel textured algorithm for data network optimal routing problems,""G. M. Huang";" Wen-Lin Hsieh"",""Department of Electrical Engineering, Texas A and M University, College Station, TX, USA";" Department of Electrical Engineering, Texas A and M University, College Station, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""11"",""1132"",""1146"",""In our earlier paper (1991), a textured decomposition based algorithm is developed to solve the optimal routing problem in data networks";" a few examples were used to illustrate the speedup advantage and the convergence conditions for the textured algorithm to converge to a global minimum. The speedup advantage is investigated in Huang et al. (1993). However, the theoretical foundation is not provided. In this paper, we provide the foundation. First, we show that for any textured decomposition, the algorithm always converges to a stationary point, which may not be a global minimum. And then, we prove that if the conditions of the exact convergence theorem are satisfied, the textured algorithm will converge to a global minimum."",""1558-2183"","""",""10.1109/71.476185"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476185"","""",""Convergence";Routing;Concurrent computing;Parallel processing;Data communication;Protocols;Reactive power control;Equations;"Power system reliability"","""",""6"","""",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Executing algorithms with hypercube topology on torus multicomputers,""A. Gonzalez"; M. Valero-Garcia;" L. Diaz de Cerio"",""Department ďArquitectura de Computadors, Universitat Poliltècnica de Catalunya, Barcelona, Spain"; Department ďArquitectura de Computadors, Universitat Poliltècnica de Catalunya, Barcelona, Spain;" Department ďArquitectura de Computadors, Universitat Poliltècnica de Catalunya, Barcelona, Spain"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""803"",""814"",""Many parallel algorithms use hypercubes as the communication topology among their processes. When such algorithms are executed on hypercube multicomputers the communication cost is kept minimum since processes can be allocated to processors in such a way that only communication between neighbor processors is required. However, the scalability of hypercube multicomputers is constrained by the fact that the interconnection cost-per-node increases with the total number of nodes. From scalability point of view, meshes and toruses are more interesting classes of interconnection topologies. This paper focuses on the execution of algorithms with hypercube communication topology on multicomputers with mesh or torus interconnection topologies. The proposed approach is based on looking at different embeddings of hypercube graphs onto mesh or torus graphs. The paper concentrates on toruses since an already known embedding, which is called standard embedding, is optimal for meshes. In this paper, an embedding of hypercubes onto toruses of any given dimension is proposed. This novel embedding is called xor embedding. The paper presents a set of performance figures for both the standard and the xor embeddings and shows that the latter outperforms the former for any torus. In addition, it is proven that for a one-dimensional torus (a ring) the xor embedding is optimal in the sense that it minimizes the execution time of a class of parallel algorithms with hypercube topology. This class of algorithms is frequently found in real applications, such as FFT and some class of sorting algorithms.<>"",""1558-2183"","""",""10.1109/71.406957"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406957"","""",""Hypercubes";Topology;Parallel algorithms;Costs;Scalability;Sorting;"Hardware"","""",""13"",""1"",""13"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"FDDI-M: a scheme to double FDDI's ability of supporting synchronous traffic,""K. G. Shin";" Qin Zheng"",""Real-Time Computing Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA";" Cambridge Research Center, Mitsubishi Electric Research Laboratories, Inc., Cambridge, MA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""11"",""1125"",""1131"",""Synchronous messages are usually generated periodically and each of them is required to be transmitted before the generation of the next message. Due to the inherent deficiency in its medium access control (MAC) protocol, an FDDI token ring can use at most one half of its ring bandwidth to transmit such synchronous traffic. This deficiency greatly reduces the FDDI's capability of supporting multimedia applications like real-time voice/video transmissions. In this paper, we show how a few simple modifications to the FDDI's MAC protocol can remove this deficiency and double a ring's ability of supporting synchronous traffic. The modified protocol, called FDDI-M, can also achieve a higher throughput for asynchronous traffic than the standard FDDI and the FDDI-II, thus making it useful even for those networks without heavy synchronous traffic."",""1558-2183"","""",""10.1109/71.476184"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476184"","""",""FDDI";Bandwidth;Media Access Protocol;Telecommunication traffic;Token networks;Delay;Synchronous generators;Optical fiber networks;Laboratories;"Access protocols"","""",""9"","""",""14"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Generalized algorithms for systematic synthesis of Branch-and-Combine clock networks for meshes, tori, and hypercubes,""M. Umasankar";" A. El-Amawy"",""Alliance Semiconductor Corporation, San Jose, CA, USA";" Department of Electrical and Computer Engineering, Louisiana State University, Baton Rouge, LA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""12"",""1283"",""1300"",""Branch-and-Combine (BaC) clock distribution has recently been introduced. The most interesting aspect of the new scheme is its ability to bound skew by a constant irrespective of network size. In this paper, we introduce algorithms for systematic synthesis of BaC networks for clocking meshes, tori, and hypercubes of different dimensionalities. For meshes our approach relies on filing techniques. We start with the identification of basic proper tiles satisfying certain criteria. We define a set of valid transformations on tiles. By appropriately applying a sequence of transformations on a basic proper tile, one could synthesize a valid BaC network. We formally introduce methods and procedures for applying the above steps to systematically construct different valid BaC network designs for 2D and 3D meshes. To construct BaC networks for clocking hypercubes of any dimensionality we describe a formal methodology. In this case, we utilize an approach called replication which is based on constructing larger hypercube clocking networks from smaller ones. We combine the techniques for 2D, 3D meshes with replication techniques to formulate a methodology applicable to meshes and tori of dimensionality greater than three. We provide proofs of correctness for the algorithms we introduce. Besides, we formally define an optimality criterion based on link costs which is utilized to check the optimality of the synthesized network designs. In the case of meshes, we show that the majority of synthesized networks are optimal with respect to our defined criterion. For those suboptimal networks, we describe a procedure for identifying and removing unnecessary (redundant) links. The procedure is guaranteed to optimize the network without changing its behavioral parameters."",""1558-2183"","""",""10.1109/71.476169"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476169"","""",""Network synthesis";Clocks;Hypercubes;Tiles;Concurrent computing;Control systems;Cost function;Parallel processing;"Application software"","""",""1"","""",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Generalized multiway branch unit for VLIW microprocessors,""Soo-Mook Moon";" S. D. Carson"",""Department of Electronics Engineering, Seoul National University, Seoul, South Korea";" Tracer Technologies, Inc., Gaithersburg, MD, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""850"",""862"",""VLIW processors use multiway branch instructions to achieve high-speed, parallel evaluation of control structures. This paper introduces a new multiway branch mechanism that allows constant-time branch-target resolution based on an arbitrary condition tree. The unique feature of this mechanism is its target selection unit, which yields a branch-target based on a set of condition bit values and a condition tree description. A representation of condition trees that results in a compact target selection unit is described, and the logic diagram of a target selection unit that provides a four-way branching is shown. Our experimental results on nontrivial integer benchmarks indicate that the proposed multiway branch unit can improve the performance of VLIW machines substantially (i.e., as much as a geometric mean of 35%), compared to using the conventional two-way branching.<>"",""1558-2183"","""",""10.1109/71.406961"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406961"","""",""VLIW";Microprocessors;Moon;Counting circuits;Frequency;Logic;Mirrors;Clocks;Instruction sets;"Hardware"","""",""11"",""3"",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Generating and approximating nondominated coteries,""J. C. Bioch";" T. Ibaraki"",""Department of Computer Science, Erasmus University, Rotterdam, Netherlands";" Department of Applied Mathematics and Physics, Kyoto University, Kyoto, Japan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""9"",""905"",""914"",""A coterie, which is used to realize mutual exclusion in a distributed system is a family C of incomparable subsets such that every pair of subsets in C has at least one element in common. Associate with a family of subsets C a positive (i.e., monotone) Boolean function f/sub c/ such that f/sub c/(x)=1 if the Boolean vector x is equal to or greater than the characteristic vector of some subset in C, and 0 otherwise. It is known that C is a coterie if and only if f/sub c/ is dual-minor, and is a nondominated (ND) coterie if and only if f/sub c/ is self-dual. We introduce an operator /spl rho/, which transforms a positive self-dual function into another positive self-dual function, and the concept of almost-self-duality, which is a close approximation to self-duality and can be checked in polynomial time (the complexity of checking positive self-duality is currently unknown). After proving several interesting properties of them, we propose a simple algorithm to check whether a given positive function is self-dual or not. Although this is not a polynomial algorithm, it is practically efficient in most cases. Finally, we present an incrementally polynomial algorithm that generates all positive self-dual functions (ND coteries) by repeatedly applying p operations. Based on this algorithm, all ND coteries of up to seven variables are computed.<>"",""1558-2183"","""",""10.1109/71.466629"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=466629"","""",""Neodymium";Boolean functions;"Polynomials"","""",""17"","""",""30"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;;;;
"Going beyond integer programming with the Omega test to eliminate false data dependences,""W. Pugh";" D. Wonnacott"",""Department of Computer Science, Institute for Advanced Computer Studies, University of Maryland, College Park, MD, USA";" Department of Computer Science, Institute for Advanced Computer Studies, University of Maryland, College Park, MD, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""204"",""211"",""Array data dependence analysis methods currently in use generate false dependences that can prevent useful program transformations. These false dependences arise because the questions asked are conservative approximations to the questions we really should be asking. Unfortunately, the questions we really should be asking go beyond integer programming and require decision procedures for a subclass of Presburger formulas. In this paper, we describe how to extend the Omega test so that it can answer these queries and allow us to eliminate these false data dependences. We have implemented the techniques described here and believe they are suitable for use in production compilers.<>"",""1558-2183"","""",""10.1109/71.342135"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342135"","""",""Linear programming";Testing;Data analysis;Production;Computer science;Algorithm design and analysis;Privatization;Program processors;"Arithmetic"","""",""17"","""",""35"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Hierarchical cubic networks,""K. Ghose";" K. R. Desai"",""Department of Computer Science, State University of New York, Binghamton, Binghamton, NY, USA";" Department of Computer Science, State University of New York, Binghamton, Binghamton, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""427"",""435"",""We introduce a new interconnection network for large-scale distributed memory multiprocessors called the hierarchical cubic network (HCN). We establish that the number of routing steps needed by several data parallel applications running on a HCN-based system and a hypercube-based system are about identical. Further, hypercube connections can be emulated on the HCN in constant time. Simulation of uniform and localized traffic patterns reveal that the normalized average internode distances in a HCN are better than in a comparable hypercube. Additionally, the HCN also has about three-fourths the diameter of a comparable hypercube, although it uses about half as many links per node-a fact that has positive ramifications on the implementation of HCN-connected systems.<>"",""1558-2183"","""",""10.1109/71.372797"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372797"","""",""Hypercubes";Multiprocessor interconnection networks;Computer science;Synchronization;Fault tolerance;Routing;Voting;Distributed databases;Computer network reliability;"Telecommunication network reliability"","""",""144"","""",""23"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Hot-potato algorithms for permutation routing,""I. Newman";" A. Schuster"",""Department of Mathematics and Computer Science, Haifa University, Haifa, Israel";" Department of Computer Science, Technion-Israel Institute of Technology, Haifa, Israel"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""11"",""1168"",""1176"",""We develop a methodology for the design of hot-potato algorithms for routing permutations. The basic idea is to convert existing store-and-forward routing algorithms to hot-potato algorithms. Using it, we obtain the following complexity bounds for permutation routing: n/spl times/n Mesh: 7n+o(n) steps"; 2/sup n/ hypercube: O(n/sup 2/) steps;" n/spl times/n Torus: 4n+o(n) steps. The algorithm for the two-dimensional grid is the first to be both deterministic and asymptotically optimal. The algorithm for the 2/sup n/-nodes Boolean cube is the first deterministic algorithm that achieves a complexity of o(2/sup n/) steps."",""1558-2183"","""",""10.1109/71.476188"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476188"","""",""Routing";Hypercubes;Buffer storage;Design methodology;Algorithm design and analysis;Delay;Optical buffering;Computer science;Parallel algorithms;"Parallel machines"","""",""18"","""",""25"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Integer programming for array subscript analysis,""J. Subhlok";" K. Kennedy"",""School of Computer Science, Camegie Mellon University, Pittsburgh, PA, USA";" Department of Computer Science, Rice University, Houston, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""662"",""668"",""We present a new method to determine whether a convex region contains any integer points. The method is designed for array subscript analysis in parallel programs. The general problem is whether a system of linear equalities and inequalities has an integer solution. A set of known techniques is used to transform the problem to that of finding whether a convex region contains any integer points. The main result of the paper is a set of new search procedures that identify an integer solution in a convex region, or prove that no integer solutions exist. They are based on the geometrical properties of convex regions that are not empty, but also do not contain any integer points. The results contribute to exact and efficient dependence and synchronization analysis of parallel programs.<>"",""1558-2183"","""",""10.1109/71.388048"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388048"","""",""Linear programming";Equations;Program processors;Computer science;Design methodology;Testing;Protection;"Computerized monitoring"","""",""8"",""1"",""14"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"Inverted file partitioning schemes in multiple disk systems,""Byeong-Soo Jeong";" E. Omiecinski"",""College of Computing, Georgia Institute of Technology, Atlanta, USA";" College of Computing, Georgia Institute of Technology, Atlanta, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""142"",""153"",""Multiple-disk I/O systems (disk arrays) have been an attractive approach to meet high performance I/O demands in data intensive applications such as information retrieval systems. When we partition and distribute files across multiple disks to exploit the potential for I/O parallelism, a balanced I/O workload distribution becomes important for good performance. Naturally, the performance of a parallel information retrieval system using an inverted file structure is affected by the partitioning scheme of the inverted file. In this paper, we propose two different partitioning schemes for an inverted file system for a shared-everything multiprocessor machine with multiple disks. We study the performance of these schemes by simulation under a number of workloads where the term frequencies in the documents are varied, the term frequencies in the queries are varied, the number of disks are varied and the multiprogramming level is varied.<>"",""1558-2183"","""",""10.1109/71.342125"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342125"","""",""Information retrieval";File systems;Frequency;Parallel architectures;Spatial databases;Message passing;Scalability;Load management;Multiprocessing systems;"System performance"","""",""55"",""15"",""24"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Loop transformation using nonunimodular matrices,""A. Fernandez"; J. M. Llaberia;" M. Valero-Garcia"",""Department d Arquitectura de Computadors, Universitat Politecnica de Catalunya, Barcelona, Spain"; Department d Arquitectura de Computadors, Universitat Politecnica de Catalunya, Barcelona, Spain;" Department d Arquitectura de Computadors, Universitat Politecnica de Catalunya, Barcelona, Spain"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""832"",""840"",""Linear transformations are widely used to vectorize and parallelize loops. A subset of these transformations are unimodular transformations. When a unimodular transformation is used, the exact bounds of the transformed loop nest are easily computed and the steps of the loops are equal to 1. Unimodular loop transformations have been widely used since they permit the implementation of many useful loop transformations. Recently, nonunimodular transformations have been proposed to reduce communication requirements or to use the memory hierarchy efficiently. The methods used for unimodular transformations do not work in the case of nonunimodular transformations, since they do not produce the exact bounds of the transformed loop nest. In this paper, we present a method for nested loop transformation which gives the exact bounds for both unimodular and nonunimodular transformations. The basic idea is to use the Hermite Normal Form (HNF) of the transformation matrix.<>"",""1558-2183"","""",""10.1109/71.406959"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406959"","""",""Ear"","""",""12"","""",""23"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;;;;
"Message complexity of the tree quorum algorithm,""Shyan-Ming Yuan";" Her-Kun Chang"",""Dept. of Comput. & Inf. Sci., Nat. Chiao Tung Univ., Hsinchu, Taiwan";" Dept. of Comput. & Inf. Sci., Nat. Chiao Tung Univ., Hsinchu, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""887"",""890"",""The tree quorum algorithm (TQA) uses a tree structure to generate intersecting (tree) quorums for distributed mutual exclusion. This paper analyzes the number of messages required to acquire a quorum in TQA. Let i be the depth of the complete binary tree used in TQA, and let M/sub i/ be the number of messages required to acquire a quorum or to determine that no quorum is accessible. We discuss M/sub i/ as a function of i and p, where p ( 1/2 <p<1) is the probability that each site is operational. Let C/sub i/ denote the average number of sites in the quorum that TQA finds. The analysis shows that, although both M/sub i/ and C/sub i/ increase without bound as i increases, M/sub i//C/sub i/ approaches to 1+p/p as i increases. According to the result, an approximate close form for M/sub i/ is derived.<<ETX>>"",""1558-2183"","""",""10.1109/71.406969"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406969"","""",""Permission";Costs;Tree data structures;Centralized control;Size measurement;Binary trees;Computer networks;Resource management;Clocks;"Synchronization"","""",""1"","""",""7"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Modulo reduction in residue number systems,""K. C. Posch";" R. Posch"",""Institute for Applied Information Processing, Graz University of Technology, Graz, Austria";" Institute for Applied Information Processing, Graz University of Technology, Graz, Austria"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""449"",""454"",""Residue number systems provide a good means for extremely long integer arithmetic. Their carry-free operations make parallel implementations feasible. Some applications involving very long integers, such as public key encryption, rely heavily on fast modulo reductions. This paper shows a new combination of residue number systems with efficient modulo reduction methods. Two methods are compared, and the faster one is scrutinized in detail. Both methods have the same order of complexity, O(log n), with n denoting the amount of registers involved.<>"",""1558-2183"","""",""10.1109/71.382314"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382314"","""",""Arithmetic";Public key;Public key cryptography;Hardware;Parallel algorithms;"Information processing"","""",""94"",""10"",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;
"Multicoloring of grid-structured PDE solvers on shared-memory multiprocessors,""Hwang-Cheng Wang";" Kai Hwang"",""Department of Information Management and Engineering, Wu Feng Institute of Technology, Taiwan";" Department of Electrical Engineering, University of Southern California, Los Angeles, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""11"",""1195"",""1205"",""In order to execute a parallel PDE (partial differential equation) solver on a shared-memory multiprocessor, we have to avoid memory conflicts in accessing multidimensional data grids. A new multicoloring technique is proposed for speeding sparse matrix operations. The new technique enables parallel access of grid-structured data elements in the shared memory without causing conflicts. The coloring scheme is formulated as an algebraic mapping which can be easily implemented with low overhead on commercial multiprocessors. The proposed multicoloring scheme bas been tested on an Alliant FX/80 multiprocessor for solving 2D and 3D problems using the CGNR method. Compared to the results reported by Saad (1989) on an identical Alliant system, our results show a factor of 30 times higher performance in Mflops. Multicoloring transforms sparse matrices into ones with a diagonal diagonal block (DDB) structure, enabling parallel LU decomposition in solving PDE problems. The multicoloring technique can also be extended to solve other scientific problems characterized by sparse matrices."",""1558-2183"","""",""10.1109/71.476191"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476191"","""",""Sparse matrices";Multiprocessing systems;Parallel processing;Computer Society;Multidimensional systems;Testing;Partial differential equations;Costs;Information management;"Timing"","""",""13"","""",""25"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Necessary and sufficient conditions for consistent global snapshots,""R. H. B. Netzer";" Jian Xu"",""Department of Computer Science, Brown University, Providence, RI, USA";" Department of Computer Science, Brown University, Providence, RI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""165"",""169"",""Consistent global snapshots are important in many distributed applications. We prove the exact conditions for an arbitrary checkpoint, or a set of checkpoints, to belong to a consistent global snapshot, a previously open problem. To describe the conditions, we introduce a generalization of Lamport's (1978) happened-before relation called a zigzag path.<>"",""1558-2183"","""",""10.1109/71.342127"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342127"","""",""Sufficient conditions";Distributed computing;Debugging;Computational modeling;Fault tolerance;Concurrent computing;Contracts;"Computer science"","""",""160"",""3"",""11"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"On multistage interconnection networks with small clock cycles,""Hee Yong Youn";" Youngsong Mun"",""Department of Computer Science and Engineering, University of Texas, Arlington, Arlington, TX, USA";" Department of Computer Science, Soongsil University, Seoul, South Korea"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""86"",""93"",""In packet switching using multistage interconnection networks (MIN's), it is generally assumed that the packet movements successively propagate from the last stage to the first stage in one network cycle. Ding and Bhuyan (1994), however, have shown that the network performance can be significantly improved if the packet movements are confined within each pair of adjacent stages using small clock cycles. In this short note, we present a model for estimating the performance of multibuffered MIN's employing the approach. Using the model, the relative effectiveness of the approach is identified compared to the traditional design.<>"",""1558-2183"","""",""10.1109/71.363408"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363408"","""",""Multiprocessor interconnection networks";Clocks;Packet switching;Computer science;Availability;Analytical models;Throughput;Costs;Computer networks;"Concurrent computing"","""",""5"","""",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Optimal and suboptimal processor allocation for hypercycle-based multiprocessors,""N. J. Dimopoulos";" V. V. Dimakopoulos"",""Department of Electrical and Computer Engineering, University of Victoria, Victoria, Canada";" Department of Electrical and Computer Engineering, University of Victoria, Victoria, Canada"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""175"",""185"",""Allocating nodes in a concurrent computer system depends on the topology of the system. In this work, we present a number of processor allocation strategies for Hypercycle based concurrent systems. Hypercycles is a class of multidimensional interconnection networks which includes such widely used networks as the binary n-cubes, k-ary n-cubes, generalized hypercubes etc. The allocation strategies presented include a statically optimal first-fit allocation, a suboptimal-first fit, and strategies with extended search space through the inclusion of additional search lists formed by permuting the base through which a hypercycle is defined. For all these strategies, we examine their optimality and present simulation results characterizing their performance relative to each other.<>"",""1558-2183"","""",""10.1109/71.342130"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342130"","""",""Network topology";Hypercubes;Reflective binary codes;Concurrent computing;Multiprocessor interconnection networks;Intelligent robots;Multidimensional systems;Computational modeling;Message passing;"Councils"","""",""2"","""",""22"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Optimal broadcast in all-port wormhole-routed hypercubes,""Ching-Tien Ho";" Ming-Yang Kao"",""IBM Research Division, Almaden Research Center, San Jose, CA, USA";" Computer Science Department, Duke University, Durham, NC, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""200"",""204"",""We give an optimal algorithm that broadcasts on an n-dimensional hypercube in O(n/ log/sub 2/ (n+1)) routing steps with wormhole, e-cube routing and all-port communication. Previously, the best algorithm of P.K. McKinley and C. Trefftz (1993) requires [n/2] routing steps. We also give routing algorithms that achieve tight time bounds for n /spl les/7.<>"",""1558-2183"","""",""10.1109/71.342134"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342134"","""",""Broadcasting";Hypercubes;Routing;Multicast algorithms;Parallel algorithms;Algebra;Parallel processing;Bandwidth;Circuit topology;"System recovery"","""",""35"","""",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Optimal granularity and scheme of parallel test generation in a distributed system,""H. Fujiwara";" T. Inoue"",""Graduate School of hformation Science, Nara Institute of Science and Technology, Ikoma, Nara, Japan";" Graduate School of hformation Science, Nara Institute of Science and Technology, Ikoma, Nara, Japan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""7"",""677"",""686"",""Client-Agent-Server model (CAS model) which can decrease the work load of the client by adding agent processors to the Client-Server model (CS model) is proposed and an approach to parallel test generation for logic circuits on the CAS model is presented. Two problems are considered: optimal granularity problem and optimal scheme problem. First, the problem of parallel test generation on the CAS model is formulated to analyze the effect of the granularity (grain size of target faults allocated to processors) in both cases of static and dynamic task allocation (optimal granularity problem). Then the relationship between the number of processors and the total processing time is analyzed (optimal scheme problem). From the analysis, it is shown that the CAS model can reduce the total processing time over the CS model and that there exists an optimal scheme (an optimal pair of numbers of agent processors and server processors) for the CAS model which minimizes the total processing time for a given number of processors. To corroborate the analysis, the proposed parallel test generation algorithm is implemented on a network of more than 100 workstations and experimental results for the ISCAS benchmark circuits are presented. It is shown that the experimental results are very close to the theoretical results which confirms the existence of optimal granularity and optimal scheme which minimizes the total processing time for the CAS model.<>"",""1558-2183"","""",""10.1109/71.395397"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=395397"","""",""Circuit testing";Content addressable storage;Logic testing;Logic circuits;Grain size;Circuit faults;Network servers;Algorithm design and analysis;Workstations;"Benchmark testing"","""",""9"","""",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Optimal hot spot allocation on meshes for large-scale data-parallel algorithms,""Soo-Young Lee";" Chung-Ming Chen"",""Department of Electrical Engineering, Aubum University, Auburn, AL, USA";" Center for Biomedical Engineering, College of Medicine, National Taiwan University, Taipei, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""788"",""802"",""Hot spots are notorious for degrading the performance of a parallel algorithm. We attempt to minimize the hot-spot access time for a class of problems, namely, Large-Scale Data-Parallel (LSDP) algorithms, on a 2D mesh. An LSDP algorithm has rich data parallelism but without exclusive task and data partitioning. Our approach is to allocate the hot spots at the optimal locations such that the hot-spot access time is minimized. Also, we have designed scheduling algorithms which control hot spot access sequences to achieve the minimal access time. Both uniform and nonuniform hot spots have been considered in this study. We have analytically derived the optimal allocations for wrapped-around and non-wrapped-around square meshes. The theoretical results have been verified by parallelizing the EM algorithm for 3D PET image reconstruction on the Intel iPSC/860.<>"",""1558-2183"","""",""10.1109/71.406956"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406956"","""",""Large-scale systems";Parallel algorithms;Partitioning algorithms;Degradation;Computer Society;Parallel processing;Scheduling algorithm;Positron emission tomography;Computational modeling;"Delay"","""",""1"","""",""9"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Optimal multicast communication in wormhole-routed torus networks,""D. F. Robinson"; P. K. McKinley;" B. H. C. Cheng"",""Department of Computer Science, Quincy University, Quincy, IL, USA"; Department of Computer Science, Michigan State University, East Lansing, MI, USA;" Department of Computer Science, Michigan State University, East Lansing, MI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""10"",""1029"",""1042"",""This paper presents efficient algorithms that implement one-to-many, or multicast, communication in wormhole-routed torus networks. By exploiting the properties of the switching technology and the use of virtual channels, a minimum-time multicast algorithm is presented for n-dimensional torus networks that use deterministic, dimension-ordered routing of unicast messages. The algorithm can deliver a multicast message to m-1 destinations in [log/sub 2/ m] message-passing steps, while avoiding contention among the constituent unicast messages. Performance results of a simulation study on torus networks with up to 4096 nodes are also given.<>"",""1558-2183"","""",""10.1109/71.473513"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=473513"","""",""Multicast communication";Intelligent networks;Multicast algorithms;Unicast;Routing;Concurrent computing;Computational modeling;Computer science;Hardware;"Computer Society"","""",""41"","""",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Optimal reconfiguration algorithms for real-time fault-tolerant processor arrays,""R. Libeskind-Hadas"; N. Shrivastava; R. G. Melhem;" C. L. Liu"",""Department of Computer Science, Harvey Mudd College, Claremont, CA, USA"; Department of ComputerScience, University of Pittsburgh, PA, USA; Department of ComputerScience, University of Pittsburgh, PA, USA;" Department of Computer Science, University of Illinois, Urbana-Champaign, IL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""498"",""510"",""In this paper we consider the problem of reconfiguring processor arrays subject to computational loads that alternate between two modes. A strict mode is characterized by a heavy computational load and severe constraints on response time while a relaxed mode is characterized by a relatively light computational load and relaxed constraints on response time. In the strict mode, reconfiguration is performed by a distributed local algorithm in order to achieve fast recovery from faults. In the relaxed mode, a global reconfiguration algorithm is used to restore the system to a state that maximizes the probability that future faults occurring in subsequent strict modes will be repairable. Several new results are given for this problem. Efficient reconfiguration algorithms are described for a number of general classes of architectures. These general algorithms obviate the need for architecture-specific algorithms for architectures in these classes. We show that it is unlikely that similar algorithms can be obtained for related classes of architectures since the reconfiguration problem for these classes is NP-complete. Finally, a general approximation algorithm is described that can be used for any architecture. Experimental results are given, suggesting that our algorithms are very effective.<>"",""1558-2183"","""",""10.1109/71.382318"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382318"","""",""Fault tolerance";Delay;Computer science;Radio access networks;Approximation algorithms;Very large scale integration;Runtime;Computer architecture;Real time systems;"Degradation"","""",""3"","""",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;
"Optimal scheduling of compute-intensive tasks on a network of workstations,""K. Efe";" V. Krishnamoorthy"",""Center for Advanced Computer Studies, University of Southwestern Louisiana, Lafayette, LA, USA";" Center for Advanced Computer Studies, University of Southwestern Louisiana, Lafayette, LA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""668"",""673"",""In a network of high performance workstations, many workstations are underutilized by their owners. The problem of using these idle cycles for solving computationally intensive tasks by executing a large task on many workstations has been addressed before and algorithms with O(N/sup 2/) time and O(N) space for choosing the optimal subset of workstations out of N workstations were presented. We improve these algorithms to reduce the running time to O(N log N), while keeping the space requirement the same. The proposed algorithms are particularly useful for SPMD parallelism where computation is the same for all workstations and the data space is partitioned between the workstations.<>"",""1558-2183"","""",""10.1109/71.388049"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388049"","""",""Optimal scheduling";Computer networks;Workstations;Processor scheduling;Partitioning algorithms;Supercomputers;Scheduling algorithm;Parallel processing;Concurrent computing;"Distributed computing"","""",""11"","""",""17"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Optimal simulation of full binary trees on faulty hypercubes,""B. M. Y. Chan"; F. Y. L. Chin;" Chung-Keung Poon"",""Department of Computer Science, University of Hong Kong, Hong Kong, China"; Department of Computer Science, University of Hong Kong, Hong Kong, China;" Department of Computer Science, University of Hong Kong, Hong Kong, China"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""3"",""269"",""286"",""We study the problem of running full binary tree based algorithms on a hypercube with faulty nodes. The key to this problem is to devise a method for embedding a full binary tree into the faulty hypercube. Based on a novel embedding strategy, we present two results for embedding an (n-1) tree fa full binary tree with 2/sup n-1/ nodes) into an n-cube (a hypercube with 2/sup n/ nodes) with unit dilation and load. For the problem where the root of the tree must be mapped to a specified hypercube node (specified root embedding problem), we show that up to n-2 (node or edge) faults can be tolerated. This result is optimal in the following sense: 1) it is time-optimal, 2) (n-1)-tree is the largest fall binary tree that can be embedded in an n-cube, and 3) n-2 faults Is the maximum number of worst-case faults that can be tolerated in the specified root problem. Furthermore, we also show that any algorithm for this problem cannot be totally recursive in nature. For the problem where the root can be mapped to any nonfaulty hypercube node (variable root embedding problem), we show that up to 2n-3-[log n] faults can be tolerated. Thus we have improved upon the previous result of n-1-[log n]. In addition, we show that the algorithm for the variable root embedding problem is optimal within a class of algorithms called recursive embedding algorithms as far as the number of tolerable faults is concerned. Finally, we show that when an O(1spl radic/n) fraction of nodes in the hypercube are faulty, it is not always possible to have an O(1)-load variable root embedding no matter how large the dilation is.<>"",""1558-2183"","""",""10.1109/71.372776"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372776"","""",""Binary trees";Hypercubes;Robustness;Senior members;"Computer science"","""",""9"","""",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;
"Parallel constant-time connectivity algorithms on a reconfigurable network of processors,""H. M. Alnuweiri"",""Department of Electrical Engineering, University of British Columbia, Vancouver, BC, Canada"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""105"",""110"",""This short note presents constant-time algorithms for labeling the connected components of an image on a network of processors with a wide reconfigurable bus. The algorithms are based on a processor indexing scheme which employs constant-weight codes. The use of such codes enables identifying a single representative processor for each component in a constant number of steps. The proposed algorithms can label an N/spl times/N image in O(1) time using N/sup 2/ processors, which is optimal. Furthermore, the proposed techniques lead to an O(logN/loglogN)-time image labeling algorithm on a network of N/sup 2/ processors with a reconfigurable bus of width log N bits. It is shown that these techniques on be applied to labeling an undirected N-vertex graph represented by an adjacency matrix.<>"",""1558-2183"","""",""10.1109/71.363405"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363405"","""",""Labeling";Binary codes;Iterative algorithms;Computer networks;Hardware;Pixel;Code standards;Indexing;Concurrent computing;"Array signal processing"","""",""4"","""",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"Parallel display of objects represented by linear octrees,""D. Ibaroudene";" R. Acharya"",""Engineering Department, Saint MaryE28099s University, San Antonio, TX, USA";" Electrical and Computer Engineering Department, State University of New York, University at Buffalo, Buffalo, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""79"",""85"",""The storage, display, and manipulation of three dimensional volumetric information requires large amounts of computing resources, both in terms of memory, and processing power. Most existing serial algorithms that display 3-D objects on a 2-D screen are found to be too slow to process the large amounts of volume data in a reasonable time. Hence, one way to increase the performance of the display algorithm is to process individual volume elements (voxels) in parallel. The first part of this paper presents a brief over view of the linear octree data structure which represents 3-D objects by an eight-way branching tree, while the second part focusses on the parallel display of such objects. We have shown that, for an object represented by a linear octree and enclosed in a 2/sup nspl times/2/sup nspl times/2/sup n/ universe, the maximum number of voxels that can be processed in parallel is 3/sup n/, and the maximum number of time steps required to display such an object is 4/sup n/. This paper presents a set of formulae which identify the processing element (PE) as well as the time step in which a given linear octree node is processed. Similarly, a procedure which determines the locational code of a linear octree node which must be processed by a given PE, at some specific time step, is presented, along with a strategy for determining whether a PE is active or idle.<>"",""1558-2183"","""",""10.1109/71.363409"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363409"","""",""Rendering (computer graphics)";Large screen displays;Computer displays;Three dimensional displays;Data acquisition;Image reconstruction;Data visualization;Tree data structures;Area measurement;"Density measurement"","""",""1"",""1"",""10"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Parallel N-ary speculative computation of simulated annealing,""A. Sohn"",""Department of Computer and Information Science, New Jersey Institute of Technology, Newark, NJ, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""10"",""997"",""1005"",""Simulated annealing is known to be an efficient method for combinatorial optimization problems. Its usage for realistic problem size, however, has been limited by the long execution time due to its sequential nature. This report presents a practical approach to synchronous simulated annealing for massively parallel distributed-memory multiprocessors. We use an n-ary speculative tree to execute n different iterations in parallel on n processors, called generalized speculative computation (GSC). Execution results of the 100- to 500-city traveling salesman problems on the AP1000 massively parallel multiprocessor demonstrate that the GSC approach can be an effective method for parallel simulated annealing as it gave over 20-fold speedup on 100 processors.<>"",""1558-2183"","""",""10.1109/71.473510"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=473510"","""",""Concurrent computing";Computational modeling;Simulated annealing;Circuit simulation;Temperature;Optimization methods;Performance evaluation;Parallel processing;Traveling salesman problems;"Space exploration"","""",""24"","""",""14"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"Parallelizing iterative loops with conditional branching,""Gyuneho Lee"",""Department of Electrical Engineering, University of Minnesota, Minneapolis, MN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""185"",""189"",""This paper considers automatic restructuring of loops with conditional branching for parallel processing, especially a class of loops termed """"conditional cyclic loops."""" A conditional cyclic loop possesses a dependence cycle caused by conditional branching across loop iterations, which makes it difficult to parallelize. In general, parallel execution of a conditional cyclic loop provides little benefit due to the need of solving a full-order nonlinear Boolean recurrence relation. However, the Boolean recurrence in practice is often of simpler forms. With the simpler forms, the number of possible predicate values of conditional branching is reduced drastically compared to a general conditional cyclic loop, These simple forms of conditional cyclic loops found in practice can be parallelized for O(p/ log p) speedup with p processors.<>"",""1558-2183"","""",""10.1109/71.342131"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342131"","""",""Parallel processing";Automatic control;Concurrent computing;Parallel algorithms;Binary trees;Joining processes;Parallel machines;"Distributed computing"","""",""1"",""3"",""11"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;
"Performance analysis of four memory consistency models for multithreaded multiprocessors,""Yong-Kim Chong";" Kai Hwang"",""School of Electrical and Electronic Engineering, Nanyang Technological University, Singapore";" Department of Electrical Engineering-Systems, University of Southern California, Los Angeles, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""10"",""1085"",""1099"",""Stochastic timed Petri nets are developed to evaluate the relative performance of distributed shared memory models for scalable multiprocessors, using multithreaded processors as building blocks. Four shared memory models are evaluated: the sequential consistency (SC) model by Lamport (1979), the weak consistency (WC) model by Dubois et al. (1986), the processor consistency (PC) model by Goodman (1989), and the release consistency (RC) model by Gharachorloo et al. (1990). We assumed a scalable network with a sufficient bandwidth to absorb the increased traffic from multithreading, coherent caches, and memory event reordering. The embedded Markov chains are solved to reveal the performance attributes. Under saturated conditions, we find that multithreading contributes more than 50% of the performance improvement, while the improvement from memory consistency models varies between 20% to 40% of the total performance gain. Petri net models are effective to predict the performance of processors with a larger number of contexts than that can be simulated in previous benchmark studies. The accuracy of these memory performance models was validated with the simulation results from Stanford University. Our analytical results reveal the lowest performance of the SC model amongst four memory consistency models. The PC model requires to use larger write buffers, while the WC and RC models require smaller write buffers. The PC model may perform even lower than the SC model, if a small buffer was used. The performance of the WC model depends heavily on the synchronization rate in user code. For a low synchronization rate, the WC model performs as well as the RC model. With sufficient multithreading and network bandwidth, the RC model shows the best performance among the four models. Furthermore, we discovered that cache interferences cause very little performance degradation in all relaxed memory consistency models";" as long as the network is contention-free even when multithreading has saturated the system.<>"",""1558-2183"","""",""10.1109/71.473517"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=473517"","""",""Performance analysis";Optical wavelength conversion;Multithreading;Bandwidth;Context modeling;Predictive models;Stochastic processes;Petri nets;Telecommunication traffic;"Traffic control"","""",""7"",""2"",""29"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Performance and scalability of preconditioned conjugate gradient methods on parallel computers,""A. Gupta"; V. Kumar;" A. Sameh"",""Department of Computer Science, University of Minnesota, Minneapolis, MN, USA"; Department of Computer Science, University of Minnesota, Minneapolis, MN, USA;" Department of Computer Science, University of Minnesota, Minneapolis, MN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""455"",""469"",""This paper analyzes the performance and scalability of an iteration of the preconditioned conjugate gradient algorithm on parallel architectures with a variety of interconnection networks, such as the mesh, the hypercube, and that of the CM-5 parallel computer. It is shown that for block-tridiagonal matrices resulting from two-dimensional finite difference grids, the communication overhead due to vector inner products dominates the communication overheads of the remainder of the computation on a large number of processors. However, with a suitable mapping, the parallel formulation of a PCG iteration is highly scalable for such matrices on a machine like the CM-5 whose fast control network practically eliminates the overheads due to inner product computation. The use of the truncated Incomplete Cholesky (IC) preconditioner can lead to further improvement in scalability on the CM-5 by a constant factor,as a result, a parallel formulation of the PCG algorithm with IC preconditioner may execute faster than that with a simple diagonal preconditioner even if the latter runs faster in a serial implementation.<>"",""1558-2183"","""",""10.1109/71.382315"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382315"","""",""Scalability";Computer networks;Concurrent computing;Performance analysis;Algorithm design and analysis;Parallel architectures;Multiprocessor interconnection networks;Hypercubes;Finite difference methods;"Grid computing"","""",""27"","""",""33"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Performance characterization of the tree quorum algorithm,""Her-Kun Chang";" Shyan-Ming Yuan"",""Department of Computer and Information Science, National Chiao Tung University, Hsinchu, Taiwan";" Department of Computer and Information Science, National Chiao Tung University, Hsinchu, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""658"",""662"",""The tree quorum algorithm, which logically organizes the sites in a system to a tree structure, is an efficient and fault-tolerant solution for distributed mutual exclusion. In this paper, the performance characteristics of the tree quorum algorithm is analyzed. A refinement algorithm is proposed to refine a logical tree structure by eliminating nodes or subtrees which do not improve the performance. Thus the refined tree performs better than the original.<>"",""1558-2183"","""",""10.1109/71.388047"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388047"","""",""Costs";Tree data structures;Centralized control;Distributed algorithms;Performance analysis;Algorithm design and analysis;Decision making;Fault tolerant systems;Availability;"Computer networks"","""",""2"","""",""11"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Performance considerations of shared virtual memory machines,""Xian-He Sun";" Jianping Zhu"",""Department of Computer Science, Louisiana State University, Baton Rouge, LA, USA";" NSF Engineering Research Center, Department of Mathematics and Statistics, Mississippi State University, MS, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""11"",""1185"",""1194"",""Generalized speedup is defined as parallel speed over sequential speed. In this paper the generalized speedup and its relation with other existing performance metrics, such as traditional speedup, efficiency, scalability, etc., are carefully studied. In terms of the introduced asymptotic speed, we show that the difference between the generalized speedup and the traditional speedup lies in the definition of the efficiency of uniprocessor processing, which is a very important issue in shared virtual memory machines. A scientific application has been implemented on a KSR-1 parallel computer. Experimental and theoretical results show that the generalized speedup is distinct from the traditional speedup and provides a more reasonable measurement. In the study of different speedups, an interesting relation between fixed-time and memory-bounded speedup is revealed. Various causes of superlinear speedup are also presented."",""1558-2183"","""",""10.1109/71.476190"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476190"","""",""Concurrent computing";Scalability;Parallel processing;Sun;Velocity measurement;Hardware;Distributed computing;Application software;Government;"Industrial relations"","""",""15"","""",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Performance of barrier synchronization methods in a multiaccess network,""Shun Yan Cheung";" V. S. Sunderam"",""Department of Mathematics and Computer Science, Emory University, Atlanta, CA, USA";" Department of Mathematics and Computer Science, Emory University, Atlanta, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""890"",""895"",""Barrier synchronization is a commonly used primitive in parallel processing. In this paper, we present different algorithms for barrier synchronization on the widely prevalent multiaccess bus network, and derive analytical performance metrics for each of the proposed schemes, which are then compared against simulation results.<>"",""1558-2183"","""",""10.1109/71.406967"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406967"","""",""Intelligent networks";Costs;Size measurement;Distributed computing;Parallel processing;Councils;Fault tolerance;Voting;Taxonomy;"Concurrency control"","""",""1"","""",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Prefix computations on a generalized mesh-connected computer with multiple buses,""Kun-Liang Chung"",""Department of Information Management, National Taiwan Institute of Technology, Taipei, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""196"",""199"",""The mesh-connected computer with multiple buses (MC-CMB) is a well-known parallel organization, providing broadcast facilities in each row and each column. In this paper, we propose a 2D generalized MCCMB (2-GMCCMB) for the purpose of increasing the efficiency of executing some important applications of prefix computations such as solving Linear recurrences and tridiagonaI systems, etc. A k/sub 1/n/sub 1spl times/k/sub 1/n/sub 2/ 2-GMCCMB is constructed from a k/sub 1/n/sub 1spl times/k/sub 1/n/sub 2/ mesh organization by enhancing the power of each disjoint n/sub 1spl times/n/sub 2/ submesh with multiple buses (sub-2-MCCMB). Given n data, a prefix computation can be performed in O(n/sup 1/10/) time on an n/sup 3/5spl times/n/sup 2/5/ 2-GMCCMB, where each disjoint sub-2-MCCMB is of size n/sup 1/2spl times/n/sup 3/10/. This time bound is faster than the previous time bound of O(n/sup 1/8/) for the same computation on an n/sup 5/8spl times/n/sup 3/8/ 2-MCCMB. Furthermore, the time bound of our parallel prefix algorithm can be further reduced to O(n/sup 1/11/) if fewer processors are used. Our result can be extended to the d-dimensional GMCCMB, giving a time bound of O(n/sup 1/(d2(d)+d)/) for any constant d";" here, we omit the constant factors. This time bound is less than the previous time bound of O(n/sup 1/(d2(d))/) on the d-dimensional MCCMB.<>"",""1558-2183"","""",""10.1109/71.342133"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342133"","""",""Broadcasting";Concurrent computing;Parallel algorithms;Application software;Computer applications;Nearest neighbor searches;Parallel machines;Image processing;Computational geometry;"Very large scale integration"","""",""20"","""",""30"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Prevention of congestion in packet-switched multistage interconnection networks,""Jyh-Charn Liu"; K. G. Shin;" C. C. Chang"",""Department of Computer Science, Texas A and M University, College Station, TX, USA"; Real-rime Computing Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA;" Department of Electrical Engineering, Texas A and M University, College Station, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""535"",""541"",""This paper proposes a simple, yet effective scheme to prevent congestion in a packet-switched multistage interconnection network (MIN) caused by hot spots. In this scheme, switches in the second and third stages of the MIN monitor their buffer occupancy to detect any notable nonuniform access behavior. When a switch detects congestion, packets generated by processors will be blocked from entering the congested switch until the congestion is cleared. Our scheme is compared with two well known schemes and shown to exhibit significantly better performance than these two.<>"",""1558-2183"","""",""10.1109/71.382322"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382322"","""",""Intelligent networks";Multiprocessor interconnection networks;Switches;Packet switching;Monitoring;Telecommunication traffic;Communication channels;Throughput;Vents;"Computer science"","""",""11"",""1"",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Processor allocation in hypercube multicomputers: fast and efficient strategies for cubic and noncubic allocation,""D. Das Sharma";" D. K. Pradhan"",""General Systems Lab, Hewlett Packard Company, Roseville, CA, USA";" Department of Computer Science, Texas A and M University, College Station, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""10"",""1108"",""1123"",""A new approach for dynamic processor allocation in hypercube multicomputers which supports a multi-user environment is proposed. A dynamic binary tree is used for processor allocation along with an array of free lists. Two algorithms are proposed based on this approach, capable of efficiently handling cubic as well as noncubic allocation. Time complexities for both allocation and deallocation are shown to be polynomial, a significant improvement over the existing exponential and even super-exponential algorithms. Unlike existing schemes, the proposed strategies are best-fit strategies within their search space. Simulation results indicate that the proposed strategies outperform the existing ones in terms of parameters such as average delay in honoring a request, average allocation time, average deallocation time, and memory overhead.<>"",""1558-2183"","""",""10.1109/71.473519"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=473519"","""",""Hypercubes";Binary trees;Delay effects;Polynomials;Operating systems;"Equations"","""",""16"","""",""24"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;
"Processor allocation in hypercube multiprocessors,""S. Rai"; J. L. Trahan;" T. Smailus"",""Department of Electrical and Computer Engineering, Louisiana State University, Baton Rouge, LA, USA"; Department of Electrical and Computer Engineering, Louisiana State University, Baton Rouge, LA, USA;" Robotics Research Laboratory Department of Computer Science and Remote Sensing and Image Processing Laboratory, Louisiana State University, Baton Rouge, LA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""6"",""606"",""616"",""The processor allocation problem requires recognizing and locating a free subcube that can accommodate a request for a subcube of a specified size for an incoming task. Methods reported in the literature fall into two strategies: bottom-up or bit mapped technique (BMT) and top-downer available cube technique (ACT). Our algorithm that solves the allocation problem in faulty hypercubes falls into the category of ACT's which offer the advantage over BMT's of quickly recognizing whether or not a requested subcube is available in the list of fault-free subcubes. We introduce new algebraic functions and the concept of separation factor to select a subcube for allocation. The notion of overlap-syndrome, defined in the text, quantifies the overlap among free subcubes. Our technique has full subcube recognition ability and thus recognizes more subcubes as compared to bit mapped techniques: Buddy, Gray code and its variants. The advantages of our approach over some of the existing ACT's in terms of fragmentation and overall completion time are described in the text and in simulation results.<>"",""1558-2183"","""",""10.1109/71.388041"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=388041"","""",""Hypercubes";Laboratories;Reflective binary codes;Circuit faults;Resilience;Scalability;Focusing;Network topology;Multiprocessor interconnection networks;"Multidimensional systems"","""",""7"","""",""20"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Processor mapping techniques toward efficient data redistribution,""E. T. Kalns";" L. M. Ni"",""IBM POWER pafallel Systems, Poughkeepsie, NY, USA";" Department of Computer Science, Michigan State University, East Lansing, MI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""12"",""1234"",""1247"",""Run-time data redistribution can enhance algorithm performance in distributed-memory machines. Explicit redistribution of data can be performed between algorithm phases when a different data decomposition is expected to deliver increased performance for a subsequent phase of computation. Redistribution, however, represents increased program overhead as algorithm computation is discontinued while data are exchanged among processor memories. In this paper, we present a technique that minimizes the amount of data exchange for BLOCK to CYCLIC(c) (or vice-versa) redistributions of arbitrary number of dimensions. Preserving the semantics of the target (destination) distribution pattern, the technique manipulates the data to logical processor mapping of the target pattern. When implemented on an IBM SP, the mapping technique demonstrates redistribution performance improvements of approximately 40% over traditional data to processor mapping. Relative to the traditional mapping technique, the proposed method affords greater flexibility in specifying precisely which data elements are redistributed and which elements remain on-processor."",""1558-2183"","""",""10.1109/71.476166"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476166"","""",""Computer Society";Runtime;System performance;Computer science;"Costs"","""",""45"","""",""23"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;;
"Products of networks with logarithmic diameter and fixed degree,""K. Efe";" A. Fernandez"",""Center for Advanced amputer studies, University of Southwestern Louisiana, Lafayette, LA, USA";" Departmento de Arquitectura y Tecnologia deComputadores, Universidad Politecnica de Madrid, Madrid, Spain"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""9"",""963"",""975"",""Analyzes some general properties of product networks that are pertinent to parallel architectures and then focuses on three case studies. These are products of complete binary trees, shuffle-exchange and de Bruijn networks. It is shown that all of these are powerful architectures for parallel computation, as evidenced by their ability to efficiently emulate numerous other architectures. In particular, r-dimensional grids and r-dimensional meshes of trees can be embedded efficiently in products of these graphs, i.e. either as a subgraph or with small constant dilation and congestion. In addition, the shuffle-exchange network can be embedded in an r-dimensional product of shuffle-exchange networks with dilation cost 2r and congestion cost 2. Similarly, the de Bruijn network can be embedded in an r-dimensional product of de Bruijn networks with dilation cost r and congestion cost 4. Moreover, it is well known that shuffle-exchange and de Bruijn graphs can emulate the hypercube with a small constant slowdown for """"normal"""" algorithms. This means that their product versions can also emulate these hypercube algorithms with constant slowdown. Conclusions include a discussion of many open research areas.<>"",""1558-2183"","""",""10.1109/71.466633"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=466633"","""",""Binary trees";Costs;Hypercubes;Grid computing;Bandwidth;Computer networks;Parallel architectures;Computer architecture;Concurrent computing;"Multiprocessor interconnection networks"","""",""39"","""",""20"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Properties of generalized Branch and Combine clock networks,""A. El-Amawy";" P. Kulasinghe"",""Department of Electrical and Computer Engineering, Louisiana State University, Baton Rouge, LA, USA";" Department of Electrical and Computer Engineering, Louisiana State University, Baton Rouge, LA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""541"",""546"",""In a recent development a new clock distribution scheme has been introduced. The scheme called Branch-and-Combine or BaC, is the first to guarantee constant skew bound regardless of network size. In this paper we generalize and extend the work on BaC networks. Our study takes the approach of defining a general graph theoretic model which is then utilized to define a general network model taking into account node function. We use the models to establish some interesting results on clocking paths, node input sequences, node inputs' relative timings, and skew bound. We prove that a network adhering to our general model is stable (will not oscillate) despite its cyclic nature. We also prove that no tree of any kind can be used to distribute the clock in two or more dimensions such that skew bound is constant. The paper then exploits the derived properties to describe the inherent interplay between topology, timing, node function, and skew bound.<>"",""1558-2183"","""",""10.1109/71.382323"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382323"","""",""Clocks";Timing;Network topology;Very large scale integration;Propagation delay;Stability;Synchronization;Wires;Threshold voltage;"Upper bound"","""",""2"","""",""14"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Reconfigurable buses with shift switching: concepts and applications,""R. Lin";" S. Olariu"",""Department of Computer Science, State University New York, Geneseo, NY, USA";" Department of Computer Science, Old Dominion University, Norfolk, VA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""93"",""102"",""We propose to enhance traditional broadcast buses by the addition of a new feature that we call shift switching. We show that on a linear array of processors enhanced with shift switching, the prefix sums of n bits can be computed in [log(n+1)/log w] broadcasts, each over n switches, assuming a global bus of width w. Next our prefix sums algorithm is used in conjunction with broadcasting on short buses to obtain several efficient architectural designs for the following fundamental problems: 1) ranking linked lists, 2) counting the number of 1's in a sequence of n bits, and 3) sorting small sets. We see our main contribution in showing that the new bus feature leads to designs that are both theoretically interesting and practically relevant.<>"",""1558-2183"","""",""10.1109/71.363407"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363407"","""",""Broadcasting";Parallel machines;Delay;Sorting;Computer science;Optical switches;Very large scale integration;Algorithm design and analysis;Parallel architectures;"Counting circuits"","""",""39"","""",""31"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Relaxing synchronization in distributed simulated annealing,""Chul-Eui Hong";" B. M. McMillin"",""Electronics and Telecommunications Research Institute, Taejon, South Korea";" Department of Computer Science, University of Missouri, Rolla, Rolla, MO, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""2"",""189"",""195"",""This paper presents a cost error measurement scheme and relaxed synchronization method, for simulated annealing on a distributed memory multicomputer, which predicts the amount of cost error that an algorithm will tolerate. An adaptive error control method is developed and implemented on an Intel iPSC/2.<>"",""1558-2183"","""",""10.1109/71.342132"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=342132"","""",""Simulated annealing";Costs;Error correction;Solid modeling;Temperature;Predictive models;Programmable control;Adaptive control;Parallel processing;"State-space methods"","""",""8"","""",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Resource placement with multiple adjacency constraints in k-ary n-cubes,""P. Ramanathan";" S. Chalasani"",""Dept. of Electr. & Comput. Eng., Wisconsin Univ., Madison, WI, USA";" Dept. of Electr. & Comput. Eng., Wisconsin Univ., Madison, WI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""511"",""519"",""The problem of placing resources in a k-ary n-cube (k>2) is considered in this paper. For a given j/spl ges/1, resources are placed such that each nonresource node is adjacent to j resource nodes. We first prove that perfect j-adjacency placements are impossible in k-ary n-cubes if n<j<2n. Then, we show that a perfect j-adjacency placement is possible in k-ary n-cubes when one of the following two conditions is satisfied: (1) if and only if j equals 2n and k is even, or (2) if 1/spl les/j/spl les/n and there exist integers q and r such that q divides k and q/sup r/-1=2n/j. In each case, we describe an algorithm to obtain perfect j-adjacency placements. We also show that these algorithms can be extended under certain conditions to place j distinct types of resources in a such way that each nonresource node is adjacent to a resource node of each type. For the cases when perfect j-adjacency placements are not possible, we consider approximate j-adjacency placements. We show that the number of copies of resources required in this case either approaches a theoretical lower bound on the number of copies required for any j-adjacency placement or is within a constant factor of the theoretical lower bound for large k.<<ETX>>"",""1558-2183"","""",""10.1109/71.382319"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382319"","""",""Multiprocessing systems";Hypercubes;Resource management;Computer networks;Multiprocessor interconnection networks;Hardware;Printers;Software libraries;Performance loss;"Costs"","""",""22"",""3"",""9"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Resource-constrained software pipelining,""A. Aiken"; A. Nicolau;" S. Novack"",""Electrical Engineering and Computer Science, University of California Berkeley, Berkeley, CA, USA"; Department of Information and Computer Science, University of California, Irvine, Irvine, CA, USA;" Department of Information and Computer Science, University of California, Irvine, Irvine, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""12"",""1248"",""1270"",""This paper presents a software pipelining algorithm for the automatic extraction of fine-grain parallelism in general loops. The algorithm accounts for machine resource constraints in a way that smoothly integrates the management of resource constraints with software pipelining. Furthermore, generality in the software pipelining algorithm is not sacrificed to handle resource constraints, and scheduling choices are made with truly global information. Proofs of correctness and the results of experiments with an implementation are also presented."",""1558-2183"","""",""10.1109/71.476167"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476167"","""",""Pipeline processing";Job shop scheduling;Software algorithms;Processor scheduling;Parallel processing;VLIW;Scheduling algorithm;Hardware;Computer aided manufacturing;"Computer science"","""",""41"",""8"",""42"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Ring-connected networks and their relationship to cubical ring connected cycles and dynamic redundancy networks,""I. Y. . -Y. Lee";" Sheng-De Wang"",""Department of Electrical Engineering, National Taiwan University, Taipei, Taiwan";" Department of Electrical Engineering, National Taiwan University, Taipei, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""9"",""988"",""996"",""Reviews a 1-fault-tolerant (1-ft) hypercube model with degree 2r: the ring-connected network (RCN), which has the lowest degree among all 1-ft, one-spare node, r-dimensional hypercube architectures yet discovered. Then, we propose a constant-time reconfiguration algorithm via an add-and-modulo automorphism. Furthermore, by introducing the equivalence from hypercubes to cube-connected cycles (CCCs) and to butterflies (BFs), we find that there is also a corresponding equivalence from RCNs to cubical ring-connected cycles (CRCCs) and to dynamic redundancy networks (DRNs). From this fact, we find that once a symmetric fault-tolerant structure has been discovered for one of the three models, then it can be applied directly to the other hypercubic networks. Applying the technique, we find a degree-6, 1-ft Benes network. We think that more attention should be paid to the strong relationship between hypercubes, CCCs and BFs. Finally, from this equivalence relationship we propose three new bounded-degree k-ft models: k-ft CCCs, k-ft BFs and k-ft Benes networks.<>"",""1558-2183"","""",""10.1109/71.466635"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=466635"","""",""Hypercubes";Vehicle dynamics;Redundancy;Fault tolerance;Computer Society;Computer networks;Concurrent computing;Computer architecture;"Multiprocessor interconnection networks"","""",""4"",""2"",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Routing in modular fault-tolerant multiprocessor systems,""M. S. Alam";" R. G. Melhem"",""AT and T Bell Laboratories, Inc., Redhill, NJ, USA";" Department of Computer Science, University of Pittsburgh, Pittsburgh, PA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""11"",""1206"",""1220"",""In this paper, we consider a class of modular multiprocessor architectures in which spares are added to each module to cover for faulty nodes within that module, thus forming a fault-tolerant basic block (FTBB). In contrast to reconfiguration techniques that preserve the physical adjacency between active nodes in the system, our goal is to preserve the logical adjacency between active nodes by means of a routing algorithm which delivers messages successfully to their destinations. We introduce two-phase routing strategies that route messages first to their destination FTBB, and then to the destination nodes within the destination FTBB. Such a strategy may be applied to a variety of architectures including binary hypercubes and three-dimensional tori. In the presence of f faults in hypercubes and tori, we show that the worst case length of the message route is min {/spl sigma/+f, (K+1)/spl sigma/}+c where /spl sigma/ is the shortest path in the absence of faults, K is the number of spare nodes in an FTBB, and c is a small constant. The average routing overhead is much lower than the worst case overhead."",""1558-2183"","""",""10.1109/71.476192"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476192"","""",""Routing";Fault tolerant systems;Multiprocessing systems;Fault tolerance;Hypercubes;Degradation;Topology;Computer Society;Computer architecture;"Real time systems"","""",""2"","""",""31"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Runtime support and compilation methods for user-specified irregular data distributions,""R. Ponnusamy"; J. Saltz; A. Choudhary; Yuan-Shin Hwang;" G. Fox"",""Northeast Parallel Architectures Center, Syracuse University, Syracuse, NY, USA"; UMIACS and Computer Science Department, University of Maryland, College Park, MD, USA; Northeast Parallel Architectures Center, Syracuse University, Syracuse, NY, USA; UMIACS and Computer Science Department, University of Maryland, College Park, MD, USA;" Northeast Parallel Architectures Center, Syracuse University, Syracuse, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""8"",""815"",""831"",""This paper describes two new ideas by which a High Performance Fortran compiler can deal with irregular computations effectively. The first mechanism invokes a user specified mapping procedure via a set of proposed compiler directives. The directives allow use of program arrays to describe graph connectivity, spatial location of array elements, and computational load. The second mechanism is a conservative method for compiling irregular loops in which dependence arises only due to reduction operations. This mechanism in many cases enables a compiler to recognize that it is possible to reuse previously computed information from inspectors (e.g., communication schedules, loop iteration partitions, and information that associates off-processor data copies with on-processor buffer locations). This paper also presents performance results for these mechanisms from a Fortran 90D compiler implementation.<>"",""1558-2183"","""",""10.1109/71.406958"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=406958"","""",""Runtime";Costs;Distributed computing;Concurrent computing;Computational fluid dynamics;Computer science;Parallel architectures;Prefetching;Computer Society;"High performance computing"","""",""41"","""",""45"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;
"Sequential hardware prefetching in shared-memory multiprocessors,""F. Dahlgren"; M. Dubois;" P. Stenstrom"",""The Department of Computer Engineering, Lund University, Lund, Sweden"; The Department of Electrical Engineering-Systems, University of Southern California, Los Angeles, CA, USA;" The Department of Computer Engineering, Lund University, Lund, Sweden"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""7"",""733"",""746"",""To offset the effect of read miss penalties on processor utilization in shared-memory multiprocessors, several software- and hardware-based data prefetching schemes have been proposed. A major advantage of hardware techniques is that they need no support from the programmer or compiler. Sequential prefetching is a simple hardware-controlled prefetching technique which relies on the automatic prefetch of consecutive blocks following the block that misses in the cache, thus exploiting spatial locality. In its simplest form, the number of prefetched blocks on each miss is fixed throughout the execution. However, since the prefetching efficiency varies during the execution of a program, we propose to adapt the number of pre-fetched blocks according to a dynamic measure of prefetching effectiveness. Simulations of this adaptive scheme show reductions of the number of read misses, the read penalty, and of the execution time by up to 78%, 58%, and 25% respectively.<>"",""1558-2183"","""",""10.1109/71.395402"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=395402"","""",""Hardware";Prefetching;Delay;Costs;Protocols;Computer Society;Programming profession;Program processors;"Runtime"","""",""94"",""8"",""29"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Some new designs of 2-D array for matrix multiplication and transitive closure,""Jong-Chuang Tsay";" Pen-Yuang Chang"",""Institute of Computer Science and Information Engineering College of Engineering, National Chiao Tung University, Hsinchu, Taiwan";" Institute of Computer Science and Information Engineering College of Engineering, National Chiao Tung University, Hsinchu, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""351"",""362"",""We present some new regular iterative algorithms for matrix multiplication and transitive closure. With these algorithms, by spacetime mapping the 2-D arrays with 2N-1 and upper bound [(3N-1)/2] execution times for matrix multiplication can be obtained. Meanwhile, we can derive a 2-D array with 4N-2 execution rime for transitive closure based on the sequential Warshall-Floyd algorithm. All these new 2-D arrays for matrix multiplication and transitive closure have the advantages of faster and more regular than other previous designs.<>"",""1558-2183"","""",""10.1109/71.372789"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372789"","""",""Processor scheduling";Iterative algorithms;Systolic arrays;Vectors;Very large scale integration;Space technology;Design methodology;Equations;Councils;"Computer science"","""",""8"","""",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Sorting n/sup 2/ numbers on n/spl times/n meshes,""M. Nigam";" S. Sahni"",""Computer and Information SciencesDepartment, University of Florida, Gainesville, FL, USA";" Computer and Information SciencesDepartment, University of Florida, Gainesville, FL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""12"",""1221"",""1225"",""We show that by folding data from an n/spl times/n mesh onto an n/spl times/(n/k) submesh, sorting on the submesh, and finally unfolding back onto the entire n/spl times/n mesh it is possible to sort on bidirectional and strict unidirectional meshes using a number of routing steps that is very close to the distance lower bound for these architectures."",""1558-2183"","""",""10.1109/71.476164"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476164"","""",""Sorting";Computer architecture;Routing;Concurrent computing;"Distributed computing"","""",""6"","""",""11"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;;
"Stack evaluation of arbitrary set-associative multiprocessor caches,""Yuguang Wu";" R. Muntz"",""AT and T Bell Laboratories, Inc., Holmdel, NJ, USA";" Computer Science Department, University of California, Los Angeles, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""9"",""930"",""942"",""We propose a simple solution to the problem of efficient stack evaluation of LRU multiprocessor cache memories with arbitrary set-associative mapping. It is an extension of the existing stack evaluation techniques for all set-associative LRU uniprocessor caches. Special marker entries are used in the stack to represent data blocks (or lines) deleted by an invalidation-based cache coherence protocol. A method of marker-splitting is employed when a data block below a marker in the stack is accessed. Using this technique, one-pass trace evaluation of memory access trace yields hit ratios for all cache sizes and set-associative mappings of multiprocessor caches in a single pass over a memory reference trace. Simulation experiments on some multiprocessor trace data show an order-of-magnitude speed-up in simulation time using this one-pass technique.<>"",""1558-2183"","""",""10.1109/71.466631"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=466631"","""",""Cache memory";Emulation;Computational modeling;Access protocols;Coherence;Size measurement;Computer science;Finishing;"Processor scheduling"","""",""12"",""2"",""32"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Supporting fault-tolerant parallel programming in Linda,""D. E. Bakken";" R. D. Schlichting"",""Distributed Systems Department, BBN Systems and Technologies Corporation, Cambridge, MA, USA";" Department of Computer Science, University of Arizona Tucson, Tucson, AZ, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""3"",""287"",""302"",""Linda is a language for programming parallel applications whose most notable feature is a distributed shared memory called tuple space. While suitable for a wide variety of programs, one shortcoming of the language as commonly defined and implemented is a lack of support for writing programs that can tolerate failures in the underlying computing platform. This paper describes FT-Linda, a version of Linda that addresses this problem by providing two major enhancements that facilitate the writing of fault-tolerant applications: stable tuple spaces and atomic execution of tuple space operations. The former is a type of stable storage in which tuple values are guaranteed to persist across failures, while the latter allows collections of tuple operations to be executed in an all-or-nothing fashion despite failures and concurrency. The design of these enhancements is presented in detail and illustrated by examples drawn from both the Linda and fault-tolerance domains. An implementation of FT-Linda for a network of workstations is also described. The design is based on replicating the contents of stable tuple spaces to provide failure resilience and then updating the copies using atomic multicast. This strategy allows an efficient implementation in which only a single multicast message is needed for each atomic collection of tuple space operations.<>"",""1558-2183"","""",""10.1109/71.372777"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372777"","""",""Fault tolerance";Parallel programming;Writing;Workstations;Hardware;Parallel processing;Computer architecture;Hypercubes;Programming profession;"Concurrent computing"","""",""63"",""4"",""42"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Synchronous bandwidth allocation in FDDI networks,""Qin Zheng";" K. G. Shin"",""Cambridge Research Center, Mitsubishi Electric Research Laboratories, Inc., Cambridge, MA, USA";" Real-Time Computing Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""12"",""1332"",""1338"",""It is well known that an FDDI token ring network provides a guaranteed throughput for synchronous messages and a bounded medium access delay for each node/station. However, this fact alone cannot effectively support many real-time applications that require the timely delivery of each critical message. The reason for this is that the FDDI guarantees a medium access delay bound to nodes, but not to messages themselves. The message-delivery delays may exceed the medium-access delay bound even if a node transmits synchronous messages at a rate not greater than the guaranteed throughput. We solve this problem by developing a synchronous bandwidth allocation (SEA) scheme which calculates the synchronous bandwidth necessary for each application to satisfy its message-delivery delay requirement. The result obtained in this paper is essential for effective use of the FDDI token ring networks in supporting such real-time communication as digital video/audio transmissions, and distributed control/monitoring."",""1558-2183"","""",""10.1109/71.476172"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=476172"","""",""Channel allocation";Intelligent networks;FDDI;Delay;Throughput;Token networks;Bandwidth;Laboratories;Media Access Protocol;"Monitoring"","""",""12"",""1"",""25"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Systolic self-organizing lists under transpose,""L. M. Stauffer";" D. S. Hirschberg"",""ICs Department, University of California, Irvine, CA, USA";" ICs Department, University of California, Irvine, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""102"",""105"",""Systolic array architectures for self-organizing linear lists under the transpose update heuristic are presented. The first model has linear delay and restricts input on every other system cycle. The second system combines a systolic array with trees to provide logarithmic delay and input on every clock cycle. These preliminary designs can be the basis of hardware used to achieve high-speed lossless data compression for data communication and storage. On large files (greater than 40 kilobytes), our designs provide better compression than other systolic list compression schemes.<>"",""1558-2183"","""",""10.1109/71.363406"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363406"","""",""Systolic arrays";Data compression;Very large scale integration;Steady-state;Delay lines;Clocks;Hardware;Data communication;Dictionaries;"Bandwidth"","""",""1"","""",""11"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"The composite banyan network,""Seung-Woo Seo";" Tse-Yun Feng"",""Department of Electrical Engineering, Princeton University, Princeton, NJ, USA";" Department of Computer Science and Engineering, Pennslyvania State University, University Park, PA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""10"",""1043"",""1054"",""A new multipath multistage interconnection network called the composite banyan network is proposed. The network incorporates both the banyan and the reverse banyan networks and is constructed by superimposing the two. The basic building blocks in the composite banyan network are 3/spl times/3 switching elements with log/sub 2/N stages. A major advantage of the composite banyan network over existing networks with 3/spl times/3 SEs is an efficient and fast control algorithm that sets up a path between any source and destination pair. Instead of complex numerical calculations, the network can easily generate a primary routing tag and alternate tags through simple binary operations. Also, the network has a lot of favorable features, including regularity, symmetry, and easy rerouting capability under faults and conflicts. It is shown that at least two totally disjoint paths exist between any source and destination pair, which increase the degree of fault-tolerance. A deterministic permutation routing algorithm is also developed for the 8/spl times/8 composite banyan network, Using a simple tabular method, it is shown that the algorithm always finds a set of conflict-free tags.<>"",""1558-2183"","""",""10.1109/71.473514"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=473514"","""",""Routing";Fault tolerance;Propagation delay;Costs;Throughput;Fault tolerant systems;Hardware;Process control;Computer networks;"Concurrent computing"","""",""15"",""1"",""17"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"The message flow model for routing in wormhole-routed networks,""X. Lin"; P. K. McKinley;" L. M. Ni"",""Department of Computer Science, Michigan State University, East Lansing, MI, USA"; Department of Computer Science, Michigan State University, East Lansing, USA;" Department of Computer Science, Michigan State University, East Lansing, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""7"",""755"",""760"",""In this paper, we introduce a new approach to deadlock-free routing in wormhole-routed networks called the message flow model. This method may be used to develop deterministic, partially-adaptive, and fully-adaptive routing algorithms for wormhole-routed networks with arbitrary topologies. We first establish the necessary and sufficient condition for deadlock free routing, based on the analysis of the message flow on each channel. We then use the model to develop new adaptive routing algorithms for 2D meshes.<>"",""1558-2183"","""",""10.1109/71.395404"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=395404"","""",""Routing";Intelligent networks;System recovery;Network topology;Sufficient conditions;Delay;Computer science;Multicast algorithms;Multicast communication;"Mesh networks"","""",""56"",""1"",""13"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"The potential of compile-time analysis to adapt the cache coherence enforcement strategy to the data sharing characteristics,""F. Mounes-Toussi";" D. J. Lilja"",""Department of Electrical Engineering, University of Minnesota, Minneapolis, MN, USA";" Department of Electrical Engineering, University of Minnesota, Minneapolis, MN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""5"",""470"",""481"",""Cache coherence schemes that dynamically adapt to memory referencing patterns have been proposed to improve coherence enforcement in shared-memory multiprocessors. By using only run-time information, however, these existing schemes are incapable of looking ahead in the memory referencing stream. We present a combined hardware-software strategy that uses the predictive capability of the compiler to select updating or invalidating for each write reference. To determine the potential performance improvement that can be achieved with this optimization, three different levels of compiler capabilities are examined. Simulations using memory traces show that with an ideal compiler, this optimization can potentially reduce the miss ratio by 0.4% to 15% compared to an invalidating-only scheme, while reducing the generated network traffic by 13% to 94% compared to an updating-only scheme. In addition, this optimization can potentially reduce the miss ratio by up to 13%, while reducing the generated network traffic by up to 92%, compared to a dynamic adaptive scheme. Furthermore, performance can be potentially improved even with a compiler capable of performing only imprecise array subscript analysis and no interprocedural analysis.<>"",""1558-2183"","""",""10.1109/71.382316"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=382316"","""",""Optimizing compilers";Telecommunication traffic;Performance analysis;Switches;Large-scale systems;Senior members;Runtime;Traffic control;Delay effects;"Broadcasting"","""",""12"",""2"",""31"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"The real two-zero algorithm: a parallel algorithm to reduce a real matrix to a real Schur form,""M. Mantharam";" P. J. Eberlein"",""Dept. of Math., City Univ. of New York, NY, USA";" NA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""1"",""48"",""62"",""We introduce a new method to reduce a real matrix to a real Schur form by a sequence of similarity transformations that are 3D orthogonal transformations. Two significant features of this method are that: all the transformed matrices and all the computations are done in the real field";" and it can be easily parallelized. We call the algorithm that uses this method the real two-zero (RTZ) algorithm. We describe both serial and parallel implementations of the RTZ algorithm. Our tests indicate that the rate of convergence to a real Schur form is quadratic for real near-normal matrices with real distinct eigenvalues. Suppose n is the order of a real matrix A. In order to choose a sequence of 3D orthogonal transformations on A, we need to determine some ordering on triples in T={(k,l,m)|1/spl les/k<l<m/spl les/n}, where (k,l,m) defines the three coordinates under the 3D transformation. We show how the ordering of the triples used in our implementations can be generated cyclically in an algorithm.<<ETX>>"",""1558-2183"","""",""10.1109/71.363411"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=363411"","""",""Parallel algorithms";Jacobian matrices;Symmetric matrices;Convergence;Concurrent computing;Testing;Eigenvalues and eigenfunctions;Mathematics;"Computer science"","""",""2"","""",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Time-optimal visibility-related algorithms on meshes with multiple broadcasting,""D. Bhagavathi"; V. V. Bokka; H. Gurla; S. Olariu; J. L. Schwing; I. Stojmenovic;" J. Zhang"",""Department of Computer Science, Southern Illinois University, Edwardsville, IL, USA"; Department of Computer Science, Old Dominion University, Norfolk, VA, USA; Department of Computer Science, Old Dominion University, Norfolk, VA, USA; Department of Computer Science, Old Dominion University, Norfolk, VA, USA; Department of Computer Science, Old Dominion University, Norfolk, VA, USA; NA;" Department of Mathematics and Computer Science, Elizabeth City State University, Elizabeth, NC, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""7"",""687"",""703"",""Given a collection of objects in the plane along with a viewpoint /spl omega/, the visibility problem involves determining the portion of each object that is visible to an observer positioned at /spl omega/. The visibility problem is central to various application areas including computer graphics, image processing, VLSI design, and robot navigation, among many others. The main contribution of this work is to provide time-optimal solutions to this problem for several classes of objects, namely ordered line segments, disks, and iso-oriented rectangles in the plane. In addition, our visibility algorithm for line segments is at the heart of time-optimal solutions for determining, for each element in a given sequence of real numbers, the position of the nearest larger element within that sequence, triangulating a set of points in the plane, determining the visibility pairs among a set of vertical line segments, and constructing the dominance and visibility graphs of a set of iso-oriented rectangles in the plane. All the algorithms in this paper involve an input of size n and run in O(log n) time on a mesh with multiple broadcasting of size n/spl times/n. This is the first instance of time-optimal solutions for these problems on this architecture.<>"",""1558-2183"","""",""10.1109/71.395398"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=395398"","""",""Image segmentation";Application software;Computer graphics;Image processing;Very large scale integration;Process design;Robots;Navigation;Heart;"Broadcasting"","""",""18"",""2"",""44"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";
"Two packet routing algorithms on a mesh-connected computer,""Qian-Ping Gu";" Jun Gu"",""Department of Computer Software, University of Aim Aizu-Wakamatsu, Fukushima, Japan";" Department of Computer Science, Hong Kong University of Science and Technology, Hong Kong, China"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""4"",""436"",""440"",""We give two algorithms for the 1-1 routing problems on a mesh-connected computer. The first algorithm, with queue size 28, solves the 1-1 routing problem on an n/spl times/n mesh-connected computer in 2n+O(1) steps. This improves the previous queue size of 75. The second algorithm solves the 1-1 routing problem in 2n-2 steps with queue size 12 t/sub ss where t/sub s/ is the time for sorting an s/spl times/s mesh into a row major order for all s/spl ges/1. This result improves the previous queue size 18.67 t/sub ss.<>"",""1558-2183"","""",""10.1109/71.372798"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372798"","""",""Routing";Concurrent computing;Costs;Sorting;Parallel algorithms;Hardware;Large-scale systems;Very large scale integration;Computational modeling;"Algorithm design and analysis"","""",""6"","""",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Using a multipath network for reducing the effects of hot spots,""Mu-Cheng Wang"; H. J. Siegel; M. A. Nichols;" S. Abraham"",""CUNY, Information Systems and Queens College, New York, NY, USA"; Parallel Processing Laboratory, School of Electrical Engineering, Purdue University, West Lafayette, IN, USA; NCR Corporation, San Diego, CA, USA;" Parallel Processing Laboratory, School of Electrical Engineering, Purdue University, West Lafayette, IN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1995"",""6"",""3"",""252"",""268"",""One type of interconnection network for a medium to large-scale parallel processing system (i.e., a system with 2/sup 6/ to 2/sup 16/ processors) is a buffered packet-switched multistage interconnection network (MIN). It has been shown that the performance of these networks is satisfactory for uniform network traffic. More recently, several studies have indicated that the performance of MIN's is degraded significantly when there is hot spot traffic, that is, a large fraction of the messages are routed to one particular destination. A multipath MIN is a MIN with two or more paths between all source and destination pairs. This research investigates how the Extra Stage Cube multipath MIN can reduce the detrimental effects of tree saturation caused by hot spots. Simulation is used to evaluate the performance of the proposed approaches. The objective of this evaluation is to show that, under certain conditions, the performance of the network with the usual routing scheme is severely degraded by the presence of hot spots. With the proposed approaches, although the delay time of hot spot traffic may be increased, the performance of the background traffic, which constitutes the majority of the network traffic, can be significantly improved.<>"",""1558-2183"","""",""10.1109/71.372775"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=372775"","""",""Network topology";Telecommunication traffic;Parallel processing;Multiprocessor interconnection networks;Degradation;Multiprocessing systems;Routing;Delay effects;Large-scale systems;"Proportional control"","""",""22"",""2"",""37"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;