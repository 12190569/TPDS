"1997 Index IEEE Transactions on Parallel And Vol. 8,"""",,""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1301"",""1312"",""This index covers all technical items - papers, correspondence, reviews, etc. - that appeared in this periodical during the year, and items from previous years that were commented upon or corrected in this year. Departments and other items may also be covered if they have been judged to have archival value. The Author Index contains the primary entry for each item, listed under the first author's name. The primary entry includes the co-authors' names, the title of the paper or other item, and its location, specified by the publication abbreviation, year, month, and inclusive pagination. The Subject Index contains entries describing the item under all appropriate subject headings, plus the first author's name, the publication abbreviation, month, and year, and inclusive pages. Note that the item title is found only under the primary entry in the Author Index."",""1558-2183"","""",""10.1109/TPDS.1997.640023"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640023"","""","""","""","""","""","""",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;;;;;;;;;
"A Boolean expression-based approach for maximum incomplete subcube identification in faulty hypercubes,""Hsing-Lung Chen";" Nian-Feng Tzeng"",""Department of Electronic Engineering, National Taiwan University of Science and Technology, Taipei, Taiwan";" Center for Advanced Computer Studies, University of Southwestern Louisiana, Lafayette, LA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""11"",""1171"",""1183"",""An incomplete hypercube possesses virtually every advantage of complete hypercubes, including simple deadlock-free routing, a small diameter, bounded link traffic density, a good support of parallel algorithms, and so on. It is natural to reconfigure a faulty hypercube into a maximum incomplete cube so as to lower potential performance degradation, because a hypercube so reconfigured often results in a much larger system than what is attainable according to any conventional reconfiguration scheme which identifies only complete subcubes. A maximum incomplete subcube involves one maximum complete subcube, plus certain smaller complete subcubes, and, thus, may accommodate multiple jobs of different sizes simultaneously, delivering a higher performance level. This paper proposes an efficient approach for identifying all the maximum incomplete subcubes present in a faulty hypercube. The proposed approach is on the basis of manipulating Boolean expressions, with the search space reduced considerably by taking advantage of the basic properties of faulty hypercubes during expression manipulation. It is distributed, in that every healthy node executes the same identification algorithm independently, at the same time, it is confirmed by fault simulation that our approach indeed gives rise to significantly larger reconfigured systems and requires short execution times."",""1558-2183"","""",""10.1109/71.642951"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=642951"","""",""Fault diagnosis";Hypercubes;Circuit faults;Routing;Degradation;System recovery;Fault tolerant systems;Parallel algorithms;"Distributed algorithms"","""",""16"","""",""22"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"A circular list based mutual exclusion scheme for large shared-memory multiprocessors,""S. S. Fu";" Nian-Feng Tzeng"",""Center for Advanced Computer Studies, University of Southwestern Louisiana, Lafayette, LA, USA";" Center for Advanced Computer Studies, University of Southwestern Louisiana, Lafayette, LA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""628"",""639"",""Mutual exclusion in shared-memory multiprocessors is realized by employing a lock to determine the processor among those which compete for the critical section. Accesses to such a mutual exclusion lock may create heavy synchronization traffic and/or serious contention over the network, thereby degrading system performance considerably. In this paper, we introduce an efficient scheme which keeps synchronization traffic low and avoids serious hot-spot contention. This is made possible by constructing a circular list of the processors waiting for the critical section and by dispersing accesses to the lock. Extensive simulation of the proposed approach was conducted and the lower bound on the elapsed time was derived. Our simulation results demonstrate that the proposed scheme indeed achieves better performance than prior techniques, with its elapsed time close to the lower bound for the whole range of simulated system sizes, thus promising good scalability for large systems."",""1558-2183"","""",""10.1109/71.595581"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595581"","""",""Hardware";Telecommunication traffic;Degradation;System performance;Traffic control;Tree data structures;Multiprocessor interconnection networks;Computer Society;Scalability;"Multiprocessing systems"","""",""10"","""",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"A comment on ""A total ordering multicast protocol using propagation trees"",""Shiuh-Pyng Shieh";" Fu-Shen Ho"",""National Chiao Tung University, Hsinchu, TW";" NA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""10"",""1084"","""",""In this paper, we reevaluate the message cost of X. Jia's multicast mechanism (see ibid., vol. 6, no. 6, p. 617-27 (1995)). Our analysis shows that its message cost should be (D+k+1) instead of (D+2), where D is the depth of the subtree and k is the number of metagroups containing the destination multicast group."",""1558-2183"","""",""10.1109/71.629490"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=629490"","""",""Multicast protocols";Costs;Computer science;Computer security;National security;Operating systems;Distributed computing;Information security;Delay;"Load management"","""",""2"",""1"",""1"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"A framework for exploiting task and data parallelism on distributed memory multicomputers,""S. Ramaswamy"; S. Sapatnekar;" P. Banerjee"",""Transarc Corporation, Pittsburgh, PA, USA"; Department of Electrical Engineering, Minneapolis, MN, USA;" Center for Parallel and Distributed Computing, Northwestern University, Evanston, IL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""11"",""1098"",""1116"",""Distributed Memory Multicomputers (DMMs), such as the IBM SP-2, the Intel Paragon, and the Thinking Machines CM-5, offer significant advantages over shared memory multiprocessors in terms of cost and scalability. Unfortunately, the utilization of all the available computational power in these machines involves a tremendous programming effort on the part of users, which creates a need for sophisticated compiler and run-time support for distributed memory machines. In this paper, we explore a new compiler optimization for regular scientific applications-the simultaneous exploitation of task and data parallelism. Our optimization is implemented as part of the PARADIGM HPF compiler framework we have developed. The intuitive idea behind the optimization is the use of task parallelism to control the degree of data parallelism of individual tasks. The reason this provides increased performance is that data parallelism provides diminishing returns as the number of processors used is increased. By controlling the number of processors used for each data parallel task in an application and by concurrently executing these tasks, we make program execution more efficient and, therefore, faster."",""1558-2183"","""",""10.1109/71.642945"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=642945"","""",""Parallel processing";Data structures;Random access memory;Optimizing compilers;Costs;Scalability;Runtime;Concurrent computing;Distributed computing;"Program processors"","""",""76"",""1"",""48"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"A general method for deflection worm routing on meshes based on packet routing algorithms,""A. Roberts";" A. Symvonis"",""Basser Department of Computer Science, University of Sydney, Sydney, NSW, Australia";" Basser Department of Computer Science, University of Sydney, Sydney, NSW, Australia"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""8"",""781"",""789"",""In this paper, we consider the deflection worm routing problem on n/spl times/n meshes. In deflection routing, a message cannot be queued and it is always moving until it reaches its destination. In worm routing, the message is considered to be a worm, a sequence of k flits which, during the routing, follow the head of the worm, which knows the destination address. We show how to derive a deflection worm routing algorithm from a packet routing algorithm which uses queues of size O(f(N))(N is the side-length of the mesh in which the packet routing algorithm is applied). Our result generalizes the method of Newman and Schuster in which only packet routing algorithms with a maximum queue of four packets can be used."",""1558-2183"","""",""10.1109/71.605765"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=605765"","""",""Routing";Computer worms;Hydrogen;Parallel machines;Communication channels;Concurrent computing;Multiprocessor interconnection networks;Bidirectional control;"Hardware"","""",""1"",""1"",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"A general method for maximizing the error-detecting ability of distributed algorithms,""M. Schollmeyer";" B. McMillin"",""Research Institute for Applied Software Technology, Munich, Germany";" Department of Computer Science, 325 Math-Computer Science, University of Missouri, Rolla, Rolla, MO, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""164"",""172"",""The bound on component failures and their spatial distribution govern the fault tolerance of any candidate error-detecting algorithm. For distributed memory multiprocessors, the specific algorithm and the topology of the processor interconnection network define these bounds. This paper introduces the maximal fault index, derived from the system topology and local communication patterns, to demonstrate how a maximal number of simultaneous component failures can be tolerated for a particular interconnection network and error-detecting algorithm. The index is used to design a mapping of processes to processor groups such that the error-detecting ability of the algorithm is preserved for certain multiple simultaneous processor failures."",""1558-2183"","""",""10.1109/71.577258"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577258"","""",""Distributed algorithms";Fault tolerance;Fault detection;Fault tolerant systems;Network topology;Multiprocessor interconnection networks;Simultaneous localization and mapping;Algorithm design and analysis;Delay;"Safety"","""",""1"","""",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"A geometric approach for constructing coteries and k-coteries,""Yu-Chen Kuo";" Shing-Tsaan Huang"",""The Department of Computer Science, National Tsing Hua University, Hsinchu, Taiwan";" The Department of Computer Science, National Tsing Hua University, Hsinchu, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""4"",""402"",""411"",""Quorum-based mutual exclusion algorithms are resilient to node and communication line failures. Recently, some mutual exclusion algorithms successfully use logical structures to construct coteries with small quorums sizes. In this paper, we introduce a geometric approach on dealing with the logical structures and present some useful geometric properties for constructing coteries and k-coteries. Based on those geometric properties, a logical structure named three-sided graph is proposed to provide a new scheme for constructing coteries with small quorums: The smallest quorum size is O(/spl radic/N) in a homogeneous system with N nodes and O(1) in a heterogeneous system. In addition, we also extend the three-sided graph to the O-sided graph for constructing k-coteries."",""1558-2183"","""",""10.1109/71.588618"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588618"","""",""Fault tolerance";Permission;Cascading style sheets;Senior members;Distributed algorithms;Algorithm design and analysis;Costs;Voting;"Tree graphs"","""",""35"","""",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"A heuristic storage for minimizing access time of arbitrary data patterns,""M. A. Al-Mouhamed";" S. S. Seiden"",""Department of Computer Engineering, King Fahd University of Petroleum and Minerals, Dhahran, Saudi Arabia";" Department of Information and Computer Science, University of California, Irvine, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""4"",""441"",""447"",""The serialization of memory accesses is a major limiting factor in high performance SIMD computers. The data patterns or templates that are accessed by a program can be perceived by the compiler, and, therefore, the design of dynamic storage schemes that minimize conflicts may dramatically improve performance. The problem of finding storage schemes that minimize the access time of arbitrary sets of power-of-two data patterns is proved to be NP-complete. We propose linear address transformations that can be dynamically applied by each processing element for mapping array references onto memories. An efficient approach for combining the constraints of different access patterns into one single linear address transformation is presented. We prove that finding the transformation that minimizes the access time is reducible to N-coloring, where N is the number of parallel memories. Using coloring heuristics, storage schemes are investigated with respect to minimizing the implementation cost (perfect storage) and overall access conflicts (semiperfect storage). Results show that the perfect-storage may deviate on the average by 20% from the optimum access time in the case of 10 arbitrary data patterns and 16 memories. However, semiperfect schemes lead to dramatic reduction of the degree of conflict compared to perfect-schemes. The proposed heuristic storage largely outperforms interleaving and row-column-diagonals storages. The method can be implemented as compiler procedure for synthesizing storage schemes that promote parallel access to arbitrary sets of data patterns."",""1558-2183"","""",""10.1109/71.588625"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588625"","""",""Costs";Interleaved codes;Image storage;High performance computing;Program processors;Bandwidth;Runtime;Degradation;"Petroleum"","""",""4"",""15"",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"A parallel algorithm for constructing a labeled tree,""Yue-Li Wang"; Hon-Chan Chen;" Wei-Kai Liu"",""Department of Information Management, National Taiwan University of Science and Technology, Taipei, Taiwan"; Department of Information Management, National Taiwan University of Science and Technology, Taipei, Taiwan;" Department of Information Management, National Taiwan University of Science and Technology, Taipei, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1236"",""1240"",""A tree T is labeled when the n vertices are distinguished from one another by names such as v/sub 1/, v/sub 2/...v/sub n/. Two labeled trees are considered to be distinct if they have different vertex labels even though they might be isomorphic. According to Cayley's tree formula, there are n/sup n-2/ labeled trees on n vertices. Prufer used a simple way to prove this formula and demonstrated that there exists a mapping between a labeled tree and a number sequence. From his proof, we can find a naive sequential algorithm which transfers a labeled tree to a number sequence and vice versa. However, it is hard to parallelize. In this paper, we shall propose an O(log n) time parallel algorithm for constructing a labeled tree by using O(n) processors and O(n log n) space on the EREW PRAM computational model."",""1558-2183"","""",""10.1109/71.640015"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640015"","""",""Parallel algorithms";Phase change random access memory;Concurrent computing;Computational modeling;Vegetation mapping;Moon;Encoding;Data compression;Algorithm design and analysis;"Tree graphs"","""",""8"","""",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"A parallel algorithm for graph matching and its MasPar implementation,""R. Allen"; L. Cinque; S. Tanimoto; L. Shapiro;" D. Yasuda"",""Hewlett Packard Company, Palo Alto, CA, USA"; Dipartimento di Scienze dell'Informazione, Universita La Sapienza, Rome, Italy; Department of Computer Science and Engineering, University of Washington, Seattle, WA, USA; Department of Computer Science and Engineering, University of Washington, Seattle, WA, USA;" College of Ocean and Fishery Sciences, University of Washington, Seattle, WA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""5"",""490"",""501"",""Search of discrete spaces is important in combinatorial optimization. Such problems arise in artificial intelligence, computer vision, operations research, and other areas. For realistic problems, the search spaces to be processed are usually huge, necessitating long computation times, pruning heuristics, or massively parallel processing. We present an algorithm that reduces the computation time for graph matching by employing both branch-and-bound pruning of the search tree and massively-parallel search of the as-yet-unpruned portions of the space. Most research on parallel search has assumed that a multiple-instruction-stream/multiple-data-stream (MIMD) parallel computer is available. Since massively parallel stream (SIMD) computers are much less expensive than MIMD systems with equal numbers of processors, the question arises as to whether SIMD systems can efficiently handle state-space search problems. We demonstrate that the answer is yes, and in particular, that graph matching has a natural and efficient implementation on SIMD machines."",""1558-2183"","""",""10.1109/71.598276"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598276"","""",""Parallel algorithms";Computer vision;Concurrent computing;Parallel processing;Application software;Image databases;Artificial intelligence;Search problems;Load management;"Operations research"","""",""18"","""",""43"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;
"A prioritized multiprocessor spin lock,""T. Johnson";" K. Harathi"",""AT and T Research Laboratories, Florham Park, NJ, USA";" NA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""9"",""926"",""933"",""In this paper, we present the PR lock, a prioritized spin lock mutual exclusion algorithm. The PR lock is a contention-free spin lock, in which blocked processes spin on locally stored or cached variables. In contrast to previous work on prioritized spin locks, our algorithm maintains a pointer to the lock holder. As a result, our spin lock can support operations on the lock holder (e.g., for abort ceiling protocols). Unlike previous algorithms, all work to maintain a priority queue is done while a process acquires a lock when it is blocked anyway. Releasing a lock is a constant time operation. We present simulation results that demonstrate the prioritized acquisition of locks, and compare the performance of the PR lock against that of the best alternative prioritized spin lock."",""1558-2183"","""",""10.1109/71.615438"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=615438"","""",""Real time systems";Dynamic scheduling;Access protocols;Tail;Parallel processing;Testing;Content addressable storage;Kernel;"Scheduling algorithm"","""",""9"",""5"",""22"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"A scalable multibus configuration for connecting transputer links,""M. Adda"",""American International University in London, Surrey, UK"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""3"",""245"",""253"",""The paper presents the development and the performance of a novel bus based message passing interconnection scheme which can be used to join a large number of INMOS transputers via their serial communication links. The main feature of this architecture is that it avoids the communication overhead which occurs in systems where processing nodes relay communications to their neighbors. It also produces a flexible and scalable machine whose attractive characteristics are its simplicity and low latency for large configurations. We show that this architecture is free from deadlock, exhibits much smaller latency than most directly connected transputer networks and has a scalable bandwidth, in contrast to other bus topologies."",""1558-2183"","""",""10.1109/71.584090"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=584090"","""",""Joining processes";Message passing;Delay;Network topology;Memory architecture;Computer architecture;System recovery;Scalability;Parallel processing;"Image processing"","""",""2"","""",""26"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;
"A shortest path routing algorithm for incomplete WK-recursive networks,""Ming-Yang Su"; Gen-Huey Chen;" Dyi-Rong Duh"",""Department of Computer Science and Information Engineering, National Taiwan University, Taipei, Taiwan"; Department of Computer Science and Information Engineering, National Taiwan University, Taipei, Taiwan;" Department of Computer Science and Information Engineering, National Chi Nan University, Taipei, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""4"",""367"",""379"",""The WK-recursive networks own two structural advantages: expansibility and equal degree. A network is expansible if no changes to node configuration and link connection are necessary when it is expanded, and of equal degree if its nodes have the same degree no matter what the size is. However, the number of nodes contained in a WK-recursive network is restricted to d/sup t/, where d>1 is the size of the basic building block and t/spl ges/1 is the level of expansion. The incomplete WK-recursive networks, which were proposed to relieve this restriction, are allowed to contain an arbitrary number of basic building blocks, while presenting the advantages of the WK-recursive networks. Designing shortest-path routing algorithms for incomplete networks is in general more difficult than for complete networks. The reason is that most incomplete networks lack a unified representation. One of the contributions of this paper is to demonstrate a useful representation, i.e., the multistage graph representation, for the incomplete WK-recursive networks. On the basis of it, a shortest-path routing algorithm is then proposed. With O(d/spl middot/t) time preprocessing, this algorithm takes O(t) time for each intermediate node to determine the next node along the shortest path."",""1558-2183"","""",""10.1109/71.588608"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588608"","""",""Routing";Algorithm design and analysis;Multiprocessor interconnection networks;Costs;Manufacturing;Very large scale integration;Prototypes;Hypercubes;"Degradation"","""",""13"","""",""20"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"A simple Voronoi diagram algorithm for a reconfigurable mesh,""H. ElGindy";" L. Wetherall"",""Department of Computer Science, University of Newcastle, NSW, Australia";" Computer Systems Australia, Lambton, NSW, Australia"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""11"",""1133"",""1142"",""In this paper, we introduce a simple and efficient algorithm for computing the Voronoi Diagram for n planar points on a reconfigurable mesh of size O(n)/spl times/O(n). The algorithm has a worst case running of O(log n log log n) time. The algorithm exploits the O(1) communication diameter of the reconfigurable mesh model to implement efficient load balancing."",""1558-2183"","""",""10.1109/71.642948"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=642948"","""",""Switches";Partitioning algorithms;Load management;Concurrent computing;Computational modeling;Communication system control;Communication switching;Australia;Broadcasting;"Region 5"","""",""3"","""",""35"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"A survey of recoverable distributed shared virtual memory systems,""C. Morin";" I. Puaut"",""INRIA, France";" INSA-IRISA, Rennes, France"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""9"",""959"",""969"",""Distributed Shared Virtual Memory (DSVM) systems provide a shared memory abstraction on distributed memory architectures. Such systems ease parallel application programming because the shared-memory programming model is often more natural than the message-passing paradigm. However, the probability of failure of a DSVM increases with the number of sites. Thus, fault tolerance mechanisms must be implemented in order to allow processes to continue their execution in the event of a failure. This paper gives an overview of recoverable DSVMs (RDSVMs) that provide a checkpointing mechanism to restart parallel computations in the event of a site failure."",""1558-2183"","""",""10.1109/71.615441"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=615441"","""",""Checkpointing";Memory architecture;Fault tolerance;Bit error rate;Parallel programming;Concurrent computing;Hardware;Read-write memory;Programming profession;"Writing"","""",""47"",""6"",""45"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"A theory of fault-tolerant routing in wormhole networks,""J. Duato"",""Facultad de Informática, Universidad Politécnica de Valencia, Valencia, Spain"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""8"",""790"",""802"",""Fault-tolerant systems aim at providing continuous operation in the presence of faults. Multicomputers rely on an interconnection network between processors to support the message-passing mechanism. Therefore, the reliability of the interconnection network is very important for the reliability of the whole system. This paper analyzes the effective redundancy available in a wormhole network by combining connectivity and deadlock freedom. Redundancy is defined at the channel level. We propose a sufficient condition for channel redundancy, also computing the set of redundant channels. The redundancy level of the network is also defined, proposing a theorem that supplies its value. This theory is developed on top of our necessary and sufficient condition for deadlock-free adaptive routing. The new theory also considers the failure of physical channels when virtual channels are used. Finally, we propose a methodology for the design of fault-tolerant routing algorithms, showing its application to n-dimensional meshes."",""1558-2183"","""",""10.1109/71.605766"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=605766"","""",""Fault tolerance";Routing;Intelligent networks;Multiprocessor interconnection networks;Redundancy;Network topology;Fault tolerant systems;Algorithm design and analysis;Hypercubes;"System recovery"","""",""65"",""1"",""46"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;
"A unified architecture for the computation of B-spline curves and surfaces,""M. Gopi";" S. Manohar"",""North Carolina State University, Chapel Hill, NC, USA";" Supercomputer Education and Research Centre, Indian Institute of Science, Bangalore, India"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1275"",""1287"",""B-Splines, in general, and Non-Uniform Rational B-Splines (NURBS), in particular, have become indispensable modeling primitives in computer graphics and geometric modeling applications. In this paper, a novel high-performance architecture for the computation of uniform, nonuniform, rational, and nonrational B-Spline curves and surfaces is presented. This architecture has been derived through a sequence of steps. First, a systolic architecture for the computation of the basis function values, the basis function evaluation array (the BFEA), is developed. Using the BFEA as its core, an architecture for the computation of NURBS curves is constructed. This architecture is then extended to compute NURBS surfaces. Finally, this architecture is augmented to compute the surface normals, so that the output from this architecture can be directly used for rendering the NURBS surface."",""1558-2183"","""",""10.1109/71.640020"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640020"","""",""Computer architecture";Spline;Computer graphics;Surface topography;Surface reconstruction;Workstations;Solid modeling;Pipeline processing;Hardware;"Application software"","""",""18"","""",""26"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Accounting for memory bank contention and delay in high-bandwidth multiprocessors,""G. E. Blelloch"; P. B. Gibbons; Y. Matias;" M. Zagha"",""School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, USA"; Bell Laboratories, Lucent Technologies, Inc., Murray Hill, NJ, USA; Department of Computer Science, Tel-Aviv University, Tel-Aviv, Israel;" Silicon Graphics, Inc., Mountain View, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""9"",""943"",""958"",""For years, the computation rate of processors has been much faster than the access rate of memory banks, and this divergence in speeds has been constantly increasing in recent years. As a result, several shared-memory multiprocessors consist of more memory banks than processors. The object of this paper is to provide a simple model (with only a few parameters) for the design and analysis of irregular parallel algorithms that will give a reasonable characterization of performance on such machines. For this purpose, we extend Valiant's bulk-synchronous parallel (BSP) model with two parameters: a parameter for memory bank delay, the minimum time for servicing requests at a bank, and a parameter for memory bank expansion, the ratio of the number of banks to the number of processors. We call this model the (d, x)BSP. We show experimentally that the (d, x)-BSP captures the impact of bank contention and delay on the CRAY C90 and J90 for irregular access patterns, without modeling machine-specific details of these machines. The model has clarified the performance characteristics of several unstructured algorithms on the CRAY C90 and J90, and allowed us to explore tradeoffs and optimizations for these algorithms. In addition to modeling individual algorithms directly, we also consider the use of the (d, x)-BSP as a bridging model for emulating a very high-level abstract model, the Parallel Random Access Machine (PRAM). We provide matching upper and lower bounds for emulating the EREW and QRQW PRAMs on the (d, X)-BSP."",""1558-2183"","""",""10.1109/71.615440"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=615440"","""",""Algorithm design and analysis";Performance analysis;Parallel algorithms;Phase change random access memory;Parallel machines;Bandwidth;Delay effects;Multiprocessor interconnection networks;Network topology;"Sorting"","""",""16"",""1"",""55"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"Adaptively scheduling parallel loops in distributed shared-memory systems,""Yong Yan"; Canming Jin;" Xiaodong Zhang"",""High Performance Computing and Software Laboratory, University of Texas, San Antonio, San Antonio, TX, USA"; InterVoice, Inc., Dallas, TX, USA;" High Performance Computing and Software Laboratory, University of Texas, San Antonio, San Antonio, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""1"",""70"",""81"",""Using runtime information of load distributions and processor affinity, the authors propose an adaptive scheduling algorithm and its variations from different control mechanisms. The proposed algorithm applies different degrees of aggressiveness to adjust loop scheduling granularities, aiming at improving the execution performance of parallel loops by making scheduling decisions that match the real workload distributions at runtime. They experimentally compared the performance of the algorithm and its variations with several existing scheduling algorithms on two parallel machines: the KSR-1 and the Convex Exemplar. The kernel application programs used for performance evaluation were carefully selected for different classes of parallel loops. The results show that using runtime information to adaptively adjust scheduling granularity is an effective way to handle loops with a wide range of load distributions when no prior knowledge of the execution can be used. The overhead caused by collecting runtime information is insignificant in comparison with the performance improvement. The experiments show that the adaptive algorithm and its five variations outperformed the existing scheduling algorithms."",""1558-2183"","""",""10.1109/71.569656"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=569656"","""",""Scheduling algorithm";Processor scheduling;Runtime;Dynamic scheduling;Heuristic algorithms;Adaptive scheduling;Control systems;Parallel machines;Kernel;"Adaptive algorithm"","""",""39"","""",""11"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Algorithmic mapping of feedforward neural networks onto multiple bus systems,""A. El-Amawy";" P. Kulasinghe"",""Department of Electrical and Computer Engineering, Louisiana State University, Baton Rouge, LA, USA";" Department of Electrical and Computer Engineering, Clarkson University, Potsdam, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""130"",""136"",""This paper addresses the problem of mapping a feedforward ANN onto a multiple bus system, MBS, with p processors and b buses so as to minimize the total execution time. We present an algorithm which assigns the nodes of a given computational layer (c-layer) to processors such that the computation lower bound [N/sup l//p]t/sub p//sup l/ and the communication lower bound [N/sup l//b]t/sub c/ are achieved simultaneously, where N/sup l/ is the number of nodes in the mapped c-layer l and t/sub p//sup l/ and t/sub c/ are the computation and communication times, respectively, associated with a node in the layer. When computation and communication are not overlapped, we show that the optimal number of processors needed is either 1 or p, depending on the ratio t/sub p//sup l//t/sub c/. When computation and communication are overlapped, we show that the optimal number of processors needed is either 1 or ([t/sub p//sup l//t/sub c/])b. We show that there is a unique arrangement of interfaces such that the total number of interfaces is minimum and the optimal time is reached. Finally, we compare the relative merits of the MBS simulating ANNs over the recently introduced checkerboarding scheme."",""1558-2183"","""",""10.1109/71.577255"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577255"","""",""Neural networks";Feedforward neural networks;Artificial neural networks;Computational modeling;Concurrent computing;Broadcasting;Hypercubes;Partitioning algorithms;Computer networks;"Parallel architectures"","""",""7"","""",""15"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Allocating task interaction graphs to processors in heterogeneous networks,""Chi-Chung Hui";" S. T. Chanson"",""Department of Computer Science, Hong Kong University of Science and Technology, Hong Kong, China";" Department of Computer Science, Hong Kong University of Science and Technology, Hong Kong, China"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""9"",""908"",""925"",""The problem of allocating task interaction graphs (TIGs) to heterogeneous computing systems to minimize job completion time is investigated. The only restriction is that the interprocessor communication cost is the same for any pair of processors. This is suitable for local area network based systems, such as Ethernet, as well as fully interconnected multiprocessor systems. An optimal polynomial solution exists if sufficient homogeneous processors and communication capacity are available. This solution is generalized to obtain two faster heuristics, one for the case of homogeneous processors and the other for heterogeneous processors. The heuristics were tested extensively with 60,900 systematically generated random TIGs and shown to be stable independent of the size of the TIG. A performance model is also proposed to predict the performance of the heuristic algorithms, and it is successful in explaining the experimental results qualitatively."",""1558-2183"","""",""10.1109/71.615437"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=615437"","""",""Intelligent networks";Workstations;Local area networks;Predictive models;Computer networks;Costs;Ethernet networks;LAN interconnection;Polynomials;"Heuristic algorithms"","""",""42"","""",""24"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"An effective processor allocation strategy for multiprogrammed shared-memory multiprocessors,""K. K. Yue";" D. J. Lilja"",""Sun MicroSystems, Inc.orporated, Palo Alto, CA, USA";" Department of Electrical and Computer Engineering, University of Minnesota, Minneapolis, MN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1246"",""1258"",""Existing techniques for sharing the processing resources in multiprogrammed shared-memory multiprocessors, such as time-sharing, space-sharing, and gang-scheduling, typically sacrifice the performance of individual parallel applications to improve overall system utilization. We present a new processor allocation technique called Loop-Level Process Control (LLPC) that dynamically adjusts the number of processors an application is allowed to use for the execution of each parallel section of code, based on the current system load. This approach exploits the maximum parallelism possible for each application without overloading the system. We implement our scheme on a Silicon Graphics Challenge multiprocessor system and evaluate its performance using applications from the Perfect Club benchmark suite and synthetic benchmarks. Our approach shows significant improvements over traditional time-sharing and gang-scheduling. It has performance comparable to, or slightly better than, static space-sharing, but our strategy is more robust since, unlike static space-sharing, it does not require a priori knowledge of the applications' parallelism characteristics."",""1558-2183"","""",""10.1109/71.640017"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640017"","""",""Time sharing computer systems";Multiprocessing systems;Process control;Processor scheduling;Operating systems;Parallel processing;Robustness;Resource management;Kelvin;"Silicon"","""",""8"",""19"",""24"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"An efficient task allocation scheme for 2D mesh architectures,""Seong-Moo Yoo"; Hee Yong Youn;" B. Shirazi"",""Department of Computer Science, Columbus State University, Columbus, GA, USA"; Department of Computer Science and Engineering, University of Texas, Arlington, Arlington, TX, USA;" Department of Computer Science and Engineering, University of Texas, Arlington, Arlington, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""9"",""934"",""942"",""Efficient allocation of processors to incoming tasks in parallel computer systems is very important for achieving the desired high performance. It requires recognizing the free available processors with minimum overhead. In this paper, we present an efficient task allocation scheme for 2D mesh architectures. By employing a new approach for searching the mesh, our scheme can find the available submesh without scanning the entire mesh, unlike earlier designs. Comprehensive computer simulation reveals that the average allocation time and waiting delay are much smaller than earlier schemes of comparable performances, irrespective of the size of meshes and distribution of the shape of the incoming tasks."",""1558-2183"","""",""10.1109/71.615439"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=615439"","""",""Computer architecture";Computer simulation;Processor scheduling;Concurrent computing;Delay effects;Shape;Computer Society;High performance computing;Topology;"Distributed computing"","""",""44"",""2"",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"An empirical evaluation of performance-memory trade-offs in time warp,""S. R. Das";" R. M. Fujimoto"",""Division of Computer Science, University of Texas, San Antonio, San Antonio, TX, USA";" College of Computing, Georgia Institute of Technology, Atlanta, GA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""210"",""224"",""The performance of the Time Warp mechanism is experimentally evaluated when only a limited amount of memory is available to the parallel computation. An implementation of the cancelback protocol is used for memory management on a shared memory architecture, viz., KSR to evaluate the performance vs. memory tradeoff. The implementation of the cancelback protocol supports canceling back more than one memory object when memory has been exhausted (the precise number is referred to as the salvage parameter) and incorporates a non-work-conserving processor scheduling technique to prevent starvation. Several synthetic and benchmark programs are used that provide interesting stress cases for evaluating the limited memory behavior. The experiments are extensively monitored to determine the extent to which various factors may affect performance. Several observations are made by analyzing the behavior of Time Warp under limited memory: (1) Depending on the available memory and asymmetry in the workload, canceling back several memory objects at one time (i.e. a salvage parameter value of more than one) improves performance significantly, by reducing certain overheads. However, performance is relatively insensitive to the salvage parameter except at extreme values. (2) The speedup vs. memory curve for Time Warp programs has a well-defined knee before which speedup increases very rapidly with memory and beyond which there is little performance gain with increased memory. (3) A performance nearly equivalent to that with large amounts of memory can be achieved with only a modest amount of additional memory beyond that required for sequential execution, if memory management overheads are small compared to the event granularity. These results indicate that contrary to the common belief, memory usage by Time Warp can be controlled within reasonable limits without any significant loss of performance."",""1558-2183"","""",""10.1109/71.577269"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577269"","""",""Performance evaluation";Memory management;Protocols;Concurrent computing;Memory architecture;Processor scheduling;Stress;Monitoring;Performance analysis;"Knee"","""",""17"","""",""32"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"An example of deriving performance properties from a visual representation of program execution,""M. Abrams"",""Department of Computer Science, Virginia Polytechnic Institute and State University, Blacksburg, VA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""658"",""666"",""Through geometry, program visualization can yield performance properties. We derive all possible synchronization sequences and durations of blocking and concurrent execution for two process programs from a visualization mapping processes, synchronization, and program execution to Cartesian graph axes, line segments, and paths, respectively. Relationships to Petri nets are drawn."",""1558-2183"","""",""10.1109/71.595584"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595584"","""",""Visualization";Petri nets;Computational geometry;Rendering (computer graphics);Reachability analysis;History;Particle measurements;Time measurement;Computer displays;"Safety"","""",""2"","""",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;
"An extended dominating node approach to broadcast and global combine in multiport wormhole-routed mesh networks,""Yih-Jia Tsai";" P. K. McKinley"",""Department of Computer Science, Michigan State University, East Lansing, MI, USA";" Department of Computer Science, Michigan State University, East Lansing, MI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""1"",""41"",""58"",""A new approach to the design of collective communication operations in wormhole-routed mesh networks is described. The approach extends the concept of dominating sets in graph theory by accounting for the relative distance-insensitivity of the wormhole switching strategy and by taking advantage of a multiport communication architecture, which allows each node to simultaneously transmit messages on different outgoing channels. Collective communication operations are defined in terms of sets of extended dominating nodes (EDNs). The nodes in a set of EDNs can deliver (receive) messages to (from) a different, larger set of nodes in a single message-passing step under dimension-ordered wormhole routing and without channel contention among messages. The EDN model can be applied to different collective operations in 2D and 3D mesh networks. The authors focus on EDN-based broadcast and global combine operations. Performance evaluation results are presented that confirm the advantage of this approach over other methods."",""1558-2183"","""",""10.1109/71.569654"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=569654"","""",""Broadcasting";Routing;Mesh networks;Network topology;Communication switching;Computer networks;Concurrent computing;Bandwidth;Delay;"Intelligent networks"","""",""18"","""",""36"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"An optimal algorithm for global termination detection in shared-memory asynchronous multiprocessor systems,""Ho-Fung Leung";" Hing-Fung Ting"",""The Department of Computer Science and Engineering, Chinese University of Hong Kong, Sha Tin, Hong Kong, China";" The Department of Computer Science, University of Hong Kong, Pokfulam, Hong Kong, China"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""5"",""538"",""543"",""In the literature, the problem of global termination detection in parallel systems is usually solved by message passing. In shared-memory systems, this problem can also be solved by using exclusively accessible variables with locking mechanisms. In this paper, we present an algorithm that solves the problem of global termination detection in shared-memory asynchronous multiprocessor systems without using locking. We assume a reasonable computation model in which concurrent reading does not require locking and concurrent writing different values without locking results in an arbitrary one of the values being actually written. For a system of n processors, the algorithm allocates a working space of 2n+1 bits. The worst case time complexity of the algorithm is n+2/spl radic/+1, which we prove is the lower bound under a reasonable model of computation."",""1558-2183"","""",""10.1109/71.598280"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598280"","""",""Multiprocessing systems";Computational modeling;Message passing;Concurrent computing;Writing;"Virtual reality"","""",""5"","""",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;;
"An optimal algorithm for the angle-restricted all nearest neighbor problem on the reconfigurable mesh, with applications,""K. Nakano";" S. Olariu"",""Department of Electrical and Computer Engineering, Nagoya Institute of Technology, Nagoya, Japan";" Department of Computer Science, Old Dominion University, Norfolk, VA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""9"",""983"",""990"",""Given a set S of n points in the plane and two directions r/sub 1/ and r/sub 2/, the Angle-Restricted All Nearest Neighbor problem (ARANN, for short) asks to compute, for every point p in S, the nearest point in S lying in the planar region bounded by two rays in the directions r/sub 1/ and r/sub 2/ emanating from p. The ARANN problem generalizes the well-known ANN problem and finds applications to pattern recognition, image processing, and computational morphology. Our main contribution is to present an algorithm that solves an instance of size n of the ARANN problem in O(1) time on a reconfigurable mesh of size n/spl times/n. Our algorithm is optimal in the sense that /spl Omega/(n/sup 2/) processors are necessary to solve the ARANN problem in O(1) time. By using our ARANN algorithm, we can provide O(1) time solutions to the tasks of constructing the Geographic Neighborhood Graph and the Relative Neighborhood Graph of n points in the plane on a reconfigurable mesh of size n/spl times/n. We also show that, on a somewhat stronger reconfigurable mesh of size n/spl times/n/sup 2/, the Euclidean Minimum Spanning Tree of n points can be computed in O(1) time."",""1558-2183"","""",""10.1109/71.615443"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=615443"","""",""Nearest neighbor searches";Pattern recognition;Image processing;Computer architecture;Morphology;Tree graphs;Mobile computing;Automata;Control systems;"Power system modeling"","""",""9"","""",""25"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"An optimal multiplication algorithm on reconfigurable mesh,""Ju-Wook Jang"; Heonchul Park;" V. K. Prasanna"",""Department of Electrical Engineering, Sogang University, Seoul, South Korea"; Samsung Electronics Company Limited, Seoul, South Korea;" Department of EE-Systems, EEB 200C, University of Southern California, Los Angeles, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""5"",""521"",""532"",""An O(1) time algorithm to multiply two K-bit binary numbers using an N/spl times/N bit-model of reconfigurable mesh is shown. It uses optimal mesh size and it improves previously known results for multiplication on the reconfigurable mesh. The result is obtained by using novel techniques for data representation and data movement and using multidimensional Rader Transform. The algorithm is extended to result in AT/sup 2/ optimality over 1/spl les/t/spl les//spl radic/N in a variant of the bit-model of VLSI."",""1558-2183"","""",""10.1109/71.598278"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598278"","""",""Very large scale integration";Image processing;Message passing;Digital signal processing chips;Routing;Arithmetic;Multidimensional systems;Computer networks;"Concurrent computing"","""",""7"","""",""35"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Analysis and randomized design of algorithm-based fault tolerant multiprocessor systems under an extended model,""S. Yajnik";" N. K. Jha"",""Lucent Technologies Bell Laboratories, Murray Hill, NJ, USA";" Department of Electrical Engineering, Princeton University, Princeton, NJ, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""7"",""757"",""768"",""Reliability of compute-intensive applications can be improved by introducing fault tolerance into the system. Algorithm based fault tolerance (ABFT) is a low-cost scheme which provides the required fault tolerance to the system through system level encoding. In this paper, we propose randomized construction techniques, under an extended model, for the design of ABFT systems with the required fault tolerance capability. The model considers failures in the processors performing the checking operations."",""1558-2183"","""",""10.1109/71.598349"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598349"","""",""Algorithm design and analysis";Fault tolerant systems;Multiprocessing systems;Fault detection;Fault diagnosis;Computer applications;Encoding;Fault location;Design methodology;"Degradation"","""",""3"","""",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Analysis of quorum-based protocols for distributed (k+1)-exclusion,""D. Agrawal"; O. Egecioglu;" A. Abbadi"",""Department of Computer Science, University of California, Santa Barbara, CA, USA"; Department of Computer Science, University of California, Santa Barbara, CA, USA;" NA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""5"",""533"",""537"",""A generalization of the majority quorum for the solution of the distributed (k+1)-exclusion problem is proposed. This scheme produces a family of quorums of varying sizes and availabilities indexed by integral divisors r of k. The cases r=1 and r=k correspond to known majority based quorum generation algorithms MAJ and DIV, whereas intermediate values of r interpolate between these two extremes. A cost and availability analysis of the proposed methods is also presented. An interesting implication of this analysis is that in a reasonably reliable environment with a large number of sites, even protocols with low communication costs attain high availability."",""1558-2183"","""",""10.1109/71.598279"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598279"","""",""Protocols";Availability;Computer Society;Costs;Fault tolerance;Broadcasting;Transaction databases;Partitioning algorithms;"Fault tolerant systems"","""",""11"",""1"",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Backbone networks using rotation counters,""Jian Song";" O. Yang"",""Department of Electrical and Computer Engineering, University of Ottawa, Ottawa, ONT, Canada";" Department of Electrical and Computer Engineering, University of Ottawa, Ottawa, ONT, Canada"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1288"",""1298"",""We use simulations to evaluate the performance of an RCP ring network for network interconnection. The RCP (Rotation Counter Protocol) is a token ring protocol that has in its token a special field for counting down of the number of packets transmitted in one cycle. By correlating the queuing performance of each station through the counter, the delay of the high-priority data can be made almost independent and the delay jitters made small, Thus, RCP can be utilized in real-time control environment or integrated services environment. The performance of the backbone networks is investigated, using voice and data integration";" the performance measures are mean voice delay, delay jitters, and mean data delay. Various buffering schemes for voice packets are compared. The effect of asymmetric data load is examined, and RCP is found to be capable of minimizing the loading effect of one station to the other."",""1558-2183"","""",""10.1109/71.640021"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640021"","""",""Spine";Counting circuits;Delay;Token networks;Jitter;Media Access Protocol;Access protocols;Quality of service;Intserv networks;"FDDI"","""","""","""",""27"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Bandwidth-optimal complete exchange on wormhole-routed 2D/3D torus networks: a diagonal-propagation approach,""Yu-Chee Tseng"; Ting-Hsien Lin; S. K. S. Gupta;" D. K. Panda"",""Department of Computer Science and Information Engineering, National Central University, Chungli, Taiwan"; Department of Computer and Information, Ohio State Uinversity, Columbus, OH, USA; The Computer Science Department, Colorado State University, Fort Collins, CO, USA;" Department of Computer and Information, Ohio State Uinversity, Columbus, OH, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""4"",""380"",""396"",""All-to-all personalized communication, or complete exchange, is at the heart of numerous applications in parallel computing. Several complete exchange algorithms have been proposed in the literature for wormhole meshes. However, these algorithms, when applied to tori, cannot take advantage of wrap-around interconnections to implement complete exchange with reduced latency. In this paper, a new diagonal-propagation approach is proposed to develop a set of complete exchange algorithms for 2D and 3D tori. This approach exploits the symmetric interconnections of tori and allows to develop a communication schedule consisting of several contention-free phases. These algorithms are indirect in nature and they use message combining to reduce the number of phases (message start-ups). It is shown that these algorithms effectively use the bisection bandwidth of a torus which is twice that for an equal sized mesh, to achieve complete exchange in time which is almost half of the best known complete exchange time on an equal sized mesh. The effectiveness of these algorithms is verified through simulation studies for varying system and technological parameters. It is also demonstrated that synchronous implementations of these algorithms (by introducing barriers between phases) lead to reduced latency for complete exchange with large messages, while the asynchronous ones are better for smaller messages."",""1558-2183"","""",""10.1109/71.588613"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588613"","""",""Parallel processing";Heart;Delay;Computer science;Computer Society;Application software;Bandwidth;Routing;"Multiprocessor interconnection networks"","""",""32"",""3"",""22"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Circuit switching with input queuing: an analysis for the d-dimensional wraparound mesh and the hypercube,""V. Sharma";" E. A. Varvarigos"",""Department of Electrical and Computer Engineering, University of California, Santa Barbara, CA, USA";" Department of Electrical and Computer Engineering, University of California, Santa Barbara, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""4"",""349"",""366"",""We analyze circuit switching in a multiprocessor network, where connection requests (or sessions) arrive at each node of the network according to a Poisson process with rate /spl lambda/. Each session joins the appropriate input-queue at its source node, and, upon advancing to the head of the queue, transmits a setup packet to establish a connection. If the setup packet is successful, it reserves the links on the path for the duration of the session, and the session is served without interruptions. Otherwise, the connection request remains queued at the source, and subsequent attempts are made to establish the circuit. We analyze the queue of connection requests at the input-buffer of a network link, and obtain analytic expressions for the stability region, the average queuing delay, the average connection time, the average waiting time, and the average total delay, which show how these parameters depend on system variables, such as network dimension and session arrival rate. The queuing analysis focuses on the input-queue of a particular link, and accounts for the interactions with queues of other links through the retrial attempts and the associated probability of success. The queuing analysis is independent of the particular network topology under consideration, as long as the probability that a session arriving at a random time successfully establishes a connection can be calculated for that network. Simulations demonstrate the close agreement between the observed network behavior and that predicted by the analysis."",""1558-2183"","""",""10.1109/71.588603"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588603"","""",""Switching circuits";Queueing analysis;Circuit analysis;Delay effects;Circuit stability;Stability analysis;Network topology;Probability;Analytical models;"Predictive models"","""",""21"","""",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Comments on ""A new family of Cayley graph interconnection networks of constant degree four"",""Guihai Chen";" F. C. M. Lau"",""Department of Computer Science, University of Hong Kong, Hong Kong, China";" Department of Computer Science, University of Hong Kong, Hong Kong, China"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1299"",""1300"",""For original paper see Vadapalli and Srimani, ibid., vol. 7, no. 1, p 26-32, 1996, where the authors have proposed a new family of Cayley graph interconnection networks of constant degree four. Our comments show that their proposed graph is not new but is the same as the wrap-around butterfly graph. The structural kinship of the proposed graph with the de Bruijn graph is also discussed."",""1558-2183"","""",""10.1109/71.640022"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640022"","""",""Multiprocessor interconnection networks";FAA;"Zinc"","""",""14"","""",""2"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;;;;;
"Compressionless routing: a framework for adaptive and fault-tolerant routing,""J. H. Kim"; Ziqiang Liu;" A. A. Chien"",""Department of Computer Science, University of Illinois, Urbana-Champaign, Urbana-Champaign, IL, USA"; Department of Computer Science, University of Illinois, Urbana-Champaign, Urbana-Champaign, IL, USA;" Department of Computer Science, University of Illinois, Urbana-Champaign, Urbana-Champaign, IL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""3"",""229"",""244"",""Compressionless routing (CR) is an adaptive routing framework which provides a unified framework for efficient deadlock free adaptive routing and fault tolerance. CR exploits the tight coupling between wormhole routers for flow control to detect and recover from potential deadlock situations. Fault tolerant compressionless routing (FCR) extends CR to support end to end fault tolerant delivery. Detailed routing algorithms, implementation complexity, and performance simulation results for CR and FCR are presented. These results show that the hardware for CR and FCR networks is modest. Further, CR and FCR networks can achieve superior performance to alternatives such as dimension order routing. Compressionless routing has several key advantages: deadlock free adaptive routing in toroidal networks with no virtual channels, simple router designs, order preserving message transmission, applicability to a wide variety of network topologies, and elimination of the need for buffer allocation messages. Fault tolerant compressionless routing has several additional advantages: data integrity in the presence of transient faults (nonstop fault tolerance), permanent fault tolerance, and elimination of the need for software buffering and retry for reliability. The advantages of CR and FCR not only simplify hardware support for adaptive routing and fault tolerance, they also can simplify software communication layers."",""1558-2183"","""",""10.1109/71.584089"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=584089"","""",""Routing";Fault tolerance;System recovery;Chromium;Hardware;Network topology;Adaptive systems;Application software;Network interfaces;"Telecommunication network reliability"","""",""70"",""1"",""36"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Connective fault tolerance in multiple bus systems,""Hung-Kuei Ku";" J. P. Hayes"",""AT and T Bell Laboratories, Inc., Middletown, NJ, USA";" Advanced Computer Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""574"",""586"",""We present an efficient approach to characterizing the fault tolerance of multiprocessor systems that employ multiple shared buses for interprocessor communication. Of concern is connective fault tolerance, which is defined as the ability to maintain communication between any two fault-free processors in the presence of faulty processors, buses, or processor-bus links. We introduce a model called processor-bus-link (PBL) graphs to represent a multiple-bus system's interconnection structure. The model is more general than previously proposed models, and has the advantages of simple representation, broad application, and the ability to model partial bus failures. The PBL graph implies a set of component adjacency graphs that highlights various connectivity features of the system. Using these graphs, we propose a method for analyzing the maximum number of faults a multiple-bus system can tolerate, and for identifying every minimum set of faulty components that disconnects the processors of the system. We also analyze the connective fault tolerance of several proposed multiple-bus systems to illustrate the application of our method."",""1558-2183"","""",""10.1109/71.595574"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595574"","""",""Fault tolerant systems";Fault diagnosis;Multiprocessing systems;Fault tolerance;Hardware;Costs;Bandwidth;Degradation;Sun;"Computer architecture"","""",""6"","""",""24"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Constant time algorithms for computational geometry on the reconfigurable mesh,""Jin-Wook Jang"; M. Nigam; V. K. Prasanna;" S. Sahni"",""Department of Electronic Engineering, Sogang University, Seoul, South Korea"; Department of Computer and Information Science and Engineering, CSE 301, University of Florida, Gainesville, FL, USA; Department of EE-Systems, EEB-244, University of Southern California, Los Angeles, CA, USA;" Department of Computer and Information Science and Engineering, CSE 301, University of Florida, Gainesville, FL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""1"",""1"",""12"",""The reconfigurable mesh consists of an array of processors interconnected by a reconfigurable bus system. The bus system can be used to dynamically obtain various interconnection patterns among the processors. Recently, this model has attracted a lot of attention. The authors show O(1) time solutions to the following computational geometry problems on the reconfigurable mesh: all-pairs nearest neighbors, convex hull, triangulation, two-dimensional maxima, two-set dominance counting, and smallest enclosing box. All these solutions accept N planar points as input and employ an N/spl times/N reconfigurable mesh. The basic scheme employed in the implementations is to recursively find an O(1) time solution. The number of recursion levels and the size of the subproblems at each level of recursion are optimized such that the problem decomposition and the solution to the problem can be obtained in constant time. As a result, they have developed some efficient merge techniques to combine the solutions for subproblems on the reconfigurable mesh. These techniques exploit reconfigurability in nontrivial ways leading to constant time solutions using optimal size of the mesh."",""1558-2183"","""",""10.1109/71.569648"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=569648"","""",""Computational geometry";Nearest neighbor searches;Computer networks;Concurrent computing;Solid modeling;Shape;Broadcasting;Automata;"National electric code"","""",""30"","""",""50"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Deadline assignment in a distributed soft real-time system,""B. Kao";" H. Garcia-Molina"",""Department of Computer Science, University of Hong Kong, Hong Kong, China";" Department of Computer Science, University of Stanford, Stanford, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1268"",""1274"",""In a distributed environment, tasks often have processing demands at multiple different sites. A distributed task is usually divided into several subtasks, each to be executed in order at some site. In a real-time system, an overall deadline is usually specified by an application designer indicating when a distributed task is to be finished. In this paper, we present and analyze techniques for automatically translating the overall deadline into deadlines for the individual subtasks."",""1558-2183"","""",""10.1109/71.640019"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640019"","""",""Real time systems";Databases;Scheduling algorithm;Processor scheduling;Communication networks;Stock markets;Information filtering;Information filters;Refining;"Expert systems"","""",""101"",""2"",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Delay-optimal quorum consensus for distributed systems,""Ada Waichee Fu"",""Department of Computer Science and Engineering, Chinese University of Hong Kong, Sha Tin, Hong Kong, China"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""1"",""59"",""69"",""Given a set of nodes S, a coterie is a set of pairwise intersecting subsets of S. Each element in a coterie is called a quorum. Mutual exclusion in a distributed system can be achieved if each request is required to gel consensus from a quorum of nodes. This technique of quorum consensus is also used for replicated distributed database systems, and bicoteries and wr-coteries have been defined to capture the requirements of read and write operations in user transactions. The author is interested in finding coteries, bicoteries, and wr-coteries with optimal communication delay. The protocols take into account the network topology. They design delay-optimal quorum consensus protocols for network topologies of trees, rings, and clustered networks."",""1558-2183"","""",""10.1109/71.569655"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=569655"","""",""Protocols";Database systems;Network topology;Costs;Delay effects;Delay systems;Concurrency control;Artificial satellites;"Clocks"","""",""27"",""1"",""26"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;
"Designing a scalable processor array for recurrent computations,""K. N. Ganapathy"; B. W. Wah;" Chien-Wei Li"",""Telecommunications Division, Rockwell International, Newport Beach, CA, USA"; Coordinated Science Laboratory, University of Illinois, Urbana-Champaign, IL, USA;" Coordinated Science Laboratory, University of Illinois, Urbana-Champaign, IL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""8"",""840"",""856"",""In this paper, we study the design of a coprocessor (CoP) to execute efficiently recursive algorithms with uniform dependencies. Our design is based on two objectives: 1) fixed bandwidth to main memory (MM) and 2) scalability to higher performance without increasing MM bandwidth. Our CoP has an access unit (AU) organized as multiple queues, a processor array (PA) with regularly connected processing elements (PEs), and input/output networks for data routing. Our design is unique because it addresses input/output bottleneck and scalability, two of the most important issues in integrating processor arrays in current systems. To allow processor arrays to be widely usable, they must be scalable to high performance with little or no impact on the supporting memory system. The use of multiple queues in AU also eliminates the use of explicit data addresses, thereby simplifying the design of the control program. We present a mapping algorithm that partitions a data dependence graph (DG) of an application into regular blocks, sequences the blocks through AU, and schedules the execution of the blocks, one at a time, on PA. We show that our mapping procedure minimizes the amount of communication between blocks in the partitioned DG, and sequences the blocks through AU to reduce the communication between AU and MM. Using the matrix-product and transitive-closure applications, we study design trade-offs involving 1) division of a fixed chip area between PA and AU, and 2) improvements in speedup with respect to increases in chip area. Our results show, for a fixed chip area, 1) that there is little degradation in throughput in using a linear PA as compared to a PA organized as a square mesh, and 2) that the design is not sensitive to the division of chip area between PA and AU. We further show that, for a fixed throughput, there is an inverse square root relationship between speedup and total chip area. Our study demonstrates the feasibility of a low-cost, memory bandwidth-limited, and scalable coprocessor system for evaluating recurrent algorithms with uniform dependencies."",""1558-2183"","""",""10.1109/71.605770"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=605770"","""",""Process design";Gold;Algorithm design and analysis;Coprocessors;Bandwidth;Scalability;Throughput;Routing;Communication system control;"Partitioning algorithms"","""",""1"",""1"",""32"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Detecting corrupted pages in M replicated large files,""F. K. Hwang";" Wenan Zang"",""Dept. of Appl. Math., Nat. Chiao Tung Univ., Hsinchu, Taiwan";" NA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1241"",""1245"",""A file in a distributed database system is replicated on M sites and may contain corrupted pages. Abdel-Ghafiar and El Abbadi gave a detection scheme assuming that the number of corrupted pages f<M/2. We replace this assumption by a much weaker one, that, for each page, the majority of copies are correct. Our schemes are based on the structure of the Reed-Solomon code, as proposed by Abdel-Ghaffar and El Abbadi for M=2."",""1558-2183"","""",""10.1109/71.640016"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640016"","""",""Fault detection";Reed-Solomon codes;Database systems;Block codes;Error correction;"Galois fields"","""",""3"","""",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;;
"Deterministic many-to-many hot potato routing,""A. Borodin"; Y. Rabani;" B. Schieber"",""Department of Computer Science, University of Toronto, Toronto, Canada"; Computer Science Department, Technion-Israel Institute of Technology, Haifa, Israel;" IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""587"",""596"",""We consider algorithms for many-to-many hot potato routing. In hot potato (deflection) routing, a packet cannot be buffered, and is therefore always moving until it reaches its destination. We give optimal and nearly optimal deterministic algorithms for many-to-many packet routing in commonly occurring networks such as the hypercube, meshes, and tori of various dimensions and sizes, trees, and hypercubic networks such as the butterfly. All these algorithms are analyzed using a charging scheme that may be applicable to other algorithms as well. Moreover, all bounds hold in a dynamic setting in which packets can be injected at arbitrary times."",""1558-2183"","""",""10.1109/71.595575"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595575"","""",""Routing";Algorithm design and analysis;Hypercubes;Packet switching;Optical packet switching;Communication switching;Hardware;Parallel machines;Communication networks;"Optical fiber networks"","""",""18"","""",""22"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Edge congestion of shortest path systems for all-to-all communication,""C. M. Fiduccia";" P. J. Hedrick"",""Center for Computing Sciences, Bowie, MD, USA";" Bowie, MD, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""10"",""1043"",""1054"",""The problem of choosing a static shortest-path system that minimizes maximum edge congestion in a network is studied. Bounds based on parameters, such as diameter, bisection width, and average distance, are derived and conditions for producing uniform congestion on all edges are explored. Trees are shown to have maximum congestion on edges that are incident to a centroid node. Cartesian product graphs, which generalize multidimensional meshes, are shown to satisfy several closure properties and a generic factor-routing scheme is defined and shown to be optimal in many cases."",""1558-2183"","""",""10.1109/71.629487"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=629487"","""",""Routing";Tree graphs;Hypercubes;Concurrent computing;Multidimensional systems;Concrete;Telecommunication traffic;Traffic control;Upper bound;"Multiprocessor interconnection networks"","""",""12"","""",""13"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Efficient algorithms for all-to-all communications in multiport message-passing systems,""J. Bruck"; Ching-Tien Ho; S. Kipnis; E. Upfal;" D. Weathersby"",""California Institute of Technology, Pasadena, CA, USA"; IBM Almaden Research Center, San Jose, CA, USA; News Datacom Research Limited, Haifa, Israel; IBM Almaden Research Center, San Jose, CA, USA;" Department of Computer Science and Engineering, University of Washington, Seattle, WA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""11"",""1143"",""1156"",""We present efficient algorithms for two all-to-all communication operations in message-passing systems: index (or all-to-all personalized communication) and concatenation (or all-to-all broadcast). We assume a model of a fully connected message-passing system, in which the performance of any point-to-point communication is independent of the sender-receiver pair. We also assume that each processor has k/spl ges/1 ports, through which it can send and receive k messages in every communication round. The complexity measures we use are independent of the particular system topology and are based on the communication start-up time, and on the communication bandwidth."",""1558-2183"","""",""10.1109/71.642949"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=642949"","""",""Broadcasting";Application software;Time measurement;Algorithm design and analysis;Concurrent computing;Particle measurements;Topology;Bandwidth;Scattering;"Parallel programming"","""",""183"",""15"",""31"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;
"Efficient algorithms for data distribution on distributed memory parallel computers,""PeiZong Lee"",""Institute of Information Science, Taipei, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""8"",""825"",""839"",""Data distribution has been one of the most important research topics in parallelizing compilers for distributed memory parallel computers. Good data distribution schema should consider both the computation load balance and the communication overhead. In this paper, we show that data redistribution is necessary for executing a sequence of Do-loops if the communication cost due to performing this sequence of Do-loops is larger than a threshold value. Based on this observation, we can prune the searching space and derive efficient dynamic programming algorithms for determining effective data distribution schema to execute a sequence of Do-loops with a general structure. Experimental studies on a 32-node nCUBE-2 computer are also presented."",""1558-2183"","""",""10.1109/71.605769"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=605769"","""",""Concurrent computing";Distributed computing;Aerodynamics;Dynamic programming;Heuristic algorithms;Flexible printed circuits;Costs;Program processors;Algorithm design and analysis;"Topology"","""",""21"","""",""42"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;
"Efficient algorithms for the reduce-scatter operation in LogGP,""G. Iannello"",""Dipartimento di Informatica e Sistemistica, Università di Napoli Federico II, Napoli, Italy"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""9"",""970"",""982"",""We consider the problem of efficiently performing a reduce-scatter operation in a message passing system. Reduce-scatter is the composition of an element-wise reduction on vectors of n elements initially held by n processors, with a scatter of the resulting vector among the processors. In this paper, we present two algorithms for the reduce-scatter operation, designed in LogGP. The first algorithm assumes an associative and commutative reduction operator and it is optimal in LogGP within a small constant factor. The second algorithm allows the reduction operator to be noncommutative, and it is asymptotically optimal when values to be combined are large arrays. To achieve these results, we developed a complete analysis of both algorithms in LogGP, including the derivation of lower bounds for the reduce-scatter operation, and the study of the m-item version of the problem, i.e., the case when the initial elements are vectors themselves. Reduce-scatter has been included as a collective operation in the MPI standard message passing library, and can be used, for instance, in parallel matrix-vector multiply when the matrix is decomposed by columns. To model a message passing system, we adopted the LogGP model, an extension of LogP that allows the modeling of messages of different length. While this choice makes the analysis somewhat more complex, it leads to more realistic results in the case of gather/scatter algorithms."",""1558-2183"","""",""10.1109/71.615442"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=615442"","""",""Scattering";Algorithm design and analysis;Message passing;Parallel algorithms;Libraries;Matrix decomposition;Computer Society;Telephony;"Performance analysis"","""",""14"","""",""10"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;
"Efficient distributed selection with bounded messages,""A. Negro"; N. Santoro;" J. Urrutia"",""Dipartimento di Scienze dell'Informazione, Università di Salerno, Salerno, Italy"; Center for Parallel and Distributed Computing, School of Computer Science, Carleton University, Ottawa, Canada;" Department of Computer Science, University of Ottawa, Ottawa, Canada"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""4"",""397"",""401"",""We consider the problem of selecting the Kth smallest element of a set distributed among the sites of a communication network when the size of messages is bounded"; that is, each message is a packet which contains at most c bits, where c/spl ges/1 is a constant. A general selection algorithm using packets is presented and its packet complexity is analyzed. Its complexity is shown to be a significant improvement for a large range of packet sizes over the existing bounds. The proposed technique is then instanciated for specific classes of network topologies;" the resulting bounds either match or improve the ones of existing solutions for a large range of values of the packet size. Furthermore, it is bit optimal in star networks."",""1558-2183"","""",""10.1109/71.588617"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588617"","""",""Algorithm design and analysis";Communication networks;Network topology;Complexity theory;Distributed algorithms;Computer science;Computer Society;Delay effects;Sorting;"Distributed computing"","""",""10"","""",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"Efficient routing and sorting schemes for de Bruijn networks,""D. F. Hsu";" D. S. L. Wei"",""Department of Computer and Information Science, Fordham University, Bronx, NY, USA";" Department of Computer and Information Science, Fordham University, Bronx, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""11"",""1157"",""1170"",""We consider the problems of routing and sorting on a de Bruijn network. First, we show that any deterministic oblivious routing scheme for permutation routing on a d-ary de Bruijn network with N=d/sup n/ nodes, in the worst case, will take /spl Omega/(/spl radic/N) steps under the single-port model. This improves the existing lower bounds provided d is not a constant. We also show that the lower bound is indeed a tight one. Second, we present a deterministic nonoblivious permutation routing algorithm which runs in O(d.n/sup 2/) time on a d-ary de Bruijn network with N=d/sup n/ nodes. This algorithm is currently the fastest known nonoblivious deterministic routing algorithm for de Bruijn networks of arbitrary degree. Finally, we present an efficient general sorting algorithm for the de Bruijn networks of arbitrary degree. This algorithm is the best sorting algorithm known so far. It runs in O((log d).d.n/sup 2/) time for directed de Bruijn network with d/sup n/ nodes, degree d, and diameter n. As a corollary, we show that on a binary de Bruijn network of Nnodes, our sorting scheme requires at most 2 log/sup 2/ Nsteps."",""1558-2183"","""",""10.1109/71.642950"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=642950"","""",""Routing";Sorting;Message passing;Computer Society;Distributed computing;Multiprocessor interconnection networks;Distributed processing;"Upper bound"","""",""10"","""",""26"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;
"Embedding hierarchical hypercube networks into the hypercube,""M. Hamdi";" S. W. Song"",""Department of Computer Science of Science and Technology, Hong Kong University, Kowloon, Hong Kong, China";" Department of Computer Science, University of Sao Paulo-IME, Sao Paulo, Brazil"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""9"",""897"",""902"",""The embedding of one interconnection network into another is a very important issue in the design and analysis of parallel algorithms. Through such embeddings, the algorithms originally developed for one architecture can be directly mapped to another architecture. This paper describes a new embedding method, based on matrix transformations, for optimally embedding hierarchical hypercube networks (HHNs) into the hypercube (binary n-cube). Thus, this embedding method has practical importance in enhancing the capabilities and extending the usefulness of the hypercube, since hierarchical hypercube networks have proven to be very cost-effective for a wide range of applications."",""1558-2183"","""",""10.1109/71.615435"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=615435"","""",""Hypercubes";Multiprocessor interconnection networks;Algorithm design and analysis;Parallel algorithms;Parallel architectures;Computer architecture;Concurrent computing;Embedded computing;Data structures;"Multidimensional systems"","""",""8"","""",""16"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Embedding of generalized Fibonacci cubes in hypercubes with faulty nodes,""Feng-Shr Jiang"; Shi-Jinn Horng;" Tzong-Wann Kao"",""Inst. of Technol., Nat. Taiwan Inst. of Technol., Taipei, Taiwan"; NA;" NA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""7"",""727"",""737"",""The generalized Fibonacci cubes (abbreviated to GFCs) were recently proposed as a class of interconnection topologies, which cover a spectrum ranging from regular graphs such as the hypercube to semiregular graphs such as the second order Fibonacci cube. It has been shown that the kth order GFC of dimension n+k is equivalent to an n-cube for 0/spl les/n<k"; and it is a proper subgraph of an n-cube for n/spl ges/k. Thus, a kth order GFC of dimension n+k can be obtained from the n-cube for all n/spl ges/k by removing certain nodes from an n-cube. This problem is very simple when no faulty node exists in an k-cube;" but it becomes very complex if some faulty nodes appear in an n-cube. In this paper, we first consider the following open problem: How can a maximal (in terms of the number of nodes) generalized Fibonacci cube be distinguished from a faulty hypercube which can also be considered as a fault-tolerant embedding in hypercubes. Then, we shall show how to directly embed a GFC into a faulty hypercube and prove that if no more than three faulty nodes exist, then an [n/2]th order GFC of dimension n+[n/2] can be directly embedded into an n-cube in the worst case, for n=4 or n/spl ges/6."",""1558-2183"","""",""10.1109/71.598347"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598347"","""",""Hypercubes";Fault tolerance;Sorting;Data communication;Robustness;Binary trees;Network topology;Degradation;"Terminology"","""",""7"","""",""15"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Extended Fibonacci Cubes,""Jie Wu"",""Department of Computer Science and Engineering, Florida Atlantic University, Boca Raton, FL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1203"",""1210"",""The Fibonacci Cube is an interconnection network that possesses many desirable properties that are important in network design and application. The Fibonacci Cube can efficiently emulate many hypercube algorithms and uses fewer links than the comparable hypercube, while its size does not increase as fast as the hypercube. However, most Fibonacci Cubes (more than 2/3 of all) are not Hamiltonian. In this paper, we propose an Extended Fibonacci Cube (EFC/sub 1/) with an even number of nodes. It is defined based on the same sequence F(i)=F(i-1)+F(i-2) as the regular Fibonacci sequence";" however, its initial conditions are different. We show that the Extended Fibonacci Cube includes the Fibonacci Cube as a subgraph and maintains its sparsity property. In addition, it is Hamiltonian and is better in emulating other topologies. Specifically, the Extended Fibonacci Cube can embed binary trees more efficiently than the regular Fibonacci Cube and is almost as efficient as the hypercube, even though the Extended Fibonacci Cube is a much sparser network than the hypercube. We also propose a series of Extended Fibonacci Cubes with even number of nodes. Any Extended Fibonacci Cube (EFC/sub k/, with k/spl ges/) in the series contains the node set of any other cube that precedes EFC/sub k/ in the series. We show that any Extended Fibonacci Cube maintains virtually all the desirable properties of the Fibonacci Cube. The EFC/sub k/s can be considered as flexible versions of incomplete hypercubes, which eliminates their restriction on the number of nodes, and, thus, makes it possible to construct parallel machines with arbitrary sizes."",""1558-2183"","""",""10.1109/71.640012"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640012"","""",""Hypercubes";Parallel machines;Multiprocessor interconnection networks;Network topology;Binary trees;Prototypes;"Degradation"","""",""25"","""",""15"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;;
"Fault diameter of k-ary n-cube networks,""K. Day";" A. E. Al-Ayyoub"",""Department of Computer Science, Sultan Qaboos University, Oman";" NA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""9"",""903"",""907"",""We obtain the fault diameter of k-ary n-cube interconnection networks (also known as n-dimensional k-torus networks). We start by constructing a complete set of node-disjoint paths (i.e., as many paths as the degree) between any two nodes of a k-ary n-cube. Each of the obtained paths is of length zero, two, or four plus the minimum length except for one path in a special case (when the Hamming distance between the two nodes is one) where the increase over the minimum length may attain eight. These results improve those obtained by B. Bose et al. (1995) where the length of some of the paths has a variable increase (which can be arbitrarily large) over the minimum length. These results are then used to derive the fault diameter of the k-ary n-cube, which is shown to be /spl Delta/+1 where /spl Delta/ is the fault free diameter."",""1558-2183"","""",""10.1109/71.615436"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=615436"","""",""Hypercubes";Multiprocessor interconnection networks;Network topology;Fault tolerance;Hamming distance;Multiprocessing systems;Scalability;Routing;"Resilience"","""",""112"","""",""13"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;
"Fault-tolerance through scheduling of aperiodic tasks in hard real-time multiprocessor systems,""S. Ghosh"; R. Melhem;" D. Mosse"",""Honeywell Technology Center, Minneapolis, MN, USA"; Department of Computer Science, University of Pittsburgh, Pittsburgh, PA, USA;" Department of Computer Science, University of Pittsburgh, Pittsburgh, PA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""3"",""272"",""284"",""Real time systems are being increasingly used in several applications which are time critical in nature. Fault tolerance is an important requirement of such systems, due to the catastrophic consequences of not tolerating faults. We study a scheme that provides fault tolerance through scheduling in real time multiprocessor systems. We schedule multiple copies of dynamic, aperiodic, nonpreemptive tasks in the system, and use two techniques that we call deallocation and overloading to achieve high acceptance ratio (percentage of arriving tasks scheduled by the system). The paper compares the performance of our scheme with that of other fault tolerant scheduling schemes, and determines how much each of deallocation and overloading affects the acceptance ratio of tasks. The paper also provides a technique that can help real time system designers determine the number of processors required to provide fault tolerance in dynamic systems. Lastly, a formal model is developed for the analysis of systems with uniform tasks."",""1558-2183"","""",""10.1109/71.584093"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=584093"","""",""Fault tolerant systems";Real time systems;Multiprocessing systems;Processor scheduling;Dynamic scheduling;Computer Society;Fault tolerance;Vehicle dynamics;Redundancy;"Timing"","""",""142"",""2"",""37"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Fault-tolerant ring embedding in a star graph with both link and node failures,""Yu-Chee Tseng"; Shu-Hui Chang;" Jang-Ping Sheu"",""Department of Computer Science and Information Engineering, National Central University, Chungli, Taiwan"; Department of Computer Science and Information Engineering, National Central University, Chungli, Taiwan;" Department of Computer Science and Information Engineering, National Central University, Chungli, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1185"",""1195"",""The star graph interconnection network has been recognized as an attractive alternative to the hypercube network. Previously, the star graph has been shown to contain a Hamiltonian cycle. In this paper, we consider an injured star graph with some faulty links and nodes. We show that even with f/sub e//spl les/n-3 faulty links, a Hamiltonian cycle still can be found in an n-star, and that with f/sub v//spl les/n-3 faulty nodes, a ring containing at most 4f/sub v/ nodes less than that in a Hamiltonian cycle can be found (i.e. the ring contains at least n!-4f/sub v/ nodes). In general, in an n-star with f/sub e/ faulty links and f/sub v/ faulty nodes, where f/sub e/+f/sub v//spl les/n-3, our embedding is able to establish a ring containing at least n!-4f/sub v/ nodes."",""1558-2183"","""",""10.1109/71.640010"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640010"","""",""Fault tolerance";Hypercubes;Multiprocessor interconnection networks;Computer Society;Parallel architectures;Intelligent networks;Network topology;Tree graphs;Hardware;"Parallel algorithms"","""",""101"",""1"",""29"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Finding consistent global checkpoints in a distributed computation,""D. Manivannan"; R. H. B. Netzer;" M. Singhal"",""Department of Computer and Information Science, Ohio State Uinversity, Columbus, OH, USA"; Department of Computer Science, Brown University, Providence, RI, USA;" Department of Computer and Information Science, Ohio State Uinversity, Columbus, OH, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""623"",""627"",""Consistent global checkpoints have many uses in distributed computations. A central question in applications that use consistent global checkpoints is to determine whether a consistent global checkpoint that includes a given set of local checkpoints can exist. Netzer and Xu (1995) presented the necessary and sufficient conditions under which such a consistent global checkpoint can exist, but they did not explore what checkpoints could be constructed. In this paper, we prove exactly which local checkpoints can be used for constructing such consistent global checkpoints. We illustrate the use of our results with a simple and elegant algorithm to enumerate all such consistent global checkpoints."",""1558-2183"","""",""10.1109/71.595580"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595580"","""",""Distributed computing";Protocols;Sufficient conditions;Checkpointing;Fault tolerant systems;Debugging;Condition monitoring;System recovery;Buildings;"Information science"","""",""41"","""",""20"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Fusion of loops for parallelism and locality,""N. Manjikian";" T. S. Abdelrahman"",""Department of Electrical and Computer Engineering, University of Toronto, Toronto, ONT, Canada";" Department of Electrical and Computer Engineering, University of Toronto, Toronto, ONT, Canada"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""193"",""209"",""Loop fusion improves data locality and reduces synchronization in data-parallel applications. However, loop fusion is not always legal. Even when legal, fusion may introduce loop-carried dependences which prevent parallelism. In addition, performance losses result from cache conflicts in fused loops. In this paper, we present new techniques to: (1) allow fusion of loop nests in the presence of fusion-preventing dependences, (2) maintain parallelism and allow the parallel execution of fused loops with minimal synchronization, and (3) eliminate cache conflicts in fused loops. We describe algorithms for implementing these techniques in compilers. The techniques are evaluated on a 56-processor KSR2 multiprocessor and on a 18-processor Convex SPP-1000 multiprocessor. The results demonstrate performance improvements for both kernels and complete applications. The results also indicate that careful evaluation of the profitability of fusion is necessary as more processors are used."",""1558-2183"","""",""10.1109/71.577265"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577265"","""",""Parallel processing";Law;Legal factors;Computer Society;Application software;Performance loss;Kernel;Profitability;Production systems;"Scalability"","""",""54"",""6"",""33"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Generalized algorithm for parallel sorting on product networks,""A. Fernandez";" K. Efe"",""Dipartimento de Arquitectura y Tecnogia de Computadores, Escuela Universitaria de Informatica, Madrid, Spain";" Center for Advanced Computer Studies, University of Southwestern Louisiana, Lafayette, LA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1211"",""1225"",""We generalize the well-known odd-even merge sorting algorithm, originally due to Batcher (1968), and show how this generalized algorithm can be applied to sorting on product networks. If G is an arbitrary factor graph with N nodes, its r-dimensional product contains N/sup r/ nodes. Our algorithm sorts N/sup r/ keys stored in the r-dimensional product of G in O(r/sup r/F(N)) time, where F(N) depends on G. We show that, for any factor graph G, F(N) is, at most, O(N), establishing an upper bound of O(r/sup 2/ N) for the time complexity of sorting N/sup r/ keys on any product network. For product networks with bounded r(e.g. for grids), this leads to the asymptotic complexity of O(N) to sort N/sup r/ keys, which is optimal for several instances of product networks. There are factor graphs for which F(N)=O(log/sup 2/ N), which leads to the asymptotic running time of O(log/sup 2/ N) to sort N/sup r/ keys. For networks with bounded N (e.g. in the hypercube N=2, fixed), the asymptotic complexity becomes O(r/sup 2/). We show how to apply the algorithm to several cases of well-known product networks, as well as others introduced recently. We compare the performance of our algorithm to well-known algorithms developed specifically for these networks, as well as others. The result of these comparisons led us to conjecture that the proposed algorithm is probably the best deterministic algorithm that can be found in terms of the low asymptotic complexity with a small constant."",""1558-2183"","""",""10.1109/71.640013"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640013"","""",""Sorting";Hypercubes;Computer architecture;Upper bound;Multiprocessor interconnection networks;Parallel algorithms;Tree graphs;Binary trees;Routing;"Very large scale integration"","""",""8"","""",""34"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Generating an efficient broadcast sequence using reflected Gray codes,""J. A. Moore";" M. J. Quinn"",""U.S. Air Force Academy Department of Computer Science, USAFA, CO, USA";" Department of Computer Science, Oregon State University, Corvallis, OR, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""11"",""1117"",""1122"",""One-to-all broadcast is frequently implemented on multicomputers using a binomial tree communication pattern. The source processor, at the root of the broadcast tree, completes the broadcast before the processors at the leaves of the tree. This imbalance can degrade performance when a data-parallel algorithm requires a series of broadcasts from different source processors. In this paper, we show that using a reflected Gray code to order broadcasts minimizes the communication time."",""1558-2183"","""",""10.1109/71.642946"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=642946"","""",""Broadcasting";Reflective binary codes;Hypercubes;Parallel processing;Tree graphs;Computer Society;Programming profession;Computer architecture;Bandwidth;"Computer science"","""",""4"","""",""14"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Graceful degradation in algorithm-based fault tolerant multiprocessor systems,""S. Yajnik";" N. K. Jha"",""Lucent Technologies Bell Laboratories, Murray Hill, NJ, USA";" Department of Electrical Engineering, Princeton University, Princeton, NJ, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""137"",""153"",""Algorithm-based fault tolerance (ABFT) is a technique which improves the reliability of a multiprocessor system by providing concurrent error detection and fault location capability to it. It encodes data at the system level and modifies the algorithm to operate on the encoded data in order to expose both transient and permanent faults in any processor. Work done till now in this area takes care of only the fault detection and location part of the problem. However, if spare processors are not available, then after a faulty processor has been located, the work initially assigned to it has to be mapped to some nonfaulty processors in the system in such a way that the fault tolerance capability of the system is still maintained with as small a degradation in performance as possible. In this paper, we propose an integrated deterministic solution to the above problem which combines concurrent error detection and fault location with graceful degradation. There exists no previous deterministic ABFT method for the design of general t-fault locating systems, even for the case of t=1. We propose a general method for designing one-fault locating/s-fault detecting systems. We use an extended model for representing ABFT systems. This model considers the processors computing the checks to be a part of the ABFT system, so that faults in the check computing processors can also be detected and located using a simple diagnosis algorithm, and the checks can be mapped to other nonfaulty processors in the system."",""1558-2183"","""",""10.1109/71.577256"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577256"","""",""Degradation";Fault tolerant systems;Multiprocessing systems;Fault detection;Signal processing algorithms;Design methodology;Fault location;Fault diagnosis;Fault tolerance;"Concurrent computing"","""",""12"","""",""19"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Heuristic algorithms for scheduling iterative task computations on distributed memory machines,""Tao Yang";" Cong Fu"",""Department of Computer Science, University of California, Santa Barbara, CA, USA";" Department of Computer Science, University of California, Santa Barbara, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""608"",""622"",""Many partitioned scientific programs can be modeled as iterative executions of computational tasks and represented by iterative task graphs (ITGs). An ITG may or may not have dependence cycles. In this paper, we consider the symbolic scheduling of ITGs on distributed memory architectures with nonzero communication overhead and propose heuristic algorithms for scheduling both cyclic and acyclic ITGs without searching an entire iteration space. Our approach incorporates techniques of software pipelining, graph unfolding, directed acyclic graph (DAG) scheduling, and load balancing. We analyze the asymptotic optimality of the algorithms to show that the derived schedules are competitive to optimal solutions. We also study the sensitivity of scheduling performance on inaccurate weights. Finally, we present experimental results to demonstrate the effectiveness of the optimization techniques."",""1558-2183"","""",""10.1109/71.595579"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595579"","""",""Heuristic algorithms";Iterative algorithms;Scheduling algorithm;Processor scheduling;Distributed computing;Parallel processing;Algorithm design and analysis;Concurrent computing;Pipeline processing;"Partitioning algorithms"","""",""23"","""",""28"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Heuristics for scheduling I/O operations,""R. Jain"; K. Somalwar; J. Werth;" J. C. Browne"",""Applied Research, Bellcore, Red Bank, NJ, USA"; Digital Equipment Corporation, USA; University of Texas, Austin, Austin, TX, USA;" University of Texas, Austin, Austin, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""3"",""310"",""320"",""The I/O bottleneck in parallel computer systems has recently begun receiving increasing interest. Most attention has focused on improving the performance of I/O devices using fairly low level parallelism in techniques such as disk striping and interleaving. Widely applicable solutions, however, will require an integrated approach which addresses the problem at multiple system levels, including applications, systems software, and architecture. We propose that within the context of such an integrated approach, scheduling parallel I/O operations will become increasingly attractive and can potentially provide substantial performance benefits. We describe a simple I/O scheduling problem and present approximate algorithms for its solution. The costs of using these algorithms in terms of execution time, and the benefits in terms of reduced time to complete a batch of I/O operations, are compared with the situations in which no scheduling is used, and in which an optimal scheduling algorithm is used. The comparison is performed both theoretically and experimentally. We have found that, in exchange for a small execution time overhead, the approximate scheduling algorithms can provide substantial improvements in I/O completion times."",""1558-2183"","""",""10.1109/71.584096"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=584096"","""",""Optimal scheduling";Scheduling algorithm;Processor scheduling;Concurrent computing;Parallel processing;Interleaved codes;Application software;System software;Computer architecture;"Cost function"","""",""35"","""",""39"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"High-throughput, low-memory applications on the Pica architecture,""D. S. Wills"; H. H. Cat; J. Cruz-Rivera; W. S. Lacy; J. M. Baker; J. C. Eble; A. Lopez-Lagunas;" M. Hopper"",""School of Electrical and Computer Engineering, Georgia Institute of Technology, Atlanta, GA, USA"; School of Electrical and Computer Engineering, Georgia Institute of Technology, Atlanta, GA, USA; School of Electrical and Computer Engineering, Georgia Institute of Technology, Atlanta, GA, USA; School of Electrical and Computer Engineering, Georgia Institute of Technology, Atlanta, GA, USA; School of Electrical and Computer Engineering, Georgia Institute of Technology, Atlanta, GA, USA; School of Electrical and Computer Engineering, Georgia Institute of Technology, Atlanta, GA, USA; School of Electrical and Computer Engineering, Georgia Institute of Technology, Atlanta, GA, USA;" School of Electrical and Computer Engineering, Georgia Institute of Technology, Atlanta, GA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""10"",""1055"",""1067"",""This paper describes Pica, a fine-grain, message-passing architecture designed to efficiently support high-throughput, low-memory parallel applications, such as image processing, object recognition, and data compression. By specializing the processor and reducing local memory (4,096 36-bit words), multiple nodes can be implemented on a single chip. This allows high-performance systems for high-throughput applications to be realized at lower cost. The architecture minimizes overhead for basic parallel operations. An operand-addressed context cache and round-robin task manager support fast task swapping. Fixed-sized activation contexts simplify storage management. Word-tag synchronization bits provide low-cost synchronization. Several applications have been developed for this architecture, including thermal relaxation, matrix multiplication, JPEG image compression, and Positron Emission Tomography image reconstruction. These applications have been executed using an instrumented instruction-level simulator. The results of these experiments and an evaluation of Pica's architectural features are presented."",""1558-2183"","""",""10.1109/71.629488"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=629488"","""",""Costs";Image processing;Data compression;Microprocessors;Application software;Object recognition;Image reconstruction;Computer architecture;Concurrent computing;"High performance computing"","""",""8"","""",""26"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals"""
"Highly scalable parallel algorithms for sparse matrix factorization,""A. Gupta"; G. Karypis;" V. Kumar"",""IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA"; Department of Computer Science, University of Minnesota, Minneapolis, MN, USA;" Department of Computer Science, University of Minnesota, Minneapolis, MN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""5"",""502"",""520"",""In this paper, we describe scalable parallel algorithms for symmetric sparse matrix factorization, analyze their performance and scalability, and present experimental results for up to 1,024 processors on a Gray T3D parallel computer. Through our analysis and experimental results, we demonstrate that our algorithms substantially improve the state of the art in parallel direct solution of sparse linear systems-both in terms of scalability and overall performance. It is a well known fact that dense matrix factorization scales well and can be implemented efficiently on parallel computers. In this paper, we present the first algorithms to factor a wide class of sparse matrices (including those arising from two- and three-dimensional finite element problems) that are asymptotically as scalable as dense matrix factorization algorithms on a variety of parallel architectures. Our algorithms incur less communication overhead and are more scalable than any previously known parallel formulation of sparse matrix factorization. Although, in this paper, we discuss Cholesky factorization of symmetric positive definite matrices, the algorithms can be adapted for solving sparse linear least squares problems and for Gaussian elimination of diagonally dominant matrices that are almost symmetric in structure. An implementation of one of our sparse Cholesky factorization algorithms delivers up to 20 GFlops on a Gray T3D for medium-size structural engineering and linear programming problems. To the best of our knowledge, this is the highest performance ever obtained for sparse Cholesky factorization on any supercomputer."",""1558-2183"","""",""10.1109/71.598277"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598277"","""",""Parallel algorithms";Sparse matrices;Symmetric matrices;Performance analysis;Algorithm design and analysis;Scalability;Concurrent computing;Finite element methods;Parallel architectures;"Least squares methods"","""",""117"",""1"",""63"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Honeycomb networks: Topological properties and communication algorithms,""I. Stojmenovic"",""Computer Science Department, University of Ottawa, Ottawa, ONT, Canada"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""10"",""1036"",""1042"",""The honeycomb mesh, based on hexagonal plane tessellation, is considered as a multiprocessor interconnection network. A honeycomb mesh network with n nodes has degree 3 and diameter /spl ap/1.63/spl radic/n-1, which is 25 percent smaller degree and 18.5 percent smaller diameter than the mesh-connected computer with approximately the same number of nodes. Vertex and edge symmetric honeycomb torus network is obtained by adding wraparound edges to the honeycomb mesh. The network cost, defined as the product of degree and diameter, is better for honeycomb networks than for the two other families based on square (mesh-connected computers and tori) and triangular (hexagonal meshes and tori) tessellations. A convenient addressing scheme for nodes is introduced which provides simple computation of shortest paths and the diameter. Simple and optimal (in the number of required communication steps) routing, broadcasting, and semigroup computation algorithms are developed. The average distance in honeycomb torus with n nodes is proved to be approximately 0.54/spl radic/n. In addition to honeycomb meshes bounded by a regular hexagon, we consider also honeycomb networks with rhombus and rectangle as the bounding polygons."",""1558-2183"","""",""10.1109/71.629486"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=629486"","""",""Computer networks";Computer architecture;Costs;Routing;Broadcasting;Multiprocessor interconnection networks;Network topology;Mesh networks;Research and development;"Parallel processing"","""",""212"",""1"",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;
"Isotach networks,""P. F. Reynolds"; C. Williams;" R. R. Wagner"",""Department of Computer Science, University of Virginia, Charlottesville, VA, USA"; Department of Computer Science, University of Virginia, Charlottesville, VA, USA;" The Vermont Software Company, Inc., Wells River, VT, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""4"",""337"",""348"",""We introduce a class of networks called Isotach networks designed to reduce the cost of synchronization in parallel computations. Isotach networks maintain an invariant that allows each process to control the logical times at which its messages are received and consequently executed. This control allows processes to pipeline operations without sacrificing sequential consistency and to send isochrons, groups of operations that appear to be received and executed as an indivisible unit. Isochrons allow processes to execute atomic actions without locks. Other uses of Isotach networks include ensuring causal message delivery and consistency among replicated data. Isotach networks are characterized by this invariant, not by their topology. They can be implemented in a wide variety of configurations, including NUMA (nonuniform memory access) multiprocessors. Empirical and analytic studies of Isotach synchronization techniques show that they outperform conventional techniques, in some cases by an order of magnitude or more. Results presented here assume fault-free systems";" we are exploring extension to selected failure models."",""1558-2183"","""",""10.1109/71.588601"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588601"","""",""Distributed computing";Computer networks;Concurrent computing;Process control;Network topology;Computational modeling;Computer Society;Costs;Pipelines;"Concurrency control"","""",""15"",""5"",""49"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;
"Knapsack on VLSI: From algorithm to optimal circuit,""R. Andonov";" S. Rajopadhye"",""Institute de Sciences et Technologie de Valenciennes, Université de Valenciennes, Valenciennes, France";" IRISA, Rennes, France"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""545"",""561"",""We present a parallel solution to the unbounded knapsack problem on a linear systolic array. It achieves optimal speedup for this well-known, NP-hard problem on a model of computation that is weaker than the PRAM. Our array is correct by construction, as it is formally derived by transforming a recurrence equation specifying the algorithm. This recurrence has dynamic dependencies, a property that puts it beyond the scope of previous methods for automatic systolic synthesis. Our derivation thus serves as a case study. We generalize the technique and propose a systematic method for deriving systolic arrays by nonlinear transformations of recurrences. We give sufficient conditions that the transformations must satisfy, thus extending systolic synthesis methods. We address a number of pragmatic considerations: implementing the array on only a fixed number of PEs, simplifying the control to just two counters and a few latches, and loading the coefficients so that successive problems can be pipelined without any loss of throughput. Using a register level model of VLSI, we formulate a nonlinear optimization problem to minimize the expected running time of the array. The analytical solution of this problem allows us to choose the memory size of each PE in an optimal manner."",""1558-2183"","""",""10.1109/71.595572"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595572"","""",""Very large scale integration";Circuits;Systolic arrays;NP-hard problem;Computational modeling;Phase change random access memory;Difference equations;Nonlinear equations;Sufficient conditions;"Control system synthesis"","""",""7"","""",""33"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Linear recursive networks and their applications in distributed systems,""Wen-Jing Hsu"; Moon Jung Chung;" A. Das"",""The Division of Software Systems, School of Applied Science, Nanyang Technological University, Singapore"; The Department of Computer Science, Michigan State University, East Lansing, MI, USA;" The Division of Software Systems, School of Applied Science, Nanyang Technological University, Singapore"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""7"",""673"",""680"",""We present a new class of interconnection topologies called the Linear Recursive Networks (LRNs) and examine their possible applications in distributed systems. Each LRN is characterized by a recursive pattern of interconnection which can be specified by simple parameters. Basic properties such as node degree, diameter, and the performance of routing algorithms for all LRNs are then collectively analyzed in terms of these parameters. By choosing appropriate values for the parameters, our results can assist a network designer in selecting a topology with required routing performance and cost of interconnection. A subclass of LRNs, called Congruent LRNs (CLRNs), is also identified here and shown to possess desirable properties for more tightly coupled systems. It is shown that the CLRNs include existing networks such as hypercube and generalized Fibonacci cubes. These results suggest that the linear recursive networks potentially have applications in interconnecting distributed systems."",""1558-2183"","""",""10.1109/71.598343"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598343"","""",""Intelligent networks";Network topology;Routing;Costs;Hypercubes;Algorithm design and analysis;Performance analysis;Boundary conditions;Moon;"Concurrent computing"","""",""13"","""",""14"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Matrix decomposition on the star graph,""A. . -E. Al-Ayyoub";" K. Day"",""Computer Science Department, Sultan Qaboos University, Oman";" Computer Science Department, Sultan Qaboos University, Oman"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""8"",""803"",""812"",""We present and evaluate, for the first time, a parallel algorithm for solving the LU decomposition problem on the star graph. The proposed parallel algorithm is of O(N/sup 3//n!) computation complexity and uses O(Nn) communication time to decompose a matrix of order N on a star graph of dimension n, where N/spl ges/(n-1)!. The incurred communication time is better than the best known results for the hypercube, O(Nlogn!), and the mesh, O(N/spl radic/n!), each with approximately n! nodes. The proposed parallel algorithm takes advantage of the attractive topological qualities of the star graph in order to reduce the communication time involved in tasks such as pivoting, row/column interchanges, and pivot row and multipliers column broadcasts."",""1558-2183"","""",""10.1109/71.605767"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=605767"","""",""Matrix decomposition";Matrices;Parallel algorithms;Hypercubes;Broadcasting;Algorithm design and analysis;Scalability;Concurrent computing;Fault tolerance;"Fourier transforms"","""",""15"","""",""34"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Minimizing the application execution time through scheduling of subtasks and communication traffic in a heterogeneous computing system,""Min Tan"; H. J. Siegel; J. K. Antonio;" Y. A. Li"",""Parallel Processing Laboratory, School of Electrical and Computer Engineering, Purdue University, West Lafayette, IN, USA"; Parallel Processing Laboratory, School of Electrical and Computer Engineering, Purdue University, West Lafayette, IN, USA; Department of Computer Science, Texas Tech University, Lubbock, TX, USA;" Intel Corporation, Santa Clara, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""8"",""857"",""871"",""In a heterogeneous computing (HC) environment consisting of different types of machines, an application program is decomposed into subtasks, each of which is computationally homogeneous. The goal is to execute subtasks on the machines in such a way that the total program execution time is minimized. A mathematical framework is presented that models the matching of subtasks to machines, scheduling of subtasks' computation, scheduling of intermachine communication steps, and selection of sources of shared data items for intermachine communication (data relocation). The goal of this work is to generate a provably optimal scheme for communicating shared data among subtasks as an enhancement to any given matching and scheduling. Initially, it is assumed that at any instant in time, only one machine is being used for program execution and only one subtask is being executed. Based on this assumption, a polynomial algorithm is introduced to optimize scheduling and data relocation with respect to any given matching of subtasks to machines. The data relocation scheme is then extended to reduce intermachine data communication time in an HC environment with a given matching and scheduling of subtasks' computation where: multiple subtasks' computations can be performed concurrently on different machines"; subtask computation steps can be overlapped with other subtasks' communication steps for intermachine data transfers;" and machines in the HC suite are interconnected by a shared-bus type of network."",""1558-2183"","""",""10.1109/71.605771"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=605771"","""",""Processor scheduling";Computer networks;Concurrent computing;Time sharing computer systems;Distributed computing;Application software;Flow graphs;Mathematical model;Polynomials;"Scheduling algorithm"","""",""39"","""",""24"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;
"Multiple-edge-fault tolerance with respect to hypercubes,""Ting-Yi Sung"; Men-Yang Lin;" Tung-Yang Ho"",""Institute of Information Science, Academia Sinica, Taipei, Taiwan"; Department of Information Management, National Taichung Institute of Commerce, Taichung, Taiwan;" Institute of Information Science, Academia Sinica, Taipei, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""187"",""192"",""Previous works on edge-fault tolerance with respect to hypercubes Q/sub n/ are mainly focused on 1-edge fault and 2- or 3-edge fault with limited size of n. We give a construction scheme for 2-EFT(Q/sub n/) graphs and 3-EFT(Q/sub n/) graphs, where n is arbitrarily large. In our constructions, approximately log n extra degree is added to the vertices of Q/sub n/ for 2-edge-fault tolerance, and one more degree for 3-edge-fault tolerance."",""1558-2183"","""",""10.1109/71.577263"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577263"","""",""Hypercubes";Multiprocessor interconnection networks;Linear algebra;Vectors;Terminology;Network topology;Error correction codes;"Redundancy"","""",""10"","""",""7"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Nearly optimal one-to-many parallel routing in star networks,""Chi-Chang Chen";" Jianer Chen"",""Department of Computer Science and Engineering, Tatung Institute of Technology, Taipei, Taiwan";" Department of Computer Science, Texas A and M University, College Station, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1196"",""1202"",""Star networks were proposed recently as an attractive alternative to the well-known hypercube models for interconnection networks. Extensive research has been performed that shows that star networks are as versatile as hypercubes. This paper is an effort in the same direction. Based on the well-known paradigms, we study the one-to-many parallel routing problem on star networks and develop an improved routing algorithm that finds n-1 node-disjoint paths between one node and a set of other n-1 nodes in the n-star network. These parallel paths are proven of minimum length within a small additive constant, and the running time of our algorithm is bounded by O(n/sup 2/). More specifically, given a node s and n-1 other nodes {t/sub 1/, t/sub 2/, ..., t/sub n-1/} in the n-star network, our algorithm constructs n-1 node-disjoint paths P/sub 1/, P/sub 2/, ..., P/sub n-1/, where P/sub i/ is a path from s to t/sub j/ of length at most dist(s, t/sub j/)+6 and dist(s, t/sub j/) is the distance, i.e., the length of a shortest path, from s to t/sub j/, for i=1, 2, ..., n-1.The best bound on the path length by previously known algorithms for the same problem is 5(n-2)/spl ap/10/spl Delta//sub n//3, where /spl Delta//sub n/=max{dist(s, t)} is the diameter of the n-star network."",""1558-2183"","""",""10.1109/71.640011"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640011"","""",""Routing";Intelligent networks;Hypercubes;Multiprocessor interconnection networks;Partitioning algorithms;Fault tolerance;Computer networks;"Algorithm design and analysis"","""",""43"","""",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;
"Noncontiguous processor allocation algorithms for mesh-connected multicomputers,""V. Lo"; K. J. Windisch; Wanqian Liu;" B. Nitzberg"",""Department of Computer and Information Science, University of Oregon, Eugene, OR, USA"; Department of Computer and Information Science, University of Oregon, Eugene, OR, USA; Silicon Graphics, Inc., Mountain View, CA, USA;" MRJ Technology Solutions, NASA Ames Research Center, Moffett Field, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""7"",""712"",""726"",""Current processor allocation techniques for highly parallel systems are typically restricted to contiguous allocation strategies for which performance suffers significantly due to the inherent problem of fragmentation. As a result, message-passing systems have yet to achieve the high utilization levels exhibited by traditional vector supercomputers. We are investigating processor allocation algorithms which lift the restriction on contiguity of processors in order to address the problem of fragmentation. Three noncontiguous processor allocation strategies-paging allocation, random allocation, and the Multiple Buddy Strategy (MBS)-are proposed and studied in this paper. Simulations compare the performance of the noncontiguous strategies with that of several well-known contiguous algorithms. We show that noncontiguous allocation algorithms perform better overall than the contiguous ones, even when message-passing contention is considered. We also present the results of experiments on an Intel Paragon XP/S-15 with 208 nodes that show noncontiguous allocation is feasible with current technologies."",""1558-2183"","""",""10.1109/71.598346"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598346"","""",""Supercomputers";Processor scheduling;Computer applications;Throughput;Parallel machines;Hypercubes;Runtime;Fault tolerance;Information science;"Silicon"","""",""103"",""1"",""31"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"Nondominated coteries on graphs,""T. Harada";" M. Yamashita"",""The Information Processing Center, Hiroshima University, Higashi, Hiroshima, Japan";" The Department of Electrical Engineering, Hiroshima University, Higashi, Hiroshima, Japan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""667"",""672"",""Let C and D be two distinct coteries under the vertex set V of a graph G=(V,E) that models a distributed system. Coterie C is said to G-dominate D (with respect to G) if the following condition holds: For any connected subgraph H of G that contains a quorum in D (as a subset of its vertex set), there exists a connected subgraph H' of H that contains a quorum in C. A coterie C on a graph G is said to be G-nondominated (G-ND) (with respect to G) if no coterie D(/spl ne/C) on G G-dominates C. Intuitively, a G-ND coterie consists of irreducible quorums. This paper characterizes G-ND coteries in graph theoretical terms, and presents a procedure for deciding whether or not a given coterie C is G-ND with respect to a given graph G, based on this characterization. We then improve the time complexity of the decision procedure, provided that the given coterie C is nondominated in the sense of Garcia-Molina and Barbara (1985). Finally, we characterize the class of graphs G on which the majority coterie is G-ND."",""1558-2183"","""",""10.1109/71.595585"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595585"","""",""Tree graphs";Permission;Testing;Distributed computing;Bidirectional control;Joining processes;"Sufficient conditions"","""",""5"","""",""11"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;
"On routing maskable messages in hypercube-derived multistage interconnection networks,""Feng-Hsu Wang";" Ferng-Ching Lin"",""Department of Information Management, Ming Chuan University, Taipei, Taiwan";" Department of Computer Science and Information Engineering, National Taiwan University, Taipei, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""3"",""285"",""291"",""A vast number of message patterns can be represented by (/sup s//sub d/) masks. We consider the problem of routing maskable messages in the hypercube derived multistage interconnection networks. Network contention is settled by delivering conflicting data in different network cycles. We propose an indirect, two phase routing strategy which is optimal within two network cycles. For (/sup s//sub d/) mask message patterns in which every destination receives data from 2/sup V/ sources, we identity a subclass of maskable messages that can be routed in minimal 2/sup V/ network cycles, and the other maskable messages can be routed in 2/sup V/+2 network cycles."",""1558-2183"","""",""10.1109/71.584094"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=584094"","""",""Routing";Intelligent networks;Multiprocessor interconnection networks;Switches;Communication switching;Switching circuits;Computer networks;Concurrent computing;Broadcasting;"Logic"","""",""1"","""",""14"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"On runtime parallel scheduling for processor load balancing,""Min-You Wu"",""Department of Computer Science, State University of New York, University at Buffalo, Buffalo, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""173"",""186"",""Parallel scheduling is a new approach for load balancing. In parallel scheduling, all processors cooperate to schedule work. Parallel scheduling is able to accurately balance the load by using global load information at compile-time or runtime. It provides high-quality load balancing. This paper presents an overview of the parallel scheduling technique. Scheduling algorithms for tree, hypercube, and mesh networks are presented. These algorithms can fully balance the load and maximize locality at runtime. Communication costs are significantly reduced compared to other existing algorithms."",""1558-2183"","""",""10.1109/71.577261"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577261"","""",""Runtime";Processor scheduling;Load management;Optimal scheduling;Scheduling algorithm;Hypercubes;Dynamic scheduling;Mesh networks;Concurrent computing;"Costs"","""",""43"","""",""35"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;
"Optimal polling in communication networks,""A. A. Rescigno"",""Dipartimento di Informatica ed Applicazioni, Università di Salerno, Baronissi, Salerno, Italy"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""5"",""449"",""461"",""Polling is the process in which an issuing node of a communication network (polling station) broadcasts a query to every other node in the network and waits to receive a unique response from each of them. Polling can be thought of as a combination of broadcasting and gathering and finds wide applications in the control of distributed systems. In this paper, we consider the problem of polling in minimum time. We give a general lower bound on the minimum number of time units to accomplish polling in any network and we present optimal polling algorithms for several classes of graphs, including hypercubes and recursively decomposable Cayley graphs."",""1558-2183"","""",""10.1109/71.598273"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598273"","""",""Intelligent networks";Communication networks;Tree graphs;Broadcasting;Multiprocessor interconnection networks;Distributed control;Communication system control;Control systems;Hypercubes;"Scattering"","""",""12"","""",""33"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;
"Optimal software multicast in wormhole-routed multistage networks,""Hong Xu"; Yadong Gui;" L. M. Ni"",""Cisco Systems, Inc., San Jose, CA, USA"; Institute of Computing Technology, Chinese Academy and Sciences, Wuxi, Jiangsu, China;" Department of Computer Science, Michigan State University, East Lansing, MI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""597"",""607"",""Multistage interconnection networks are a popular class of interconnection architecture for constructing scalable parallel computers (SPCs). The focus of this paper is on the multistage network system which supports wormhole routed turnaround routing. Existing machines characterized by such a system model include the IBM SP-1 and SP-2, TMC CM-5, and Meiko CS-2. Efficient collective communication among processor nodes is critical to the performance of SPCs. A system-level multicast service, in which the same message is delivered from a source node to an arbitrary number of destination nodes, is fundamental in supporting collective communication primitives including the application-level broadcast, reduction, and barrier synchronization. This paper addresses how to efficiently implement multicast services in wormhole-routed multistage networks, in the absence of hardware multicast support, by exploiting the properties of the turnaround switching technology. An optimal multicast algorithm is proposed. The results of implementations on a 64-node SP-1 show that the proposed algorithm significantly outperforms the application-level broadcast primitives provided by currently existing collective communication libraries including the public domain MPI."",""1558-2183"","""",""10.1109/71.595577"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595577"","""",""Broadcasting";Multicast algorithms;Multiprocessor interconnection networks;Computer architecture;Computer networks;Concurrent computing;Routing;Hardware;Communication switching;"Libraries"","""",""15"","""",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Optimal task assignment in homogeneous networks,""Cheol-Hoon Lee";" K. G. Shin"",""Parallel Processing Laboratory, Department of Computer Engineering, Chungnam National University, Daejeon, South Korea";" Real-Time Computing Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""119"",""129"",""This paper considers the problem of assigning the tasks of a distributed application to the processors of a distributed system such that the sum of execution and communication costs is minimized. Previous work has shown this problem to be tractable for a system of two processors or a linear array of N processors, and for distributed programs of serial parallel structures. Here we focus on the assignment problem on a homogeneous network, which is composed of N functionally-identical processors, each with its own memory. Some processors in the network may have unique resources, such as data files or certain peripheral devices. Certain tasks may have to use these unique resources";" they are called attached tasks. The tasks of a distributed program should therefore be assigned so as to make use of specific resources located at certain processors in the network while minimizing the amount of interprocessor communication. The assignment problem in such a homogeneous network is known to be NP-hard even for N=3, thus making it intractable for a network with a medium to large number of processors. We therefore focus on task assignment in general array networks, such as linear arrays, meshes, hypercubes, and trees. We first develop a modeling technique that transforms the assignment problem in an array or tree into a minimum-cut maximum-flow problem. The assignment problem is then solved for a general array or tree network in polynomial time."",""1558-2183"","""",""10.1109/71.577254"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577254"","""",""Intelligent networks";Polynomials;Cost function;Hypercubes;Network topology;"Pathology"","""",""46"","""",""20"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;
"Optimistic crash recovery without changing application messages,""S. Venkatesan"; T. T. . -Y. Juang;" S. Alagar"",""University of Texas, Dallas, Richardson, TX, USA"; Chung Hua Polytechnic Institute, Hsinchu, Taiwan;" University of Texas, Dallas, Richardson, TX, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""3"",""263"",""271"",""We present an optimistic crash recovery technique without any communication overhead during normal operations of the distributed system. Our technique does not append any information to the application messages, it does not suffer from the domino effect, and each processor rolls back at most once during recovery. We present three distributed rollback algorithms, their complexities, and correctness proofs. Their performances are measured through extensive simulations."",""1558-2183"","""",""10.1109/71.584092"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=584092"","""",""Computer crashes";Checkpointing;Application software;Computer science;Performance evaluation;Distributed algorithms;History;Communication channels;Distributed computing;"Communication networks"","""",""19"","""",""24"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Parallel cluster identification for multidimensional lattices,""S. J. Fink"; C. Huston; S. B. Baden;" K. Jansen"",""Department of Computer Science and Engineering, University of California, San Diego, La Jolla, CA, USA"; Hewlett Packard Corporation, Escondido, CA, USA; Department of Computer Science and Engineering, University of California, San Diego, La Jolla, CA, USA;" CERN, Geneva, Switzerland"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""11"",""1089"",""1097"",""The cluster identification problem is a variant of connected component labeling that arises in cluster algorithms for spin models in statistical physics. We present a multidimensional version of K.P. Belkhale and P. Banerjee's quad algorithm (1992) for connected component labeling on distributed memory parallel computers. Our extension abstracts away extraneous spatial connectivity information in more than two dimensions, simplifying implementation for higher dimensionality. We identify two types of locality present in cluster configurations, and present optimizations to exploit locality for better performance. Performance results from 2D, 3D, and 4D Ising model simulations with Swendson-Wang dynamics show that the optimizations improve performance by 20-80 percent."",""1558-2183"","""",""10.1109/71.642944"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=642944"","""",""Multidimensional systems";Lattices;Clustering algorithms;Labeling;Concurrent computing;Distributed computing;Abstracts;Parallel algorithms;Physics;"Computational modeling"","""",""1"","""",""27"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"Parallel computer vision on a reconfigurable multiprocessor network,""S. M. Ehandarkar";" H. R. Arabnia"",""Dept. of Comput. Sci., Georgia Univ., Athens, GA, USA";" Department of Computer Science, 415 Boyd Graduate Studies Research Center, University of Georgia, Athens, GA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""3"",""292"",""309"",""A novel reconfigurable architecture based on a multiring multiprocessor network is described. The reconfigurability of the architecture is shown to result in a low network diameter and also a low degree of connectivity for each node in the network. The mathematical properties of the network topology and the hardware for the reconfiguration switch are described. Primitive parallel operations on the network topology are described and analyzed. The architecture is shown to contain 2D mesh topologies of varying sizes and also a single one factor of the Boolean hypercube in any given configuration. A large class of algorithms for the 2D mesh and the Boolean n-cube are shown to map efficiently on the proposed architecture without loss of performance. The architecture is shown to be well suited for a number of problems in low and intermediate level computer vision such as the FFT, edge detection, template matching, and the Hough transform. Timing results for typical low and intermediate level vision algorithms on a transputer based prototype are presented."",""1558-2183"","""",""10.1109/71.584095"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=584095"","""",""Computer vision";Computer architecture;Network topology;Switches;Reconfigurable architectures;Hardware;Hypercubes;Performance loss;Image edge detection;"Timing"","""",""22"","""",""39"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Parallel execution of hash joins in parallel databases,""Hui-I Hsiao"; Ming-Syan Chen;" P. S. Yu"",""IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA"; Electrical Engineering Department, National Taiwan University, Taipei, Taiwan;" IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""8"",""872"",""883"",""We explore two important issues, processor allocation and the use of hash filters, to improve the parallel execution of hash joins. To exploit the opportunity of pipelining for hash join execution, a scheme to transform a bushy execution tree to an allocation tree is first devised. In an allocation tree, each node denotes a pipeline. Then, using the concept of synchronous execution time, processors are allocated to the nodes in the allocation tree in such a way that inner relations in a pipeline can be made available at approximately the same time. Also, the approach of hash filtering is investigated to further improve the parallel execution of hash joins. Extensive performance studies are conducted via simulation to demonstrate the importance of processor allocation and to evaluate various schemes using hash filters. It is experimentally shown that processor allocation is, in general, the dominant factor of performance, and the effect of hash filtering becomes more prominent as the number of relations in a query increases."",""1558-2183"","""",""10.1109/71.605772"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=605772"","""",""Pipeline processing";Relational databases;Filters;Filtering;Query processing;Database machines;Industrial relations;Multiprocessing systems;Costs;"Processor scheduling"","""",""13"",""1"",""38"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Parallel incremental graph partitioning,""Chao-Wei Ou";" S. Ranka"",""Northeast Parallel Architectures Center, School of Computer and Information Science, Syracuse University, Syracuse, NY, USA";" School of Computer Science, University of Florida, Gainesville, FL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""8"",""884"",""896"",""Partitioning graphs into equally large groups of nodes while minimizing the number of edges between different groups is an extremely important problem in parallel computing. For instance, efficiently parallelizing several scientific and engineering applications requires the partitioning of data or tasks among processors such that the computational load on each node is roughly the same, while communication is minimized. Obtaining exact solutions is computationally intractable, since graph partitioning is NP-complete. For a large class of irregular and adaptive data parallel applications (such as adaptive graphs), the computational structure changes from one phase to another in an incremental fashion. In incremental graph-partitioning problems the partitioning of the graph needs to be updated as the graph changes over time";" a small number of nodes or edges may be added or deleted at any given instant. In this paper, we use a linear programming-based method to solve the incremental graph-partitioning problem. All the steps used by our method are inherently parallel and hence our approach can be easily parallelized. By using an initial solution for the graph partitions derived from recursive spectral bisection-based methods, our methods can achieve repartitioning at considerably lower cost than can be obtained by applying recursive spectral bisection. Further, the quality of the partitioning achieved is comparable to that achieved by applying recursive spectral bisection to the incremental graphs from scratch."",""1558-2183"","""",""10.1109/71.605773"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=605773"","""",""Concurrent computing";Parallel processing;Data engineering;Costs;Computer applications;Physics computing;Simulated annealing;Chaotic communication;Circuits;"Very large scale integration"","""",""35"","""",""17"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Performance evaluation of switch-based wormhole networks,""L. M. Ni"; Yadong Gui;" S. Moore"",""Department of Computer Science, Michigan State University, East Lansing, MI, USA"; Institute of Computing Technology, Chinese Academy and Sciences, Wuxi, Jiangsu, China;" Sun Microsystems, Inc., Mountain View, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""5"",""462"",""474"",""Multistage interconnection networks (MINs) are a popular class of switch-based network architectures for constructing scalable parallel computers. Four wormhole MINs built from k/spl times/k switches, where k=2/sup i/ for some j, are considered in this paper: traditional MINs (TMINs), dilated MINs (DMINs), MINs with virtual channels (VMINs), and bidirectional MINs (BMINs). The first three MINs are unidirectional networks, and we show that the cube interconnection pattern can provide contention-free and channel-balanced partitioning of binary cube clusters. BMINs based on butterfly interconnection are essentially a fat tree, and their routing properties are described. Performance comparison among these four networks using simulation experiments is presented with respect to different network traffic patterns. Both DMINs (dilation two) and BMINs have a similar hardware complexity. We conclude that a two-dilated MIN outperforms the corresponding BMIN (or fat tree) for most of the traffic conditions and is a better choice for the design of scalable parallel computers."",""1558-2183"","""",""10.1109/71.598274"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598274"","""",""Communication switching";Delay;Switches;Concurrent computing;Computer networks;Multiprocessor interconnection networks;Telecommunication traffic;Traffic control;Packet switching;"Computer architecture"","""",""21"",""9"",""33"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Performance models for the processor farm paradigm,""A. S. Wagner"; H. V. Sreekantaswamy;" S. T. Chanson"",""Department of Computer Science, University of British Columbia, Vancouver, BC, Canada"; Nortel (Northern Telecom), Ottawa, ONT, Canada;" Hong Kong University of Science and Technology, Kowloon, Hong Kong, China"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""5"",""475"",""489"",""In this paper, we describe the design, implementation, and modeling of a runtime kernel to support the processor farm paradigm on multicomputers. We present a general topology-independent framework for obtaining performance models to predict the performance of the start-up, steady-state, and wind-down phases of a processor farm. An algorithm is described, which for any interconnection network determines a tree-structured subnetwork that optimizes farm performance. The analysis technique is applied to the important case of k-ary tree topologies. The models are compared with the measured performance on a variety of topologies using both constant and varied task sizes."",""1558-2183"","""",""10.1109/71.598275"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598275"","""",""Kernel";Runtime;Parallel programming;Computer Society;Steady-state;Network topology;Concurrent computing;Software performance;Predictive models;"Multiprocessor interconnection networks"","""",""21"",""1"",""27"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Performance of multistage bus networks for a distributed shared memory multiprocessor,""L. N. Bhuyan"; R. R. Iyer; T. Askar; A. K. Nanda;" M. Kumar"",""Department of Computer Science, Texas A and M University, College Station, TX, USA"; Department of Computer Science, Texas A and M University, College Station, TX, USA; Advanced Micro Devices, Inc., Austin, TX, USA; IBM Thomas J. Watson Research Center, Yorktown Heights, NY, USA;" Department of Computer Science, Curtin University of Technology, Perth, WA, Australia"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""1"",""82"",""95"",""A multistage bus network (MEN) is proposed to overcome some of the shortcomings of the conventional multistage interconnection networks (MINs), single bus, and hierarchical bus interconnection networks. The MBN consists of multiple stages of buses connected in a manner similar to the MINs and has the same bandwidth at each stage. A switch in an MBN is similar to that in a MIN switch except that there is a single bus connection instead of a crossbar. MBNs support bidirectional routing and there exists a number of paths between any source and destination pair. The authors develop self routing techniques for the various paths, present an algorithm to route a request along the path with minimum distance, and analyze the probabilities of a packet taking different routes. Further, they derive a performance analysis of a synchronous packet-switched MBN in a distributed shared memory environment and compare the results with those of an equivalent bidirectional MIN (BMIN). Finally, they present the execution time of various applications on the MBN and the BMIN through an execution-driven simulation. They show that the MBN provides similar performance to a BMIN while offering simplicity in hardware and more fault-tolerance than a conventional MIN."",""1558-2183"","""",""10.1109/71.569657"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=569657"","""",""Switches";Bandwidth;Multiprocessor interconnection networks;Routing;Telecommunication traffic;Performance analysis;Computational modeling;Computer Society;Algorithm design and analysis;"Hardware"","""",""14"",""5"",""18"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;
"Podality-based time-optimal computations on enhanced meshes,""V. Bokka"; H. Gurla; S. Olariu;" J. L. Schwing"",""AT and T Bell Laboratories, Inc., USA"; ADC Telecom, USA; Department of Computer Science, Old Dominion University, Norfolk, VA, USA;" Department of Computer Science, Old Dominion University, Norfolk, VA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""10"",""1019"",""1035"",""The main contribution of this paper is to present simple and elegant podality-based algorithms for a variety of computational tasks motivated by, and finding applications to, pattern recognition, computer graphics, computational morphology, image processing, robotics, computer vision, and VLSI design. The problems that we address involve computing the convex hull, the diameter, the width, and the smallest area enclosing rectangle of a set of points in the plane, as well as the problems of finding the maximum Euclidian distance between two planar sets of points, and of constructing the Minkowski sum of two convex polygons. Specifically, we show that once we fix a positive constant /spl epsiv/, all instances of size m, (n/sup 1/2 +/spl epsiv///spl les/m/spl les/n) of the problems above, stored in the first [m//spl radic/n] columns of a mesh with multiple broadcasting of size /spl radic/n/spl times//spl radic/n can be solved time-optimally in /spl Theta/(m//spl radic/n) time."",""1558-2183"","""",""10.1109/71.629485"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=629485"","""",""Computer vision";Application software;Pattern recognition;Computer graphics;Morphology;Image processing;Robot vision systems;Very large scale integration;Algorithm design and analysis;"Broadcasting"","""",""5"","""",""34"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"pp-mess-sim: a flexible and extensible simulator for evaluating multicomputer networks,""J. Rexford"; Wu-Chang Feng; J. Dolter;" K. G. Shin"",""AT and T Research Laboratories, Murray Hill, NJ, USA"; Real-Time Computing Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA; Qualcomm, Inc., San Diego, CA, USA;" Real-Time Computing Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""1"",""25"",""40"",""The paper presents pp-mess-sim, an object-oriented discrete-event simulation environment for evaluating interconnection networks in message-passing systems. The simulator provides a toolbox of various network topologies, communication workloads, routing-switching algorithms, and router models. By carefully defining the boundaries between these modules, pp-mess-sim creates a flexible and extensible environment for evaluating different aspects of network design. The simulator models emerging multicomputer networks that can support multiple routing and switching schemes simultaneously";" pp-mess-sim achieves this flexibility by associating routing-switching policies, traffic patterns, and performance metrics with collections of packets, instead of the underlying router model. Besides providing a general framework for evaluating router architectures, pp-mess-sim includes a cycle-level model of the PRC, a programmable router for point-to-point distributed systems. The PRC model captures low-level implementation details, while another high-level model facilitates experimentation with general router design issues. Sample simulation experiments capitalize on this flexibility to compare network architectures under various application workloads."",""1558-2183"","""",""10.1109/71.569653"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=569653"","""",""Object oriented modeling";Partial response channels;Discrete event simulation;Multiprocessor interconnection networks;Network topology;Routing;Packet switching;Communication switching;Telecommunication traffic;"Traffic control"","""",""8"","""",""44"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;
"Practical algorithms for selection on coarse-grained parallel computers,""I. Al-Furiah"; S. Aluru; S. Goil;" S. Ranka"",""School of Computer and Information Science, Syracuse University, Syracuse, NY, USA"; Department of Computer Science, New Mexico State University, Las Cruces, NM, USA; Department of Computer Science, Northwestern University, Evanston, IL, USA;" School of Computer and Information Science and Engineering, University of Florida, Gainesville, FL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""8"",""813"",""824"",""In this paper, we consider the problem of selection on coarse-grained distributed memory parallel computers. We discuss several deterministic and randomized algorithms for parallel selection. We also consider several algorithms for load balancing needed to keep a balanced distribution of data across processors during the execution of the selection algorithms. We have carried out detailed implementations of all the algorithms discussed on the CM-5 and report on the experimental results. The results clearly demonstrate the role of randomization in reducing communication overhead."",""1558-2183"","""",""10.1109/71.605768"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=605768"","""",""Concurrent computing";Distributed computing;Iterative algorithms;Load management;Hypercubes;Parallel algorithms;Partitioning algorithms;Multidimensional systems;Computer Society;"Application software"","""",""6"","""",""25"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"RAID5 performance with distributed sparing,""A. Thomasian";" Jai Menon"",""IBM Thomas J. Watson Research Center, Hawthorne, NY, USA";" IBM Almaden Research Center, San Jose, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""640"",""657"",""Distributed sparing is a method to improve the performance of RAID5 disk arrays with respect to a dedicated sparing system with N+2 disks (including the spare disk), since it utilizes the bandwidth of all N+2 disks. We analyze the performance of RAID5 with distributed sparing in normal mode, degraded mode, and rebuild mode in an OLTP environment, which implies small reads and writes. The analysis in normal mode uses an M/G/1 queuing model, which takes into account the components of disk service time. In degraded mode, a low-cost approximate method is developed to estimate the mean response time of fork-join requests resulting from accesses to recreate lost data on the failed disk. Rebuild mode performance is analyzed by considering an M/G/1 vacationing server model with multiple vacations of different types to take into account differences in processing requirements for reading the first and subsequent tracks. An iterative solution method is used to estimate the mean response time of disk requests, as well as the time to read each disk, which is shown to be quite accurate through validation against simulation results. We next compare RAID5 performance in a system (1) without a cache"; (2) with a cache;" and (3) with a nonvolatile storage (NVS) cache. The last configuration, in addition to improved read response time due to cache hits, provides a fast-write capability, such that dirty blocks can be destaged asynchronously and at a lower priority than read requests, resulting in an improvement in read response time. The small write penalty is also reduced due to the possibility of repeated writes to dirty blocks in the cache and by taking advantage of disk geometry to efficiently destage multiple blocks at a time."",""1558-2183"","""",""10.1109/71.595583"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595583"","""",""Degradation";Delay;Queueing analysis;Bandwidth;Performance analysis;Cache storage;Fault tolerance;Automatic control;Iterative methods;"Geometry"","""",""83"",""10"",""38"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Recovery analysis of data sharing systems under deferred dirty page propagation policies,""A. Dan"; P. S. Yu;" A. Jhingran"",""IBM Research Division, IBM Thomas J. Watson Research Center, Hawthorne, NY, USA"; IBM Research Division, IBM Thomas J. Watson Research Center, Hawthorne, NY, USA;" NA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""7"",""695"",""711"",""In a multinode data sharing environment, different buffer coherency control schemes based on various lock retention mechanisms can be designed to exploit the concept of deferring the propagation or writing of dirty pages to disk to improve normal performance. Two types of deferred write policies are considered. One policy only propagates dirty pages to disk at the times when dirty pages are flushed out of the buffer under LRU buffer replacement. The other policy also performs writes at the times when dirty pages are transferred across nodes. The dirty page propagation policy can have significant implications on the database recovery time. In this paper, we provide an analytical modeling framework for the analysis of the recovery times under the two deferred write policies. We demonstrate how these policies can be mapped onto a unified analytic modeling framework. The main challenge in the analysis is to obtain the pending update count distribution which can be used to determine the average numbers of log records and data I/Os needed to be applied during recovery. The analysis goes beyond previous work on modeling buffer hit probability in a data sharing system where only the average buffer composition, not the distribution, needs to be estimated, and recovery analysis in a single node environment where the complexities on tracking the propagation of dirty pages across nodes and the buffer invalidation effect do not appear."",""1558-2183"","""",""10.1109/71.598345"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598345"","""",""Data analysis";Performance analysis;Costs;Control systems;Coupled mode analysis;Database systems;Writing;Analytical models;Availability;"Prototypes"","""",""3"","""",""41"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Reducing communication latency with path multiplexing in optically interconnected multiprocessor systems,""Chunming Qiao";" R. Melhem"",""Department of Electrical and Computer Engineering, State University of New York, University at Buffalo, Buffalo, NY, USA";" Department of Computer Science, University of Pittsburgh, Pittsburgh, PA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""97"",""108"",""Reducing communication latency, which is a performance bottleneck in optically interconnected multiprocessor systems, is of prominent importance. A conventional approach for establishing connections in multiplexed networks uses a set of independent time slots (or virtual channels) along a path for each connection. This approach requires the use of switching devices capable of interchanging time slots, and thus introduces latency in addition to hardware and control complexity. We propose an approach to all-optical time division multiplexed (TDM) communications in multiprocessor systems. The idea is to establish a connection along a path using a set of time slots (or virtual channels) that are dependent on each other, so that no time slot interchanging is required. We compare the proposed approach with the conventional one in terms of the overall communication latency. We found that, despite the possibility that establishing a connection may take a longer time, the proposed approach will result in lower overall communication latency as it eliminates the delays introduced by the time slot interchanging switching devices."",""1558-2183"","""",""10.1109/71.577249"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577249"","""",""Delay";Optical interconnections;Multiprocessing systems;Time division multiplexing;Integrated circuit interconnections;WDM networks;Communication switching;Communication system control;Computer Society;"Telecommunication switching"","""",""21"","""",""37"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Relationships between efficiency and execution time of full multigrid methods on parallel computers,""I. Martin";" F. Tirado"",""Departamento de Informática y Automática, Faculty CC., Físicas, Universidad Complutense de Madrid, Madrid, Spain";" Departamento de Informática y Automática, Faculty CC., Físicas, Universidad Complutense de Madrid, Madrid, Spain"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""6"",""562"",""573"",""The large number of processing elements in current parallel systems necessitates the development of more comprehensive and realistic tools for the scalability analysis of algorithms on those architectures. This paper presents a simple analytical tool with which to study the scalability of parallel algorithm-architecture combinations. Our practical method studies separately execution time, efficiency, and memory usage in the accuracy-critical scaling model, where the problem size-input data set size-increases with the number of processors, which is the relevant one in many situations. The paper defines quantitative and qualitative measurements of the scalability and derives important relationships between execution time and efficiency. For example, results show that the best way to scale the system (to deteriorate as little as possible the properties of the system) is by maintaining constant execution time. These analytical results are verified with one candidate application for massive parallel computers: the full multigrid method. We study the scalability of a general d-dimensional full multigrid method on an r-dimensional mesh of processors. The analytical expressions are verified through experimental results obtained by implementing the full multigrid method on a Transputer-based machine and on the CRAY T3D."",""1558-2183"","""",""10.1109/71.595573"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=595573"","""",""Multigrid methods";Concurrent computing;Scalability;Algorithm design and analysis;Application software;High performance computing;Computer architecture;Time measurement;Parallel algorithms;"Performance analysis"","""",""20"",""1"",""23"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Scalable global and local hashing strategies for duplicate pruning in parallel A* graph search,""N. R. Mahapatra";" S. Dutt"",""Department of Electrical and Computer Engineering, State University of New York, University at Buffalo, Buffalo, NY, USA";" Department of Electrical Engineering and Computer Science, University of Illinois, Chicago, Chicago, IL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""7"",""738"",""756"",""For many applications of the A* algorithm, the state space is a graph rather than a tree. The implication of this for parallel A* algorithms is that different processors may perform significant duplicated work if interprocessor duplicates are not pruned. In this paper, we consider the problem of duplicate pruning in parallel A* graph-search algorithms implemented on distributed-memory machines. A commonly used method for duplicate pruning uses a hash function to associate with each distinct node of the search space a particular processor to which duplicate nodes arising in different processors are transmitted and thereby pruned. This approach has two major drawbacks. First, load balance is determined solely by the hash function. Second, node transmissions for duplicate pruning are global";" this can lead to hot spots and slower message delivery. To overcome these problems, we propose two different duplicate pruning strategies: 1) To achieve good load balance, we decouple the task of duplicate pruning from load balancing, by using a hash function for the former and a load balancing scheme for the latter. 2) A novel search-space partitioning scheme that allocates disjoint parts of the search space to disjoint subcubes in a hypercube (or disjoint processor groups in the target architecture), so that duplicate pruning is achieved with only intrasubcube or adjacent intersubcube communication. Thus message latency and hot-spot probability are greatly reduced. The above duplicate pruning schemes were implemented on an nCUBE2 hypercube multicomputer to solve the Traveling Salesman Problem (TSP). For uniformly distributed intercity costs, our strategies yield a speedup improvement of 13 to 35 percent on 1,024-processors over previous methods that do not prune any duplicates, and 13 to 25 percent over the previous hashing-only scheme. For normally distributed data the corresponding figures are 135 percent and 10 to 155 percent. Finally, we analyze the scalability of our parallel A* algorithms on k-ary n-cube networks in terms of the isoefficiency metric, and show that they have isoefficiency lower and upper bounds of /spl Theta/(P log P) and /spl Theta/(Pkn/sup 2/), respectively."",""1558-2183"","""",""10.1109/71.598348"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598348"","""",""Load management";Hypercubes;State-space methods;Tree graphs;Delay;Traveling salesman problems;Costs;Algorithm design and analysis;Scalability;"Upper bound"","""",""17"",""6"",""28"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Scalable parallel implementations of list ranking on fine-grained machines,""J. N. Patel"; A. A. Khokhar;" L. H. Jamieson"",""Advanced Technologies Division, Oracle Corporation, Redwood Shores, CA, USA"; Department of Electrical and Computer Engineering, University of Delaware, Newark, DE, USA;" School of Electrical and Computer Engineering, Purdue University, West Lafayette, IN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""10"",""1006"",""1018"",""We present analytical and experimental results for fine-grained list ranking algorithms. We compare the scalability of two representative algorithms on random lists, then address the question of how the locality properties of image edge lists can be used to improve the performance of this highly data-dependent operation. Starting with Wyllie's algorithm and Anderson and Miller's randomized algorithm as bases, we use the spatial locality of edge links to derive scalable algorithms designed to exploit the characteristics of image edges. Tested on actual and synthetic edge data, this approach achieves significant speedup on the MasPar MP-1 and MP-2, compared to the standard list ranking algorithms. The modified algorithms exhibit good scalability and are robust across a wide variety of image types. We also show that load balancing on fine grained machines performs well only for large problem to machine size ratios."",""1558-2183"","""",""10.1109/71.629484"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=629484"","""",""Scalability";Computer vision;Parallel machines;Pixel;Algorithm design and analysis;Image processing;Testing;Robustness;Load management;"Parallel algorithms"","""",""22"","""",""12"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Scheduling data-flow graphs via retiming and unfolding,""Liang-Fang Chao";" E. Hsing-Mean Sha"",""Department of Electrical and Computer Engineering, Iowa State University, Ames, IA, USA";" Department of Computer Science and Engineering, University of Notre Dame, Notre Dame, IN, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1259"",""1267"",""Loop scheduling is an important problem in parallel processing. The retiming technique reorganizes an iteration";" the unfolding technique schedules several iterations together. We combine these two techniques to obtain a static schedule with a reduced average computation time per iteration. We first prove that the order of retiming and unfolding is immaterial for scheduling a data-flow graph (DFG). From this nice property, we present a polynomial-time algorithm on the original DFG, before unfolding, to find the minimum-rate static schedule for a given unfolding factor. For the case of a unit-time DFG, efficient checking and retiming algorithms are presented."",""1558-2183"","""",""10.1109/71.640018"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640018"","""",""Processor scheduling";Iterative algorithms;Parallel processing;Scheduling algorithm;Delay;Digital signal processing;Chaos;Polynomials;Very large scale integration;"High level synthesis"","""",""67"","""",""14"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Shared-memory parallelization of the data association problem in multitarget tracking,""R. L. Popp"; K. R. Pattipati; Y. Bar-Shalom;" R. A. Ammar"",""BBN Systems and Technologies Corporation, Cambridge, MA, USA"; Department of Electrical and Systems Engineering, University of Connecticut, Storrs, CT, USA; Department of Electrical and Systems Engineering, University of Connecticut, Storrs, CT, USA;" Department of Computer Science and Engineering, University of Connecticut, Storrs, CT, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""10"",""993"",""1005"",""The focus of this paper is to present the results of our investigation and evaluation of various shared-memory parallelizations of the data association problem in multitarget tracking. The multitarget tracking algorithm developed was for a sparse air traffic surveillance problem, and is based on an Interacting Multiple Model (IMM) state estimator embedded into the (2D) assignment framework. The IMM estimator imposes a computational burden in terms of both space and time complexity, since more than one filter model is used to calculate state estimates, covariances, and likelihood functions. In fact, contrary to conventional wisdom, for sparse multitarget tracking problems, we show that the assignment (or data association) problem is not the major computational bottleneck. Instead, the interface to the assignment problem, namely, computing the rather numerous gating tests and IMM state estimates, covariance calculations, and likelihood function evaluations (used as cost coefficients in the assignment problem), is the major source of the workload. Using a measurement database based on two FAA air traffic control radars, we show that a """"coarse-grained"""" (dynamic) parallelization across the numerous tracks found in a multitarget tracking problem is robust, scalable, and demonstrates superior computational performance to previously proposed """"fine-grained"""" (static) parallelizations within the IMM."",""1558-2183"","""",""10.1109/71.629483"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=629483"","""",""Radar tracking";State estimation;Traffic control;Surveillance;Filters;Computer interfaces;Testing;Cost function;Databases;"FAA"","""",""9"",""1"",""26"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"Solving an algebraic path problem and some related graph problems on a hyper-bus broadcast network,""Horng-Ren Tsai"; Shi-Jinn Horng; Shun-Shan Tsai; Tzong-Wann Kao;" Shung-Shing Lee"",""Department of Information Management, Overseas Chinese College of Commerce, Taichung, Taiwan"; Department of Electrical Engineering, National Taiwan University of Science and Technology, Taipei, Taiwan; Department of Electrical Engineering, National Taiwan University of Science and Technology, Taipei, Taiwan; Department of Electronic Engineering, Kuang Wu Institute of Technology and Commerce, Taipei, Taiwan;" Department of Electronic Engineering, Fu Shin Institute of Technology and Commerce, I-Lan, Taiwan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""12"",""1226"",""1235"",""The parallel computation model upon which the proposed algorithms are based is the hyper-bus broadcast network. The hyper-bus broadcast network consists of processors which are connected by global buses only. Based on such an improved architecture, we first design two O(1) time basic operations for finding the maximum and minimum of N numbers each of size O(log N)-bit and computing the matrix multiplication operation of two N/spl times/N matrices, respectively. Then, based on these two basic operations, three of the most important instances in the algebraic path problem, the connectivity problem, and several related problems are all solved in O(log N) time. These include the all-pair shortest paths, the minimum-weight spanning tree, the transitive closure, the connected component, the biconnected component, the articulation point, and the bridge problems, either in an undirected or a directed graph, respectively."",""1558-2183"","""",""10.1109/71.640014"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=640014"","""",""Broadcasting";Computer networks;Concurrent computing;Tree graphs;Bridges;Graph theory;Parallel processing;Computational modeling;Power system modeling;"Very large scale integration"","""",""4"","""",""28"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;
"Sorting, selection, and routing on the array with reconfigurable optical buses,""S. Rajasekaran";" S. Sahni"",""Department of Computer and Information Science and Engineering, University of Florida, Gainesville, FL, USA";" Department of Computer and Information Science and Engineering, University of Florida, Gainesville, FL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""11"",""1123"",""1132"",""In this paper, we present efficient algorithms for sorting, selection, and packet routing on the AROB (Array with Reconfigurable Optical Buses) model. One of our sorting algorithms sorts n general keys in O(1) time on an AROB of size n/sup /spl epsiv///spl times/n for any constant /spl epsiv/>0. We also show that selection from out of n elements can be done in randomized O(1) time employing n processors. Our routing algorithm can route any h-relation in randomized O(h) time. All these algorithms are clearly optimal."",""1558-2183"","""",""10.1109/71.642947"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=642947"","""",""Optical arrays";Sorting;Routing;Counting circuits;Optical switches;Optical computing;Optical fiber networks;Optical waveguides;Optical pulses;"Delay"","""",""48"","""",""31"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Statistical real-time channels on multiaccess bus networks,""Chih-Che Chou";" K. G. Shin"",""Real-Time Computing Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA";" Real-Time Computing Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""8"",""769"",""780"",""Real-time communication with performance guarantees is expected to become an important and necessary feature of future computer networks. In this paper, we present a scheme which can provide real-time communication services with both absolute and statistical performance guarantees on multiaccess bus networks for given input traffic characteristics and performance requirements. The proposed scheme reserves network bandwidth for real-time connections according to their needs. It also allows for independent addition and deletion of real-time connections while preserving existing guarantees. Our extensive simulation results for motion video communication have shown the proposed scheme to outperform the other well-known schemes."",""1558-2183"","""",""10.1109/71.605764"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=605764"","""",""Telecommunication traffic";Real time systems;Application software;Hardware;Joining processes;Computer networks;Bandwidth;Multimedia systems;Computer integrated manufacturing;"Traffic control"","""",""18"","""",""32"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Synthesizing variable instruction issue interpreters for implementing functional parallelism on SIMD computers,""N. B. Abu-Ghazaleh"; P. A. Wilsey; Xianzhi Fan;" D. A. Hensgen"",""Department of ECECS, University of Cincinnati, Cincinnati, OH, USA"; Department of ECECS, University of Cincinnati, Cincinnati, OH, USA; NA;" Department of Computer Science, Naval Postgraduate School, Monterrey, CA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""4"",""412"",""423"",""Functional parallelism can be supported on SIMD machines by interpretation. Under such a scheme, the programs and data of each task are loaded on the processing elements (PEs) and the Control Unit of the machine executes a central control algorithm that causes the concurrent interpretation of the tasks on the PEs. The central control algorithm is, in many respects, analogous to the control store program on microprogrammed machines. Accordingly, the organization of the control algorithm greatly influences the performance of the synthesized MIMD environment. Most central control algorithms are constructed to interpret the execution phase of all instructions during every cycle (iteration). However, it is possible to delay the interpretation of infrequent and costly instructions to improve the overall performance. Interpreters that attempt improved performance by delaying the issue of infrequent instructions are referred to as variable issue control algorithms. This paper examines the construction of optimized variable issue control algorithms. In particular, a mathematical model for the interpretation process is built and two objective functions (instruction throughput and PE utilization) are defined. The problem of deriving variable issue control algorithms for these objective functions has been shown elsewhere to be NP-complete. Therefore, this paper investigates three heuristic algorithms for constructing near optimal variable issue control algorithms. The performance of the algorithms is studied on four different instruction sets and the trends of the schedulers with respect to the instruction sets and the objective functions are analyzed."",""1558-2183"","""",""10.1109/71.588621"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588621"","""",""Centralized control";Delay;Instruction sets;Mathematical model;Throughput;Heuristic algorithms;Optimal control;Scheduling algorithm;Performance analysis;"Algorithm design and analysis"","""",""5"","""",""33"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"The cross product of interconnection networks,""K. Day";" A. . -E. Al-Ayyoub"",""Computer Science Department, Sultan Qaboos University, Oman";" Computer Science Department, University of Bahrain, Bahrain"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""109"",""118"",""We study the cross product as a method for generating and analyzing interconnection network topologies for multiprocessor systems. Consider two interconnection graphs G/sub 1/ and G/sub 2/ each with some established properties such as symmetry, low degree and diameter, scalability, simple optimal routing, recursive structure (partitionability), fault tolerance, existence of node-disjoint paths, low cost embedding, and efficient broadcasting. We investigate and evaluate the corresponding properties for the cross product of G/sub 1/ and G/sub 2/ based on the properties of G/sub 1/ and those of G/sub 2/. We also give a mathematical characterization of product families of graphs which are closed under the cross product operation. This investigation is useful in two ways. On one hand, it gives a new tool for further studying some of the known interconnection topologies, such as the hypercube and the mesh, which can be defined using the cross product operation. On the other hand, it can be used in defining and evaluating new interconnection graphs using the cross product operation on known topologies."",""1558-2183"","""",""10.1109/71.577251"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577251"","""",""Multiprocessor interconnection networks";Network topology;Broadcasting;Hypercubes;Routing;Scalability;Fault tolerance;Tree graphs;Multiprocessing systems;"Binary trees"","""",""66"",""1"",""21"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"The performance of the Cedar multistage switching network,""J. Torrellas";" Zheng Zhang"",""Center for Supercomputing, Research and Development, University of Illinois, Urbana-Champaign, Urbana-Champaign, IL, USA";" Center for Supercomputing, Research and Development, University of Illinois, Urbana-Champaign, Urbana-Champaign, IL, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""4"",""321"",""336"",""While multistage switching networks for vector multiprocessors have been studied extensively, detailed evaluations of their performance are rare. Indeed, analytical models, simulations with pseudosynthetic loads, studies focused on average-value parameters, and measurements of networks disconnected from the machine, all provide limited information. In this paper, instead, we present an in-depth empirical analysis of a multistage switching network in a realistic setting: We use hardware probes to examine the performance of the omega network of the Cedar shared-memory machine executing real applications. The machine is configured with 16 vector processors. The analysis suggests that the performance of multistage switching networks is limited by traffic nonuniformities. We identify two major nonuniformities that degrade Cedar's performance and are likely to slow down other networks too. The first one is the contention caused by the return messages in a vector access as they converge from the memories to one processor port. This traffic convergence penalizes vector reads and, more importantly, causes tree saturation. The second nonuniformity is the uneven contention delays induced by a relatively fair scheme to resolve message collisions. Based on our observations, we argue that intuitive optimizations for multistage switching networks may not be the most cost-effective ones. Instead, we suggest changes to increase the network bandwidth at the root of the traffic convergence tree and to delay traffic convergence up until the final stages of the network."",""1558-2183"","""",""10.1109/71.588598"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588598"","""",""Telecommunication traffic";Convergence;Analytical models;Performance analysis;Hardware;Probes;Vector processors;Degradation;Delay;"Road accidents"","""",""10"","""",""23"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Time-optimal domain-specific querying on enhanced meshes,""V. Bokka"; H. Gurla; S. Olariu; J. L. Schwing;" L. Wilson"",""Department of Computer Science, Old Dominion University, Norfolk, VA, USA"; Department of Computer Science, Old Dominion University, Norfolk, VA, USA; Department of Computer Science, Old Dominion University, Norfolk, VA, USA; Department of Computer Science, Old Dominion University, Norfolk, VA, USA;" Department of Computer Science, Old Dominion University, Norfolk, VA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""1"",""13"",""24"",""Query processing is a crucial component of various application domains including information retrieval, database design and management, pattern recognition, robotics, and VLSI. Many of these applications involve data stored in a matrix satisfying a number of properties. One property that occurs time and again specifies that the rows and the columns of the matrix are independently sorted. It is customary to refer to such a matrix as sorted. An instance of the batched searching and ranking problem (BSR) involves a sorted matrix A of items from a totally ordered universe, along with a collection Q of queries. Q is an arbitrary mix of the following query types: for a search query q/sub j/, one is interested in an item of A that is closest to q/sub j/"; for a rank query q/sub j/ one is interested in the number of items of A that are strictly smaller than q/sub j/. The BSR problem asks for solving all queries in Q. The authors consider the BSR problem in the following context: the matrix A is pretiled, one item per processor, onto an enhanced mesh of size /spl radic/n/spl times//spl radic/n;" the m queries are stored, one per processor, in the first m//spl radic/n~ columns of the platform. Their main contribution is twofold. First, they show that any algorithm that solves the BSR problem must take at least /spl Omega/(max{logn, /spl radic/m}) time in the worst case. Second, they show that this time lower bound is tight on meshes of size /spl radic/n/spl times//spl radic/n enhanced with multiple broadcasting, by exhibiting an algorithm solving the BSR problem in /spl Theta/(max{logn, /spl radic/m}) time on such a platform."",""1558-2183"","""",""10.1109/71.569651"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=569651"","""",""Very large scale integration";Broadcasting;Pattern recognition;Information retrieval;Algorithm design and analysis;Parallel robots;Robot vision systems;Image processing;Computer graphics;"Computer architecture"","""",""6"","""",""36"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;
"Toward a more realistic performance evaluation of interconnection networks,""W. B. Ligon";" U. Ramachandran"",""Department of Computer Engineering, Clemson University, Clemson, SC, USA";" College of Computing, Georgia Institute of Technology, Atlanta, GA, USA"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""7"",""681"",""694"",""lnterconnection network design plays a central role in the design of parallel systems. Most of the previous research has evaluated the performance of interconnection networks in isolation. In this study, we investigate the relationship between application program characteristics and interconnection network performance using an execution driven simulation test bed: the Reconfigurable Architecture Workbench (RAW). We simulate five topological configurations of a k-ary n-cube interconnect and four different network link models for a 4,096 node SIMD machine, and quantify the impact of the network on two application programs. We provide experimental evidence that such """"in-context"""" simulation provides a better view of the impact of network design variables on system performance. We show that recent results, indicating that low-dimensional designs provide better ICN performance, ignore application requirements that may favor high-dimensional designs. Furthermore, applications that would appear to favor low dimensional designs may not, in fact, be significantly impacted by the network's dimensionality. We experimentally test the results of published performance models comparing the use of a synthetic load to that of a load generated by a typical application program."",""1558-2183"","""",""10.1109/71.598344"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=598344"","""",""Multiprocessor interconnection networks";Parallel machines;Delay;Testing;System performance;Bandwidth;Costs;Computational modeling;Switches;"Reconfigurable architectures"","""",""7"","""",""27"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;
"Uniform and self-stabilizing token rings allowing unfair daemon,""H. Kakugawa";" M. Yamashita"",""Department of Electrical Engineering, Faculty of Engineering, Hiroshima University, Higashihiroshima, Japan";" Department of Electrical Engineering, Faculty of Engineering, Hiroshima University, Higashihiroshima, Japan"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""2"",""154"",""163"",""A distributed system consists of a set of processes and a set of communication links, each connecting a pair of processes. A distributed system is said to be self-stabilizing if it converges to a correct system state no matter which system state it starts with. A self-stabilizing system is considered to be an ideal fault tolerant system, since it tolerates any kind and any finite number of transient failures. In this paper, we investigate uniform randomized self-stabilizing mutual exclusion systems on unidirectional rings. As far as deterministic systems are concerned, it is well-known that there is no such system when the number 6 of processes (i.e., ring size) is composite, even if a fair central-daemon (c-daemon) is assumed. A fair daemon guarantees that every process will be selected for activation infinitely many times. As for randomized systems, regardless of the ring size, we can design a self-stabilizing system even for a distributed-daemon (d-daemon). However, every system proposed so far assumes a daemon to be fair, and effectively replies on this assumption. This paper tackles the problem of designing a self-stabilizing system, without assuming the fairness of a daemon. As a result, we present a randomized self-stabilizing mutual exclusion system for any size n (including composite size) of a unidirectional ring. The number of process states of the system is 2(n-1)."",""1558-2183"","""",""10.1109/71.577257"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=577257"","""",""Fault tolerant systems";Computer Society;Joining processes;Distributed algorithms;Token networks;Workstations;"Local area networks"","""",""24"","""",""17"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;;;;;
"Uniform dynamic self-stabilizing leader election,""S. Dolev"; A. Israeli;" S. Moran"",""Department of Mathematics and Computer Science, Ben-Gurion University of the Negev, Beersheba, Israel"; Intel, Haifa, Israel;" Computer Science Department, Israel Institute of Technology-Technion, Israel"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""4"",""424"",""440"",""A distributed system is self-stabilizing if it can be started in any possible global state. Once started the system regains its consistency by itself, without any kind of outside intervention. The self-stabilization property makes the system tolerant to faults in which processors exhibit a faulty behavior for a while and then recover spontaneously in an arbitrary state. When the intermediate period in between one recovery and the next faulty period is long enough, the system stabilizes. A distributed system is uniform if all processors with the same number of neighbors are identical. A distributed system is dynamic if it can tolerate addition or deletion of processors and links without reinitialization. In this work, we study uniform dynamic self-stabilizing protocols for leader election under readwrite atomicity. Our protocols use randomization to break symmetry. The leader election protocol stabilizes in O(/spl Delta/D log n) time when the number of the processors is unknown and O(/spl Delta/D), otherwise. Here /spl Delta/ denotes the maximal degree of a node, D denotes the diameter of the graph and n denotes the number of processors in the graph. We introduce self-stabilizing protocols for synchronization that are used as building blocks by the leader-election algorithm. We conclude this work by presenting a simple, uniform, self-stabilizing ranking protocol."",""1558-2183"","""",""10.1109/71.588622"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=588622"","""",""Nominations and elections";Protocols;Distributed algorithms;Distributed computing;Process design;Centralized control;Control systems;Fault tolerant systems;Fault tolerance;"History"","""",""108"","""",""31"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;
"Universal wormhole routing,""R. I. Greenberg";" Hyeong-Cheol Oh"",""Department of Mathematical and Computer Sciences, Loyola University, Chicago, IL, USA";" Department of Information Engineering, Korea University, South Korea"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""3"",""254"",""262"",""We examine the wormhole routing problem in terms of the """"congestion"""" c and """"dilation"""" d for a set of packet paths. We show, with mild restrictions, that there is a simple randomized algorithm for routing any set of P packets in O(cd/spl eta/+d/spl eta/ log P) time with high probability, where L is the number of flits in a packet, and /spl eta/=min {d, L}";" only a constant number of flits are stored in each queue at any time. Using this result, we show that a fat tree network of area /spl ominus/(A) can simulate wormhole routing on any network of comparable area with O(log/sup 3/ A) slowdown, when all worms have the same length. Variable length worms are also considered. We run some simulations on the fat tree which show that not only does wormhole routing tend to perform better than the more heavily studied store and forward routing in this context, but that performance superior to our provable bound is attainable in practice."",""1558-2183"","""",""10.1109/71.584091"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=584091"","""",""Routing";Computer worms;Performance analysis;Iterative algorithms;Context modeling;Multiprocessor interconnection networks;Algorithm design and analysis;Large-scale systems;Computer networks;"Concurrent computing"","""",""14"","""",""28"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;;
"Vienna-Fortran/HPF extensions for sparse and irregular problems and their compilation,""M. Ujaldon"; E. L. Zapata; B. M. Chapman;" H. P. Zima"",""Department of Computer Architecture, University of Malaga, Malaga, Spain"; Department of Computer Architecture, University of Malaga, Malaga, Spain; Institute for Software Technology and Parallel Systems, University of Technology, Vienna, Vienna, Austria;" Institute for Software Technology and Parallel Systems, University of Technology, Vienna, Vienna, Austria"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""10"",""1068"",""1083"",""Vienna Fortran, High Performance Fortran (HPF), and other data parallel languages have been introduced to allow the programming of massively parallel distributed-memory machines (DMMP) at a relatively high level of abstraction, based on the SPMD paradigm. Their main features include directives to express the distribution of data and computations across the processors of a machine. In this paper, we use Vienna-Fortran as a general framework for dealing with sparse data structures. We describe new methods for the representation and distribution of such data on DMMPs, and propose simple language features that permit the user to characterize a matrix as """"sparse"""" and specify the associated representation. Together with the data distribution for the matrix, this enables the complier and runtime system to translate sequential sparse code into explicitly parallel message-passing code. We develop new compilation and runtime techniques, which focus on achieving storage economy and reducing communication overhead in the target program. The overall result is a powerful mechanism for dealing efficiently with sparse matrices in data parallel languages and their compilers for DMMPs."",""1558-2183"","""",""10.1109/71.629489"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=629489"","""",""Distributed computing";Sparse matrices;Concurrent computing;Data structures;Parallel languages;Parallel programming;Runtime;Program processors;High performance computing;"Government"","""",""33"",""3"",""27"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;
"Worst case analysis of Lawler's algorithm for scheduling trees with communication delays,""F. Guinand"; C. Rapine;" D. Trystram"",""Parallel Processing Group, LMC-IMAG, France"; Parallel Processing Group, LMC-IMAG, France;" Parallel Processing Group, LMC-IMAG, France"",""IEEE Transactions on Parallel and Distributed Systems"",""6 Aug 2002"",""1997"",""8"",""10"",""1085"",""1086"",""This paper establishes the exact upper bound for Lawler's heuristic proving that its schedule of a UECT tree on m identical processors does not exceed an optimal solution by more than m/2 time units."",""1558-2183"","""",""10.1109/71.629491"","""",""https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=629491"","""",""Computer aided software engineering";Algorithm design and analysis;Scheduling algorithm;Optimal scheduling;Processor scheduling;Tree graphs;Delay effects;Costs;Upper bound;"Parallel machines"","""",""6"","""",""3"",""IEEE"",""6 Aug 2002"","""","""",""IEEE"",""IEEE Journals""";;;;;;;;;;